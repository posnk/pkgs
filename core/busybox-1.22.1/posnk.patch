diff -rupN busybox-1.22.1/coreutils/chown.c ../src3m/busybox-1.22.1/coreutils/chown.c
--- busybox-1.22.1/coreutils/chown.c	2014-01-20 03:38:10.000000000 +0100
+++ ../src3m/busybox-1.22.1/coreutils/chown.c	2015-03-30 00:10:32.594188246 +0200
@@ -125,12 +125,11 @@ int chown_main(int argc UNUSED_PARAM, ch
 
 	/* This matches coreutils behavior (almost - see below) */
 	param.chown_func = chown;
-	if (OPT_NODEREF
 	/* || (OPT_RECURSE && !OPT_TRAVERSE_TOP): */
-	IF_DESKTOP( || (opt & (BIT_RECURSE|BIT_TRAVERSE_TOP)) == BIT_RECURSE)
-	) {
-		param.chown_func = lchown;
-	}
+	//IF_DESKTOP( || (opt & (BIT_RECURSE|BIT_TRAVERSE_TOP)) == BIT_RECURSE)
+	//) {
+	//	param.chown_func = lchown;
+	//}
 
 	flags = ACTION_DEPTHFIRST; /* match coreutils order */
 	if (OPT_RECURSE)
diff -rupN busybox-1.22.1/coreutils/ls.c ../src3m/busybox-1.22.1/coreutils/ls.c
--- busybox-1.22.1/coreutils/ls.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/coreutils/ls.c	2015-03-30 00:10:32.746188251 +0200
@@ -335,7 +335,7 @@ struct dnode {
 	time_t    dn_ctime;
 #endif
 	ino_t     dn_ino;
-	blkcnt_t  dn_blocks;
+	//blkcnt_t  dn_blocks;
 	nlink_t   dn_nlink;
 	uid_t     dn_uid;
 	gid_t     dn_gid;
@@ -521,8 +521,8 @@ static NOINLINE unsigned display_single(
 	if (G.all_fmt & LIST_INO)
 		column += printf("%7llu ", (long long) dn->dn_ino);
 //TODO: -h should affect -s too:
-	if (G.all_fmt & LIST_BLOCKS)
-		column += printf("%6"OFF_FMT"u ", (off_t) (dn->dn_blocks >> 1));
+	//if (G.all_fmt & LIST_BLOCKS)
+	//	column += printf("%6"OFF_FMT"u ", (off_t) (dn->dn_blocks >> 1));
 	if (G.all_fmt & LIST_MODEBITS)
 		column += printf("%-10s ", (char *) bb_mode_string(dn->dn_mode));
 	if (G.all_fmt & LIST_NLINKS)
@@ -754,7 +754,7 @@ static struct dnode *my_stat(const char
 	cur->dn_ctime  = statbuf.st_ctime ;
 #endif
 	cur->dn_ino    = statbuf.st_ino   ;
-	cur->dn_blocks = statbuf.st_blocks;
+//	cur->dn_blocks = statbuf.st_blocks;
 	cur->dn_nlink  = statbuf.st_nlink ;
 	cur->dn_uid    = statbuf.st_uid   ;
 	cur->dn_gid    = statbuf.st_gid   ;
@@ -887,9 +887,9 @@ static int sortcmp(const void *a, const
 		dif = S_ISDIR(d2->dn_mode) - S_ISDIR(d1->dn_mode);
 	} else
 #if defined(HAVE_STRVERSCMP) && HAVE_STRVERSCMP == 1
-	if (sort_opts == SORT_VERSION) {
-		dif = strverscmp(d1->name, d2->name);
-	} else
+//	if (sort_opts == SORT_VERSION) {
+//		dif = strverscmp(d1->name, d2->name);
+//	} else
 #endif
 	if (sort_opts == SORT_EXT) {
 		dif = strcmp(strchrnul(d1->name, '.'), strchrnul(d2->name, '.'));
diff -rupN busybox-1.22.1/coreutils/mknod.c ../src3m/busybox-1.22.1/coreutils/mknod.c
--- busybox-1.22.1/coreutils/mknod.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/coreutils/mknod.c	2015-03-30 00:10:32.646188248 +0200
@@ -26,7 +26,7 @@
 //usage:       "$ mknod /dev/fd0 b 2 0\n"
 //usage:       "$ mknod -m 644 /tmp/pipe p\n"
 
-#include <sys/sysmacros.h>  // For makedev
+//#include <sys/sysmacros.h>  // For makedev
 
 #include "libbb.h"
 #include "libcoreutils/coreutils.h"
diff -rupN busybox-1.22.1/coreutils/touch.c ../src3m/busybox-1.22.1/coreutils/touch.c
--- busybox-1.22.1/coreutils/touch.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/coreutils/touch.c	2015-03-30 00:10:32.790188251 +0200
@@ -166,11 +166,11 @@ int touch_main(int argc UNUSED_PARAM, ch
 
 	do {
 		int result;
-		result = (
-#if ENABLE_FEATURE_TOUCH_NODEREF
-			(opts & OPT_h) ? lutimes :
-#endif
-			utimes)(*argv, (reference_file || date_str) ? timebuf : NULL);
+		result = 0;//(
+//#if ENABLE_FEATURE_TOUCH_NODEREF
+//			(opts & OPT_h) ? lutimes :
+//#endif
+//			utimes)(*argv, (reference_file || date_str) ? timebuf : NULL);
 		if (result != 0) {
 			if (errno == ENOENT) { /* no such file? */
 				if (opts & OPT_c) {
@@ -181,8 +181,8 @@ int touch_main(int argc UNUSED_PARAM, ch
 				fd = open(*argv, O_RDWR | O_CREAT, 0666);
 				if (fd >= 0) {
 					xclose(fd);
-					if (reference_file || date_str)
-						utimes(*argv, timebuf);
+					//if (reference_file || date_str)
+					//	utimes(*argv, timebuf);
 					continue;
 				}
 			}
diff -rupN busybox-1.22.1/docs/busybox.1 ../src3m/busybox-1.22.1/docs/busybox.1
--- busybox-1.22.1/docs/busybox.1	1970-01-01 01:00:00.000000000 +0100
+++ ../src3m/busybox-1.22.1/docs/busybox.1	2015-03-30 00:10:28.306188118 +0200
@@ -0,0 +1,1145 @@
+.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
+.\"
+.\" Standard preamble:
+.\" ========================================================================
+.de Sp \" Vertical space (when we can't use .PP)
+.if t .sp .5v
+.if n .sp
+..
+.de Vb \" Begin verbatim text
+.ft CW
+.nf
+.ne \\$1
+..
+.de Ve \" End verbatim text
+.ft R
+.fi
+..
+.\" Set up some character translations and predefined strings.  \*(-- will
+.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
+.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
+.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
+.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
+.\" nothing in troff, for use with C<>.
+.tr \(*W-
+.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
+.ie n \{\
+.    ds -- \(*W-
+.    ds PI pi
+.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
+.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
+.    ds L" ""
+.    ds R" ""
+.    ds C` ""
+.    ds C' ""
+'br\}
+.el\{\
+.    ds -- \|\(em\|
+.    ds PI \(*p
+.    ds L" ``
+.    ds R" ''
+'br\}
+.\"
+.\" Escape single quotes in literal strings from groff's Unicode transform.
+.ie \n(.g .ds Aq \(aq
+.el       .ds Aq '
+.\"
+.\" If the F register is turned on, we'll generate index entries on stderr for
+.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
+.\" entries marked with X<> in POD.  Of course, you'll have to process the
+.\" output yourself in some meaningful fashion.
+.ie \nF \{\
+.    de IX
+.    tm Index:\\$1\t\\n%\t"\\$2"
+..
+.    nr % 0
+.    rr F
+.\}
+.el \{\
+.    de IX
+..
+.\}
+.\"
+.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
+.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
+.    \" fudge factors for nroff and troff
+.if n \{\
+.    ds #H 0
+.    ds #V .8m
+.    ds #F .3m
+.    ds #[ \f1
+.    ds #] \fP
+.\}
+.if t \{\
+.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
+.    ds #V .6m
+.    ds #F 0
+.    ds #[ \&
+.    ds #] \&
+.\}
+.    \" simple accents for nroff and troff
+.if n \{\
+.    ds ' \&
+.    ds ` \&
+.    ds ^ \&
+.    ds , \&
+.    ds ~ ~
+.    ds /
+.\}
+.if t \{\
+.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
+.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
+.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
+.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
+.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
+.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
+.\}
+.    \" troff and (daisy-wheel) nroff accents
+.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
+.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
+.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
+.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
+.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
+.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
+.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
+.ds ae a\h'-(\w'a'u*4/10)'e
+.ds Ae A\h'-(\w'A'u*4/10)'E
+.    \" corrections for vroff
+.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
+.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
+.    \" for low resolution devices (crt and lpr)
+.if \n(.H>23 .if \n(.V>19 \
+\{\
+.    ds : e
+.    ds 8 ss
+.    ds o a
+.    ds d- d\h'-1'\(ga
+.    ds D- D\h'-1'\(hy
+.    ds th \o'bp'
+.    ds Th \o'LP'
+.    ds ae ae
+.    ds Ae AE
+.\}
+.rm #[ #] #H #V #F C
+.\" ========================================================================
+.\"
+.IX Title "BUSYBOX 1"
+.TH BUSYBOX 1 "2014-05-26" "version 1.22.1" "busybox"
+.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
+.\" way too many mistakes in technical documents.
+.if n .ad l
+.nh
+.SH "NAME"
+BusyBox \- The Swiss Army Knife of Embedded Linux
+.SH "SYNTAX"
+.IX Header "SYNTAX"
+.Vb 1
+\& busybox <applet> [arguments...]  # or
+\&
+\& <applet> [arguments...]          # if symlinked
+.Ve
+.SH "DESCRIPTION"
+.IX Header "DESCRIPTION"
+BusyBox combines tiny versions of many common \s-1UNIX\s0 utilities into a single
+small executable. It provides minimalist replacements for most of the utilities
+you usually find in \s-1GNU\s0 coreutils, util-linux, etc. The utilities in BusyBox
+generally have fewer options than their full-featured \s-1GNU\s0 cousins; however, the
+options that are included provide the expected functionality and behave very
+much like their \s-1GNU\s0 counterparts.
+.PP
+BusyBox has been written with size-optimization and limited resources in mind.
+It is also extremely modular so you can easily include or exclude commands (or
+features) at compile time. This makes it easy to customize your embedded
+systems. To create a working system, just add /dev, /etc, and a Linux kernel.
+BusyBox provides a fairly complete \s-1POSIX\s0 environment for any small or embedded
+system.
+.PP
+BusyBox is extremely configurable.  This allows you to include only the
+components you need, thereby reducing binary size. Run 'make config' or 'make
+menuconfig' to select the functionality that you wish to enable.  Then run
+\&'make' to compile BusyBox using your configuration.
+.PP
+After the compile has finished, you should use 'make install' to install
+BusyBox. This will install the 'bin/busybox' binary, in the target directory
+specified by \s-1CONFIG_PREFIX\s0. \s-1CONFIG_PREFIX\s0 can be set when configuring BusyBox,
+or you can specify an alternative location at install time (i.e., with a
+command line like 'make CONFIG_PREFIX=/tmp/foo install'). If you enabled
+any applet installation scheme (either as symlinks or hardlinks), these will
+also be installed in the location pointed to by \s-1CONFIG_PREFIX\s0.
+.SH "USAGE"
+.IX Header "USAGE"
+BusyBox is a multi-call binary.  A multi-call binary is an executable program
+that performs the same job as more than one utility program.  That means there
+is just a single BusyBox binary, but that single binary acts like a large
+number of utilities.  This allows BusyBox to be smaller since all the built-in
+utility programs (we call them applets) can share code for many common
+operations.
+.PP
+You can also invoke BusyBox by issuing a command as an argument on the
+command line.  For example, entering
+.PP
+.Vb 1
+\&        /bin/busybox ls
+.Ve
+.PP
+will also cause BusyBox to behave as 'ls'.
+.PP
+Of course, adding '/bin/busybox' into every command would be painful.  So most
+people will invoke BusyBox using links to the BusyBox binary.
+.PP
+For example, entering
+.PP
+.Vb 2
+\&        ln \-s /bin/busybox ls
+\&        ./ls
+.Ve
+.PP
+will cause BusyBox to behave as 'ls' (if the 'ls' command has been compiled
+into BusyBox).  Generally speaking, you should never need to make all these
+links yourself, as the BusyBox build system will do this for you when you run
+the 'make install' command.
+.PP
+If you invoke BusyBox with no arguments, it will provide you with a list of the
+applets that have been compiled into your BusyBox binary.
+.SH "COMMON OPTIONS"
+.IX Header "COMMON OPTIONS"
+Most BusyBox applets support the \fB\-\-help\fR argument to provide a terse runtime
+description of their behavior.  If the \s-1CONFIG_FEATURE_VERBOSE_USAGE\s0 option has
+been enabled, more detailed usage information will also be available.
+.SH "COMMANDS"
+.IX Header "COMMANDS"
+Currently available applets include:
+.PP
+.Vb 6
+\&        ash, basename, bash, bunzip2, bzcat, bzip2, cal, cat, chmod, chown,
+\&        clear, cp, cpio, date, dpkg, echo, ed, env, expr, false, getopt,
+\&        gunzip, gzip, hd, hexdump, id, kill, ln, ls, md5sum, mkdir, mknod,
+\&        more, od, printenv, printf, pwd, seq, setsid, sh, sleep, sort,
+\&        split, strings, stty, tail, tar, tee, touch, true, tty, uncompress,
+\&        unzip, usleep, wc, which, whoami, yes, zcat
+.Ve
+.SH "COMMAND DESCRIPTIONS"
+.IX Header "COMMAND DESCRIPTIONS"
+.IP "\fBash\fR" 4
+.IX Item "ash"
+ash [\-/+OPTIONS] [\-/+o \s-1OPT\s0]... [\-c '\s-1SCRIPT\s0' [\s-1ARG0\s0 [\s-1ARGS\s0]] / \s-1FILE\s0 [\s-1ARGS\s0]]
+.Sp
+Unix shell interpreter
+.IP "\fBbasename\fR" 4
+.IX Item "basename"
+basename \s-1FILE\s0 [\s-1SUFFIX\s0]
+.Sp
+Strip directory path and .SUFFIX from \s-1FILE\s0
+.IP "\fBbash\fR" 4
+.IX Item "bash"
+bash [\-/+OPTIONS] [\-/+o \s-1OPT\s0]... [\-c '\s-1SCRIPT\s0' [\s-1ARG0\s0 [\s-1ARGS\s0]] / \s-1FILE\s0 [\s-1ARGS\s0]]
+.Sp
+Unix shell interpreter
+.IP "\fBbunzip2\fR" 4
+.IX Item "bunzip2"
+bunzip2 [\-cf] [\s-1FILE\s0]...
+.Sp
+Decompress FILEs (or stdin)
+.Sp
+.Vb 2
+\&        \-c      Write to stdout
+\&        \-f      Force
+.Ve
+.IP "\fBbzcat\fR" 4
+.IX Item "bzcat"
+bzcat [\s-1FILE\s0]...
+.Sp
+Decompress to stdout
+.IP "\fBbzip2\fR" 4
+.IX Item "bzip2"
+bzip2 [\s-1OPTIONS\s0] [\s-1FILE\s0]...
+.Sp
+Compress FILEs (or stdin) with bzip2 algorithm
+.Sp
+.Vb 4
+\&        \-1..9   Compression level
+\&        \-d      Decompress
+\&        \-c      Write to stdout
+\&        \-f      Force
+.Ve
+.IP "\fBcal\fR" 4
+.IX Item "cal"
+cal [\-jy] [[\s-1MONTH\s0] \s-1YEAR\s0]
+.Sp
+Display a calendar
+.Sp
+.Vb 2
+\&        \-j      Use julian dates
+\&        \-y      Display the entire year
+.Ve
+.IP "\fBcat\fR" 4
+.IX Item "cat"
+cat [\s-1FILE\s0]...
+.Sp
+Concatenate FILEs and print them to stdout
+.IP "\fBchmod\fR" 4
+.IX Item "chmod"
+chmod [\-R] MODE[,MODE]... \s-1FILE\s0...
+.Sp
+Each \s-1MODE\s0 is one or more of the letters ugoa, one of the
+symbols +\-= and one or more of the letters rwxst
+.Sp
+.Vb 1
+\&        \-R      Recurse
+.Ve
+.IP "\fBchown\fR" 4
+.IX Item "chown"
+chown [\-RhLHP]... OWNER[<.|:>[\s-1GROUP\s0]] \s-1FILE\s0...
+.Sp
+Change the owner and/or group of each \s-1FILE\s0 to \s-1OWNER\s0 and/or \s-1GROUP\s0
+.Sp
+.Vb 5
+\&        \-R      Recurse
+\&        \-h      Affect symlinks instead of symlink targets
+\&        \-L      Traverse all symlinks to directories
+\&        \-H      Traverse symlinks on command line only
+\&        \-P      Don\*(Aqt traverse symlinks (default)
+.Ve
+.IP "\fBclear\fR" 4
+.IX Item "clear"
+clear
+.Sp
+Clear screen
+.IP "\fBcp\fR" 4
+.IX Item "cp"
+cp [\s-1OPTIONS\s0] \s-1SOURCE\s0... \s-1DEST\s0
+.Sp
+Copy \s-1SOURCE\s0(s) to \s-1DEST\s0
+.Sp
+.Vb 9
+\&        \-a      Same as \-dpR
+\&        \-R,\-r   Recurse
+\&        \-d,\-P   Preserve symlinks (default if \-R)
+\&        \-L      Follow all symlinks
+\&        \-H      Follow symlinks on command line
+\&        \-p      Preserve file attributes if possible
+\&        \-f      Overwrite
+\&        \-i      Prompt before overwrite
+\&        \-l,\-s   Create (sym)links
+.Ve
+.IP "\fBcpio\fR" 4
+.IX Item "cpio"
+cpio [\-dmvu] [\-F \s-1FILE\s0] [\-H newc] [\-tio] [\-p \s-1DIR\s0] [\s-1EXTR_FILE\s0]...
+.Sp
+Extract or list files from a cpio archive, or
+create an archive (\-o) or copy files (\-p) using file list on stdin
+.Sp
+Main operation mode:
+.Sp
+.Vb 10
+\&        \-t      List
+\&        \-i      Extract EXTR_FILEs (or all)
+\&        \-o      Create (requires \-H newc)
+\&        \-p DIR  Copy files to DIR
+\&        \-d      Make leading directories
+\&        \-m      Preserve mtime
+\&        \-v      Verbose
+\&        \-u      Overwrite
+\&        \-F FILE Input (\-t,\-i,\-p) or output (\-o) file
+\&        \-H newc Archive format
+.Ve
+.IP "\fBdate\fR" 4
+.IX Item "date"
+date [\s-1OPTIONS\s0] [+FMT] [\s-1TIME\s0]
+.Sp
+Display time (using +FMT), or set time
+.Sp
+.Vb 10
+\&        [\-s,\-\-set] TIME Set time to TIME
+\&        \-u,\-\-utc        Work in UTC (don\*(Aqt convert to local time)
+\&        \-R,\-\-rfc\-2822   Output RFC\-2822 compliant date string
+\&        \-I[SPEC]        Output ISO\-8601 compliant date string
+\&                        SPEC=\*(Aqdate\*(Aq (default) for date only,
+\&                        \*(Aqhours\*(Aq, \*(Aqminutes\*(Aq, or \*(Aqseconds\*(Aq for date and
+\&                        time to the indicated precision
+\&        \-r,\-\-reference FILE     Display last modification time of FILE
+\&        \-d,\-\-date TIME  Display TIME, not \*(Aqnow\*(Aq
+\&        \-D FMT          Use FMT for \-d TIME conversion
+.Ve
+.Sp
+Recognized \s-1TIME\s0 formats:
+.Sp
+.Vb 5
+\&        hh:mm[:ss]
+\&        [YYYY.]MM.DD\-hh:mm[:ss]
+\&        YYYY\-MM\-DD hh:mm[:ss]
+\&        [[[[[YY]YY]MM]DD]hh]mm[.ss]
+\&        \*(Aqdate TIME\*(Aq form accepts MMDDhhmm[[YY]YY][.ss] instead
+.Ve
+.IP "\fBdpkg\fR" 4
+.IX Item "dpkg"
+dpkg [\-ilCPru] [\-F \s-1OPT\s0] \s-1PACKAGE\s0
+.Sp
+Install, remove and manage Debian packages
+.Sp
+.Vb 9
+\&        \-i,\-\-install    Install the package
+\&        \-l,\-\-list       List of installed packages
+\&        \-\-configure     Configure an unpackaged package
+\&        \-P,\-\-purge      Purge all files of a package
+\&        \-r,\-\-remove     Remove all but the configuration files for a package
+\&        \-\-unpack        Unpack a package, but don\*(Aqt configure it
+\&        \-\-force\-depends Ignore dependency problems
+\&        \-\-force\-confnew Overwrite existing config files when installing
+\&        \-\-force\-confold Keep old config files when installing
+.Ve
+.IP "\fBecho\fR" 4
+.IX Item "echo"
+echo [\-neE] [\s-1ARG\s0]...
+.Sp
+Print the specified ARGs to stdout
+.Sp
+.Vb 3
+\&        \-n      Suppress trailing newline
+\&        \-e      Interpret backslash escapes (i.e., \et=tab)
+\&        \-E      Don\*(Aqt interpret backslash escapes (default)
+.Ve
+.IP "\fBed\fR" 4
+.IX Item "ed"
+ed
+.IP "\fBenv\fR" 4
+.IX Item "env"
+env [\-iu] [\-] [name=value]... [\s-1PROG\s0 \s-1ARGS\s0]
+.Sp
+Print the current environment or run \s-1PROG\s0 after setting up
+the specified environment
+.Sp
+.Vb 2
+\&        \-, \-i   Start with an empty environment
+\&        \-u      Remove variable from the environment
+.Ve
+.IP "\fBexpr\fR" 4
+.IX Item "expr"
+expr \s-1EXPRESSION\s0
+.Sp
+Print the value of \s-1EXPRESSION\s0 to stdout
+.Sp
+\&\s-1EXPRESSION\s0 may be:
+.Sp
+.Vb 10
+\&        ARG1 | ARG2     ARG1 if it is neither null nor 0, otherwise ARG2
+\&        ARG1 & ARG2     ARG1 if neither argument is null or 0, otherwise 0
+\&        ARG1 < ARG2     1 if ARG1 is less than ARG2, else 0. Similarly:
+\&        ARG1 <= ARG2
+\&        ARG1 = ARG2
+\&        ARG1 != ARG2
+\&        ARG1 >= ARG2
+\&        ARG1 > ARG2
+\&        ARG1 + ARG2     Sum of ARG1 and ARG2. Similarly:
+\&        ARG1 \- ARG2
+\&        ARG1 * ARG2
+\&        ARG1 / ARG2
+\&        ARG1 % ARG2
+\&        STRING : REGEXP         Anchored pattern match of REGEXP in STRING
+\&        match STRING REGEXP     Same as STRING : REGEXP
+\&        substr STRING POS LENGTH Substring of STRING, POS counted from 1
+\&        index STRING CHARS      Index in STRING where any CHARS is found, or 0
+\&        length STRING           Length of STRING
+\&        quote TOKEN             Interpret TOKEN as a string, even if
+\&                                it is a keyword like \*(Aqmatch\*(Aq or an
+\&                                operator like \*(Aq/\*(Aq
+\&        (EXPRESSION)            Value of EXPRESSION
+.Ve
+.Sp
+Beware that many operators need to be escaped or quoted for shells.
+Comparisons are arithmetic if both ARGs are numbers, else
+lexicographical. Pattern matches return the string matched between
+\&\e( and \e) or null; if \e( and \e) are not used, they return the number
+of characters matched or 0.
+.IP "\fBfalse\fR" 4
+.IX Item "false"
+false
+.Sp
+Return an exit code of \s-1FALSE\s0 (1)
+.IP "\fBgetopt\fR" 4
+.IX Item "getopt"
+getopt [\s-1OPTIONS\s0] [\-\-] \s-1OPTSTRING\s0 \s-1PARAMS\s0
+.Sp
+.Vb 7
+\&        \-n,\-\-name=PROGNAME              The name under which errors are reported
+\&        \-o,\-\-options=OPTSTRING          Short options to recognize
+\&        \-q,\-\-quiet                      No error messages on unrecognized options
+\&        \-Q,\-\-quiet\-output               No normal output
+\&        \-s,\-\-shell=SHELL                Set shell quoting conventions
+\&        \-T,\-\-test                       Version test (exits with 4)
+\&        \-u,\-\-unquoted                   Don\*(Aqt quote output
+.Ve
+.IP "\fBgunzip\fR" 4
+.IX Item "gunzip"
+gunzip [\-cft] [\s-1FILE\s0]...
+.Sp
+Decompress FILEs (or stdin)
+.Sp
+.Vb 3
+\&        \-c      Write to stdout
+\&        \-f      Force
+\&        \-t      Test file integrity
+.Ve
+.IP "\fBgzip\fR" 4
+.IX Item "gzip"
+gzip [\-cfd] [\s-1FILE\s0]...
+.Sp
+Compress FILEs (or stdin)
+.Sp
+.Vb 3
+\&        \-d      Decompress
+\&        \-c      Write to stdout
+\&        \-f      Force
+.Ve
+.IP "\fBhd\fR" 4
+.IX Item "hd"
+hd \s-1FILE\s0...
+.Sp
+hd is an alias for hexdump \-C
+.IP "\fBhexdump\fR" 4
+.IX Item "hexdump"
+hexdump [\-bcCdefnosvxR] [\s-1FILE\s0]...
+.Sp
+Display FILEs (or stdin) in a user specified format
+.Sp
+.Vb 12
+\&        \-b              One\-byte octal display
+\&        \-c              One\-byte character display
+\&        \-C              Canonical hex+ASCII, 16 bytes per line
+\&        \-d              Two\-byte decimal display
+\&        \-e FORMAT_STRING
+\&        \-f FORMAT_FILE
+\&        \-n LENGTH       Interpret only LENGTH bytes of input
+\&        \-o              Two\-byte octal display
+\&        \-s OFFSET       Skip OFFSET bytes
+\&        \-v              Display all input data
+\&        \-x              Two\-byte hexadecimal display
+\&        \-R              Reverse of \*(Aqhexdump \-Cv\*(Aq
+.Ve
+.IP "\fBid\fR" 4
+.IX Item "id"
+id [\s-1OPTIONS\s0] [\s-1USER\s0]
+.Sp
+Print information about \s-1USER\s0 or the current user
+.Sp
+.Vb 5
+\&        \-u      User ID
+\&        \-g      Group ID
+\&        \-G      Supplementary group IDs
+\&        \-n      Print names instead of numbers
+\&        \-r      Print real ID instead of effective ID
+.Ve
+.IP "\fBkill\fR" 4
+.IX Item "kill"
+kill [\-l] [\-SIG] \s-1PID\s0...
+.Sp
+Send a signal (default: \s-1TERM\s0) to given PIDs
+.Sp
+.Vb 1
+\&        \-l      List all signal names and numbers
+.Ve
+.IP "\fBln\fR" 4
+.IX Item "ln"
+ln [\s-1OPTIONS\s0] \s-1TARGET\s0... LINK|DIR
+.Sp
+Create a link \s-1LINK\s0 or \s-1DIR/TARGET\s0 to the specified \s-1TARGET\s0(s)
+.Sp
+.Vb 7
+\&        \-s      Make symlinks instead of hardlinks
+\&        \-f      Remove existing destinations
+\&        \-n      Don\*(Aqt dereference symlinks \- treat like normal file
+\&        \-b      Make a backup of the target (if exists) before link operation
+\&        \-S suf  Use suffix instead of ~ when making backup files
+\&        \-T      2nd arg must be a DIR
+\&        \-v      Verbose
+.Ve
+.IP "\fBls\fR" 4
+.IX Item "ls"
+ls [\-1AaCxdLHRFplinsehrSXvctu] [\-w \s-1WIDTH\s0] [\s-1FILE\s0]...
+.Sp
+List directory contents
+.Sp
+.Vb 10
+\&        \-1      One column output
+\&        \-a      Include entries which start with .
+\&        \-A      Like \-a, but exclude . and ..
+\&        \-C      List by columns
+\&        \-x      List by lines
+\&        \-d      List directory entries instead of contents
+\&        \-L      Follow symlinks
+\&        \-H      Follow symlinks on command line
+\&        \-R      Recurse
+\&        \-p      Append / to dir entries
+\&        \-F      Append indicator (one of */=@|) to entries
+\&        \-l      Long listing format
+\&        \-i      List inode numbers
+\&        \-n      List numeric UIDs and GIDs instead of names
+\&        \-s      List allocated blocks
+\&        \-e      List full date and time
+\&        \-h      List sizes in human readable format (1K 243M 2G)
+\&        \-r      Sort in reverse order
+\&        \-S      Sort by size
+\&        \-X      Sort by extension
+\&        \-v      Sort by version
+\&        \-c      With \-l: sort by ctime
+\&        \-t      With \-l: sort by mtime
+\&        \-u      With \-l: sort by atime
+\&        \-w N    Assume the terminal is N columns wide
+\&        \-\-color[={always,never,auto}]   Control coloring
+.Ve
+.IP "\fBmd5sum\fR" 4
+.IX Item "md5sum"
+md5sum [\-c[sw]] [\s-1FILE\s0]...
+.Sp
+Print or check \s-1MD5\s0 checksums
+.Sp
+.Vb 3
+\&        \-c      Check sums against list in FILEs
+\&        \-s      Don\*(Aqt output anything, status code shows success
+\&        \-w      Warn about improperly formatted checksum lines
+.Ve
+.IP "\fBmkdir\fR" 4
+.IX Item "mkdir"
+mkdir [\s-1OPTIONS\s0] \s-1DIRECTORY\s0...
+.Sp
+Create \s-1DIRECTORY\s0
+.Sp
+.Vb 2
+\&        \-m MODE Mode
+\&        \-p      No error if exists; make parent directories as needed
+.Ve
+.IP "\fBmknod\fR" 4
+.IX Item "mknod"
+mknod [\-m \s-1MODE\s0] \s-1NAME\s0 \s-1TYPE\s0 \s-1MAJOR\s0 \s-1MINOR\s0
+.Sp
+Create a special file (block, character, or pipe)
+.Sp
+.Vb 5
+\&        \-m MODE Creation mode (default a=rw)
+\&TYPE:
+\&        b       Block device
+\&        c or u  Character device
+\&        p       Named pipe (MAJOR and MINOR are ignored)
+.Ve
+.IP "\fBmore\fR" 4
+.IX Item "more"
+more [\s-1FILE\s0]...
+.Sp
+View \s-1FILE\s0 (or stdin) one screenful at a time
+.IP "\fBod\fR" 4
+.IX Item "od"
+od [\-aBbcDdeFfHhIiLlOovXx] [\s-1FILE\s0]
+.Sp
+Print \s-1FILE\s0 (or stdin) unambiguously, as octal bytes by default
+.IP "\fBprintenv\fR" 4
+.IX Item "printenv"
+printenv [\s-1VARIABLE\s0]...
+.Sp
+Print environment VARIABLEs.
+If no \s-1VARIABLE\s0 specified, print all.
+.IP "\fBprintf\fR" 4
+.IX Item "printf"
+printf \s-1FORMAT\s0 [\s-1ARG\s0]...
+.Sp
+Format and print \s-1ARG\s0(s) according to \s-1FORMAT\s0 (a\-la C printf)
+.IP "\fBpwd\fR" 4
+.IX Item "pwd"
+pwd
+.Sp
+Print the full filename of the current working directory
+.IP "\fBseq\fR" 4
+.IX Item "seq"
+seq [\-w] [\-s \s-1SEP\s0] [\s-1FIRST\s0 [\s-1INC\s0]] \s-1LAST\s0
+.Sp
+Print numbers from \s-1FIRST\s0 to \s-1LAST\s0, in steps of \s-1INC\s0.
+\&\s-1FIRST\s0, \s-1INC\s0 default to 1.
+.Sp
+.Vb 2
+\&        \-w      Pad to last with leading zeros
+\&        \-s SEP  String separator
+.Ve
+.IP "\fBsetsid\fR" 4
+.IX Item "setsid"
+setsid \s-1PROG\s0 \s-1ARGS\s0
+.Sp
+Run \s-1PROG\s0 in a new session. \s-1PROG\s0 will have no controlling terminal
+and will not be affected by keyboard signals (Ctrl-C etc).
+See \fIsetsid\fR\|(2) for details.
+.IP "\fBsh\fR" 4
+.IX Item "sh"
+sh [\-/+OPTIONS] [\-/+o \s-1OPT\s0]... [\-c '\s-1SCRIPT\s0' [\s-1ARG0\s0 [\s-1ARGS\s0]] / \s-1FILE\s0 [\s-1ARGS\s0]]
+.Sp
+Unix shell interpreter
+.IP "\fBsleep\fR" 4
+.IX Item "sleep"
+sleep [N]...
+.Sp
+Pause for a time equal to the total of the args given, where each arg can
+have an optional suffix of (s)econds, (m)inutes, (h)ours, or (d)ays
+.IP "\fBsort\fR" 4
+.IX Item "sort"
+sort [\-nrugMcszbdfimSTokt] [\-o \s-1FILE\s0] [\-k start[.offset][opts][,end[.offset][opts]] [\-t \s-1CHAR\s0] [\s-1FILE\s0]...
+.Sp
+Sort lines of text
+.Sp
+.Vb 10
+\&        \-b      Ignore leading blanks
+\&        \-c      Check whether input is sorted
+\&        \-d      Dictionary order (blank or alphanumeric only)
+\&        \-f      Ignore case
+\&        \-g      General numerical sort
+\&        \-i      Ignore unprintable characters
+\&        \-k      Sort key
+\&        \-M      Sort month
+\&        \-n      Sort numbers
+\&        \-o      Output to file
+\&        \-k      Sort by key
+\&        \-t CHAR Key separator
+\&        \-r      Reverse sort order
+\&        \-s      Stable (don\*(Aqt sort ties alphabetically)
+\&        \-u      Suppress duplicate lines
+\&        \-z      Lines are terminated by NUL, not newline
+\&        \-mST    Ignored for GNU compatibility
+.Ve
+.IP "\fBsplit\fR" 4
+.IX Item "split"
+split [\s-1OPTIONS\s0] [\s-1INPUT\s0 [\s-1PREFIX\s0]]
+.Sp
+.Vb 3
+\&        \-b N[k|m]       Split by N (kilo|mega)bytes
+\&        \-l N            Split by N lines
+\&        \-a N            Use N letters as suffix
+.Ve
+.IP "\fBstrings\fR" 4
+.IX Item "strings"
+strings [\-afo] [\-n \s-1LEN\s0] [\s-1FILE\s0]...
+.Sp
+Display printable strings in a binary file
+.Sp
+.Vb 4
+\&        \-a      Scan whole file (default)
+\&        \-f      Precede strings with filenames
+\&        \-n LEN  At least LEN characters form a string (default 4)
+\&        \-o      Precede strings with decimal offsets
+.Ve
+.IP "\fBstty\fR" 4
+.IX Item "stty"
+stty [\-a|g] [\-F \s-1DEVICE\s0] [\s-1SETTING\s0]...
+.Sp
+Without arguments, prints baud rate, line discipline,
+and deviations from stty sane
+.Sp
+.Vb 4
+\&        \-F DEVICE       Open device instead of stdin
+\&        \-a              Print all current settings in human\-readable form
+\&        \-g              Print in stty\-readable form
+\&        [SETTING]       See manpage
+.Ve
+.IP "\fBtail\fR" 4
+.IX Item "tail"
+tail [\s-1OPTIONS\s0] [\s-1FILE\s0]...
+.Sp
+Print last 10 lines of each \s-1FILE\s0 (or stdin) to stdout.
+With more than one \s-1FILE\s0, precede each with a filename header.
+.Sp
+.Vb 7
+\&        \-f              Print data as file grows
+\&        \-s SECONDS      Wait SECONDS between reads with \-f
+\&        \-n N[kbm]       Print last N lines
+\&        \-n +N[kbm]      Start on Nth line and print the rest
+\&        \-c [+]N[kbm]    Print last N bytes
+\&        \-q              Never print headers
+\&        \-v              Always print headers
+.Ve
+.Sp
+N may be suffixed by k (x1024), b (x512), or m (x1024^2).
+.IP "\fBtar\fR" 4
+.IX Item "tar"
+tar \-[cxtzhmvO] [\-X \s-1FILE\s0] [\-T \s-1FILE\s0] [\-f \s-1TARFILE\s0] [\-C \s-1DIR\s0] [\s-1FILE\s0]...
+.Sp
+Create, extract, or list files from a tar file
+.Sp
+Operation:
+.Sp
+.Vb 10
+\&        c       Create
+\&        x       Extract
+\&        t       List
+\&        f       Name of TARFILE (\*(Aq\-\*(Aq for stdin/out)
+\&        C       Change to DIR before operation
+\&        v       Verbose
+\&        z       (De)compress using gzip
+\&        O       Extract to stdout
+\&        h       Follow symlinks
+\&        m       Don\*(Aqt restore mtime
+\&        exclude File to exclude
+\&        X       File with names to exclude
+\&        T       File with names to include
+.Ve
+.IP "\fBtee\fR" 4
+.IX Item "tee"
+tee [\-ai] [\s-1FILE\s0]...
+.Sp
+Copy stdin to each \s-1FILE\s0, and also to stdout
+.Sp
+.Vb 2
+\&        \-a      Append to the given FILEs, don\*(Aqt overwrite
+\&        \-i      Ignore interrupt signals (SIGINT)
+.Ve
+.IP "\fBtouch\fR" 4
+.IX Item "touch"
+touch [\-c] \s-1FILE\s0...
+.Sp
+Update the last-modified date on the given FILE[s]
+.Sp
+.Vb 1
+\&        \-c      Don\*(Aqt create files
+.Ve
+.IP "\fBtrue\fR" 4
+.IX Item "true"
+true
+.Sp
+Return an exit code of \s-1TRUE\s0 (0)
+.IP "\fBtty\fR" 4
+.IX Item "tty"
+tty
+.Sp
+Print file name of stdin's terminal
+.IP "\fBuncompress\fR" 4
+.IX Item "uncompress"
+uncompress [\-cf] [\s-1FILE\s0]...
+.Sp
+Decompress .Z file[s]
+.Sp
+.Vb 2
+\&        \-c      Write to stdout
+\&        \-f      Overwrite
+.Ve
+.IP "\fBunzip\fR" 4
+.IX Item "unzip"
+unzip [\-lnopq] FILE[.zip] [\s-1FILE\s0]... [\-x \s-1FILE\s0...] [\-d \s-1DIR\s0]
+.Sp
+Extract FILEs from \s-1ZIP\s0 archive
+.Sp
+.Vb 7
+\&        \-l      List contents (with \-q for short form)
+\&        \-n      Never overwrite files (default: ask)
+\&        \-o      Overwrite
+\&        \-p      Print to stdout
+\&        \-q      Quiet
+\&        \-x FILE Exclude FILEs
+\&        \-d DIR  Extract into DIR
+.Ve
+.IP "\fBusleep\fR" 4
+.IX Item "usleep"
+usleep N
+.Sp
+Pause for N microseconds
+.IP "\fBwc\fR" 4
+.IX Item "wc"
+wc [\-clwL] [\s-1FILE\s0]...
+.Sp
+Count lines, words, and bytes for each \s-1FILE\s0 (or stdin)
+.Sp
+.Vb 4
+\&        \-c      Count bytes
+\&        \-l      Count newlines
+\&        \-w      Count words
+\&        \-L      Print longest line length
+.Ve
+.IP "\fBwhich\fR" 4
+.IX Item "which"
+which [\s-1COMMAND\s0]...
+.Sp
+Locate a \s-1COMMAND\s0
+.IP "\fBwhoami\fR" 4
+.IX Item "whoami"
+whoami
+.Sp
+Print the user name associated with the current effective user id
+.IP "\fByes\fR" 4
+.IX Item "yes"
+yes [\s-1STRING\s0]
+.Sp
+Repeatedly output a line with \s-1STRING\s0, or 'y'
+.IP "\fBzcat\fR" 4
+.IX Item "zcat"
+zcat [\s-1FILE\s0]...
+.Sp
+Decompress to stdout
+.SH "LIBC NSS"
+.IX Header "LIBC NSS"
+\&\s-1GNU\s0 Libc (glibc) uses the Name Service Switch (\s-1NSS\s0) to configure the behavior
+of the C library for the local environment, and to configure how it reads
+system data, such as passwords and group information.  This is implemented
+using an /etc/nsswitch.conf configuration file, and using one or more of the
+/lib/libnss_* libraries.  BusyBox tries to avoid using any libc calls that make
+use of \s-1NSS\s0.  Some applets however, such as login and su, will use libc functions
+that require \s-1NSS\s0.
+.PP
+If you enable \s-1CONFIG_USE_BB_PWD_GRP\s0, BusyBox will use internal functions to
+directly access the /etc/passwd, /etc/group, and /etc/shadow files without
+using \s-1NSS\s0.  This may allow you to run your system without the need for
+installing any of the \s-1NSS\s0 configuration files and libraries.
+.PP
+When used with glibc, the BusyBox 'networking' applets will similarly require
+that you install at least some of the glibc \s-1NSS\s0 stuff (in particular,
+/etc/nsswitch.conf, /lib/libnss_dns*, /lib/libnss_files*, and /lib/libresolv*).
+.PP
+Shameless Plug: As an alternative, one could use a C library such as uClibc.  In
+addition to making your system significantly smaller, uClibc does not require the
+use of any \s-1NSS\s0 support files or libraries.
+.SH "MAINTAINER"
+.IX Header "MAINTAINER"
+Denis Vlasenko <vda.linux@googlemail.com>
+.SH "AUTHORS"
+.IX Header "AUTHORS"
+The following people have contributed code to BusyBox whether they know it or
+not.  If you have written code included in BusyBox, you should probably be
+listed here so you can obtain your bit of eternal glory.  If you should be
+listed here, or the description of what you have done needs more detail, or is
+incorrect, please send in an update.
+.PP
+Emanuele Aina <emanuele.aina@tiscali.it>
+    run-parts
+.PP
+Erik Andersen <andersen@codepoet.org>
+.PP
+.Vb 4
+\&    Tons of new stuff, major rewrite of most of the
+\&    core apps, tons of new apps as noted in header files.
+\&    Lots of tedious effort writing these boring docs that
+\&    nobody is going to actually read.
+.Ve
+.PP
+Laurence Anderson <l.d.anderson@warwick.ac.uk>
+.PP
+.Vb 1
+\&    rpm2cpio, unzip, get_header_cpio, read_gz interface, rpm
+.Ve
+.PP
+Jeff Angielski <jeff@theptrgroup.com>
+.PP
+.Vb 1
+\&    ftpput, ftpget
+.Ve
+.PP
+Edward Betts <edward@debian.org>
+.PP
+.Vb 1
+\&    expr, hostid, logname, whoami
+.Ve
+.PP
+John Beppu <beppu@codepoet.org>
+.PP
+.Vb 1
+\&    du, nslookup, sort
+.Ve
+.PP
+Brian Candler <B.Candler@pobox.com>
+.PP
+.Vb 1
+\&    tiny\-ls(ls)
+.Ve
+.PP
+Randolph Chung <tausq@debian.org>
+.PP
+.Vb 1
+\&    fbset, ping, hostname
+.Ve
+.PP
+Dave Cinege <dcinege@psychosis.com>
+.PP
+.Vb 2
+\&    more(v2), makedevs, dutmp, modularization, auto links file,
+\&    various fixes, Linux Router Project maintenance
+.Ve
+.PP
+Jordan Crouse <jordan@cosmicpenguin.net>
+.PP
+.Vb 1
+\&    ipcalc
+.Ve
+.PP
+Magnus Damm <damm@opensource.se>
+.PP
+.Vb 1
+\&    tftp client insmod powerpc support
+.Ve
+.PP
+Larry Doolittle <ldoolitt@recycle.lbl.gov>
+.PP
+.Vb 1
+\&    pristine source directory compilation, lots of patches and fixes.
+.Ve
+.PP
+Glenn Engel <glenne@engel.org>
+.PP
+.Vb 1
+\&    httpd
+.Ve
+.PP
+Gennady Feldman <gfeldman@gena01.com>
+.PP
+.Vb 2
+\&    Sysklogd (single threaded syslogd, IPC Circular buffer support,
+\&    logread), various fixes.
+.Ve
+.PP
+Karl M. Hegbloom <karlheg@debian.org>
+.PP
+.Vb 1
+\&    cp_mv.c, the test suite, various fixes to utility.c, &c.
+.Ve
+.PP
+Daniel Jacobowitz <dan@debian.org>
+.PP
+.Vb 1
+\&    mktemp.c
+.Ve
+.PP
+Matt Kraai <kraai@alumni.cmu.edu>
+.PP
+.Vb 1
+\&    documentation, bugfixes, test suite
+.Ve
+.PP
+Stephan Linz <linz@li\-pro.net>
+.PP
+.Vb 1
+\&    ipcalc, Red Hat equivalence
+.Ve
+.PP
+John Lombardo <john@deltanet.com>
+.PP
+.Vb 1
+\&    tr
+.Ve
+.PP
+Glenn McGrath <bug1@iinet.net.au>
+.PP
+.Vb 3
+\&    Common unarchiving code and unarchiving applets, ifupdown, ftpgetput,
+\&    nameif, sed, patch, fold, install, uudecode.
+\&    Various bugfixes, review and apply numerous patches.
+.Ve
+.PP
+Manuel Novoa \s-1III\s0 <mjn3@codepoet.org>
+.PP
+.Vb 3
+\&    cat, head, mkfifo, mknod, rmdir, sleep, tee, tty, uniq, usleep, wc, yes,
+\&    mesg, vconfig, make_directory, parse_mode, dirname, mode_string,
+\&    get_last_path_component, simplify_path, and a number trivial libbb routines
+\&
+\&    also bug fixes, partial rewrites, and size optimizations in
+\&    ash, basename, cal, cmp, cp, df, du, echo, env, ln, logname, md5sum, mkdir,
+\&    mv, realpath, rm, sort, tail, touch, uname, watch, arith, human_readable,
+\&    interface, dutmp, ifconfig, route
+.Ve
+.PP
+Vladimir Oleynik <dzo@simtreas.ru>
+.PP
+.Vb 4
+\&    cmdedit; xargs(current), httpd(current);
+\&    ports: ash, crond, fdisk, inetd, stty, traceroute, top;
+\&    locale, various fixes
+\&    and irreconcilable critic of everything not perfect.
+.Ve
+.PP
+Bruce Perens <bruce@pixar.com>
+.PP
+.Vb 2
+\&    Original author of BusyBox in 1995, 1996. Some of his code can
+\&    still be found hiding here and there...
+.Ve
+.PP
+Tim Riker <Tim@Rikers.org>
+.PP
+.Vb 1
+\&    bug fixes, member of fan club
+.Ve
+.PP
+Kent Robotti <robotti@metconnect.com>
+.PP
+.Vb 1
+\&    reset, tons and tons of bug reports and patches.
+.Ve
+.PP
+Chip Rosenthal <chip@unicom.com>, <crosenth@covad.com>
+.PP
+.Vb 1
+\&    wget \- Contributed by permission of Covad Communications
+.Ve
+.PP
+Pavel Roskin <proski@gnu.org>
+.PP
+.Vb 1
+\&    Lots of bugs fixes and patches.
+.Ve
+.PP
+Gyepi Sam <gyepi@praxis\-sw.com>
+.PP
+.Vb 1
+\&    Remote logging feature for syslogd
+.Ve
+.PP
+Linus Torvalds <torvalds@transmeta.com>
+.PP
+.Vb 1
+\&    mkswap, fsck.minix, mkfs.minix
+.Ve
+.PP
+Mark Whitley <markw@codepoet.org>
+.PP
+.Vb 2
+\&    grep, sed, cut, xargs(previous),
+\&    style\-guide, new\-applet\-HOWTO, bug fixes, etc.
+.Ve
+.PP
+Charles P. Wright <cpwright@villagenet.com>
+.PP
+.Vb 1
+\&    gzip, mini\-netcat(nc)
+.Ve
+.PP
+Enrique Zanardi <ezanardi@ull.es>
+.PP
+.Vb 1
+\&    tarcat (since removed), loadkmap, various fixes, Debian maintenance
+.Ve
+.PP
+Tito Ragusa <farmatito@tiscali.it>
+.PP
+.Vb 1
+\&    devfsd and size optimizations in strings, openvt and deallocvt.
+.Ve
+.PP
+Paul Fox <pgf@foxharp.boston.ma.us>
+.PP
+.Vb 1
+\&    vi editing mode for ash, various other patches/fixes
+.Ve
+.PP
+Roberto A. Foglietta <me@roberto.foglietta.name>
+.PP
+.Vb 1
+\&    port: dnsd
+.Ve
+.PP
+Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
+.PP
+.Vb 1
+\&    misc
+.Ve
+.PP
+Mike Frysinger <vapier@gentoo.org>
+.PP
+.Vb 1
+\&    initial e2fsprogs, printenv, setarch, sum, misc
+.Ve
+.PP
+Jie Zhang <jie.zhang@analog.com>
+.PP
+.Vb 1
+\&    fixed two bugs in msh and hush (exitcode of killed processes)
+.Ve
diff -rupN busybox-1.22.1/docs/BusyBox.html ../src3m/busybox-1.22.1/docs/BusyBox.html
--- busybox-1.22.1/docs/BusyBox.html	1970-01-01 01:00:00.000000000 +0100
+++ ../src3m/busybox-1.22.1/docs/BusyBox.html	2015-03-30 00:10:28.286188117 +0200
@@ -0,0 +1,930 @@
+<?xml version="1.0" ?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<title>BusyBox - The Swiss Army Knife of Embedded Linux</title>
+<meta http-equiv="content-type" content="text/html; charset=utf-8" />
+<link rev="made" href="mailto:root@localhost" />
+</head>
+
+<body style="background-color: white">
+
+
+<!-- INDEX BEGIN -->
+<div name="index">
+<p><a name="__index__"></a></p>
+<!--
+
+<ul>
+
+	<li><a href="#name">NAME</a></li>
+	<li><a href="#syntax">SYNTAX</a></li>
+	<li><a href="#description">DESCRIPTION</a></li>
+	<li><a href="#usage">USAGE</a></li>
+	<li><a href="#common_options">COMMON OPTIONS</a></li>
+	<li><a href="#commands">COMMANDS</a></li>
+	<li><a href="#command_descriptions">COMMAND DESCRIPTIONS</a></li>
+	<li><a href="#libc_nss">LIBC NSS</a></li>
+	<li><a href="#maintainer">MAINTAINER</a></li>
+	<li><a href="#authors">AUTHORS</a></li>
+</ul>
+
+-->
+
+
+</div>
+<!-- INDEX END -->
+
+<p>
+</p>
+<h1><a name="name">NAME</a></h1>
+<p>BusyBox - The Swiss Army Knife of Embedded Linux</p>
+<p>
+</p>
+<hr />
+<h1><a name="syntax">SYNTAX</a></h1>
+<pre>
+ busybox &lt;applet&gt; [arguments...]  # or</pre>
+<pre>
+ &lt;applet&gt; [arguments...]          # if symlinked</pre>
+<p>
+</p>
+<hr />
+<h1><a name="description">DESCRIPTION</a></h1>
+<p>BusyBox combines tiny versions of many common UNIX utilities into a single
+small executable. It provides minimalist replacements for most of the utilities
+you usually find in GNU coreutils, util-linux, etc. The utilities in BusyBox
+generally have fewer options than their full-featured GNU cousins; however, the
+options that are included provide the expected functionality and behave very
+much like their GNU counterparts.</p>
+<p>BusyBox has been written with size-optimization and limited resources in mind.
+It is also extremely modular so you can easily include or exclude commands (or
+features) at compile time. This makes it easy to customize your embedded
+systems. To create a working system, just add /dev, /etc, and a Linux kernel.
+BusyBox provides a fairly complete POSIX environment for any small or embedded
+system.</p>
+<p>BusyBox is extremely configurable.  This allows you to include only the
+components you need, thereby reducing binary size. Run 'make config' or 'make
+menuconfig' to select the functionality that you wish to enable.  Then run
+'make' to compile BusyBox using your configuration.</p>
+<p>After the compile has finished, you should use 'make install' to install
+BusyBox. This will install the 'bin/busybox' binary, in the target directory
+specified by CONFIG_PREFIX. CONFIG_PREFIX can be set when configuring BusyBox,
+or you can specify an alternative location at install time (i.e., with a
+command line like 'make CONFIG_PREFIX=/tmp/foo install'). If you enabled
+any applet installation scheme (either as symlinks or hardlinks), these will
+also be installed in the location pointed to by CONFIG_PREFIX.</p>
+<p>
+</p>
+<hr />
+<h1><a name="usage">USAGE</a></h1>
+<p>BusyBox is a multi-call binary.  A multi-call binary is an executable program
+that performs the same job as more than one utility program.  That means there
+is just a single BusyBox binary, but that single binary acts like a large
+number of utilities.  This allows BusyBox to be smaller since all the built-in
+utility programs (we call them applets) can share code for many common
+operations.</p>
+<p>You can also invoke BusyBox by issuing a command as an argument on the
+command line.  For example, entering</p>
+<pre>
+        /bin/busybox ls</pre>
+<p>will also cause BusyBox to behave as 'ls'.</p>
+<p>Of course, adding '/bin/busybox' into every command would be painful.  So most
+people will invoke BusyBox using links to the BusyBox binary.</p>
+<p>For example, entering</p>
+<pre>
+        ln -s /bin/busybox ls
+        ./ls</pre>
+<p>will cause BusyBox to behave as 'ls' (if the 'ls' command has been compiled
+into BusyBox).  Generally speaking, you should never need to make all these
+links yourself, as the BusyBox build system will do this for you when you run
+the 'make install' command.</p>
+<p>If you invoke BusyBox with no arguments, it will provide you with a list of the
+applets that have been compiled into your BusyBox binary.</p>
+<p>
+</p>
+<hr />
+<h1><a name="common_options">COMMON OPTIONS</a></h1>
+<p>Most BusyBox applets support the <strong>--help</strong> argument to provide a terse runtime
+description of their behavior.  If the CONFIG_FEATURE_VERBOSE_USAGE option has
+been enabled, more detailed usage information will also be available.</p>
+<p>
+</p>
+<hr />
+<h1><a name="commands">COMMANDS</a></h1>
+<p>Currently available applets include:</p>
+<pre>
+        ash, basename, bash, bunzip2, bzcat, bzip2, cal, cat, chmod, chown,
+        clear, cp, cpio, date, dpkg, echo, ed, env, expr, false, getopt,
+        gunzip, gzip, hd, hexdump, id, kill, ln, ls, md5sum, mkdir, mknod,
+        more, od, printenv, printf, pwd, seq, setsid, sh, sleep, sort,
+        split, strings, stty, tail, tar, tee, touch, true, tty, uncompress,
+        unzip, usleep, wc, which, whoami, yes, zcat</pre>
+<p>
+</p>
+<hr />
+<h1><a name="command_descriptions">COMMAND DESCRIPTIONS</a></h1>
+<dl>
+<dt><strong><a name="ash" class="item"><strong>ash</strong></a></strong></dt>
+
+<dd>
+<p>ash [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE [ARGS]]</p>
+<p>Unix shell interpreter</p>
+</dd>
+<dt><strong><a name="basename" class="item"><strong>basename</strong></a></strong></dt>
+
+<dd>
+<p>basename FILE [SUFFIX]</p>
+<p>Strip directory path and .SUFFIX from FILE</p>
+</dd>
+<dt><strong><a name="bash" class="item"><strong>bash</strong></a></strong></dt>
+
+<dd>
+<p>bash [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE [ARGS]]</p>
+<p>Unix shell interpreter</p>
+</dd>
+<dt><strong><a name="bunzip2" class="item"><strong>bunzip2</strong></a></strong></dt>
+
+<dd>
+<p>bunzip2 [-cf] [FILE]...</p>
+<p>Decompress FILEs (or stdin)</p>
+<pre>
+        -c      Write to stdout
+        -f      Force</pre>
+</dd>
+<dt><strong><a name="bzcat" class="item"><strong>bzcat</strong></a></strong></dt>
+
+<dd>
+<p>bzcat [FILE]...</p>
+<p>Decompress to stdout</p>
+</dd>
+<dt><strong><a name="bzip2" class="item"><strong>bzip2</strong></a></strong></dt>
+
+<dd>
+<p>bzip2 [OPTIONS] [FILE]...</p>
+<p>Compress FILEs (or stdin) with bzip2 algorithm</p>
+<pre>
+        -1..9   Compression level
+        -d      Decompress
+        -c      Write to stdout
+        -f      Force</pre>
+</dd>
+<dt><strong><a name="cal" class="item"><strong>cal</strong></a></strong></dt>
+
+<dd>
+<p>cal [-jy] [[MONTH] YEAR]</p>
+<p>Display a calendar</p>
+<pre>
+        -j      Use julian dates
+        -y      Display the entire year</pre>
+</dd>
+<dt><strong><a name="cat" class="item"><strong>cat</strong></a></strong></dt>
+
+<dd>
+<p>cat [FILE]...</p>
+<p>Concatenate FILEs and print them to stdout</p>
+</dd>
+<dt><strong><a name="chmod" class="item"><strong>chmod</strong></a></strong></dt>
+
+<dd>
+<p>chmod [-R] MODE[,MODE]... FILE...</p>
+<p>Each MODE is one or more of the letters ugoa, one of the
+symbols +-= and one or more of the letters rwxst</p>
+<pre>
+        -R      Recurse</pre>
+</dd>
+<dt><strong><a name="chown" class="item"><strong>chown</strong></a></strong></dt>
+
+<dd>
+<p>chown [-RhLHP]... OWNER[&lt;.|:&gt;[GROUP]] FILE...</p>
+<p>Change the owner and/or group of each FILE to OWNER and/or GROUP</p>
+<pre>
+        -R      Recurse
+        -h      Affect symlinks instead of symlink targets
+        -L      Traverse all symlinks to directories
+        -H      Traverse symlinks on command line only
+        -P      Don't traverse symlinks (default)</pre>
+</dd>
+<dt><strong><a name="clear" class="item"><strong>clear</strong></a></strong></dt>
+
+<dd>
+<p>clear</p>
+<p>Clear screen</p>
+</dd>
+<dt><strong><a name="cp" class="item"><strong>cp</strong></a></strong></dt>
+
+<dd>
+<p>cp [OPTIONS] SOURCE... DEST</p>
+<p>Copy SOURCE(s) to DEST</p>
+<pre>
+        -a      Same as -dpR
+        -R,-r   Recurse
+        -d,-P   Preserve symlinks (default if -R)
+        -L      Follow all symlinks
+        -H      Follow symlinks on command line
+        -p      Preserve file attributes if possible
+        -f      Overwrite
+        -i      Prompt before overwrite
+        -l,-s   Create (sym)links</pre>
+</dd>
+<dt><strong><a name="cpio" class="item"><strong>cpio</strong></a></strong></dt>
+
+<dd>
+<p>cpio [-dmvu] [-F FILE] [-H newc] [-tio] [-p DIR] [EXTR_FILE]...</p>
+<p>Extract or list files from a cpio archive, or
+create an archive (-o) or copy files (-p) using file list on stdin</p>
+<p>Main operation mode:</p>
+<pre>
+        -t      List
+        -i      Extract EXTR_FILEs (or all)
+        -o      Create (requires -H newc)
+        -p DIR  Copy files to DIR
+        -d      Make leading directories
+        -m      Preserve mtime
+        -v      Verbose
+        -u      Overwrite
+        -F FILE Input (-t,-i,-p) or output (-o) file
+        -H newc Archive format</pre>
+</dd>
+<dt><strong><a name="date" class="item"><strong>date</strong></a></strong></dt>
+
+<dd>
+<p>date [OPTIONS] [+FMT] [TIME]</p>
+<p>Display time (using +FMT), or set time</p>
+<pre>
+        [-s,--set] TIME Set time to TIME
+        -u,--utc        Work in UTC (don't convert to local time)
+        -R,--rfc-2822   Output RFC-2822 compliant date string
+        -I[SPEC]        Output ISO-8601 compliant date string
+                        SPEC='date' (default) for date only,
+                        'hours', 'minutes', or 'seconds' for date and
+                        time to the indicated precision
+        -r,--reference FILE     Display last modification time of FILE
+        -d,--date TIME  Display TIME, not 'now'
+        -D FMT          Use FMT for -d TIME conversion</pre>
+<p>Recognized TIME formats:</p>
+<pre>
+        hh:mm[:ss]
+        [YYYY.]MM.DD-hh:mm[:ss]
+        YYYY-MM-DD hh:mm[:ss]
+        [[[[[YY]YY]MM]DD]hh]mm[.ss]
+        'date TIME' form accepts MMDDhhmm[[YY]YY][.ss] instead</pre>
+</dd>
+<dt><strong><a name="dpkg" class="item"><strong>dpkg</strong></a></strong></dt>
+
+<dd>
+<p>dpkg [-ilCPru] [-F OPT] PACKAGE</p>
+<p>Install, remove and manage Debian packages</p>
+<pre>
+        -i,--install    Install the package
+        -l,--list       List of installed packages
+        --configure     Configure an unpackaged package
+        -P,--purge      Purge all files of a package
+        -r,--remove     Remove all but the configuration files for a package
+        --unpack        Unpack a package, but don't configure it
+        --force-depends Ignore dependency problems
+        --force-confnew Overwrite existing config files when installing
+        --force-confold Keep old config files when installing</pre>
+</dd>
+<dt><strong><a name="echo" class="item"><strong>echo</strong></a></strong></dt>
+
+<dd>
+<p>echo [-neE] [ARG]...</p>
+<p>Print the specified ARGs to stdout</p>
+<pre>
+        -n      Suppress trailing newline
+        -e      Interpret backslash escapes (i.e., \t=tab)
+        -E      Don't interpret backslash escapes (default)</pre>
+</dd>
+<dt><strong><a name="ed" class="item"><strong>ed</strong></a></strong></dt>
+
+<dd>
+<p>ed</p>
+</dd>
+<dt><strong><a name="env" class="item"><strong>env</strong></a></strong></dt>
+
+<dd>
+<p>env [-iu] [-] [name=value]... [PROG ARGS]</p>
+<p>Print the current environment or run PROG after setting up
+the specified environment</p>
+<pre>
+        -, -i   Start with an empty environment
+        -u      Remove variable from the environment</pre>
+</dd>
+<dt><strong><a name="expr" class="item"><strong>expr</strong></a></strong></dt>
+
+<dd>
+<p>expr EXPRESSION</p>
+<p>Print the value of EXPRESSION to stdout</p>
+<p>EXPRESSION may be:</p>
+<pre>
+        ARG1 | ARG2     ARG1 if it is neither null nor 0, otherwise ARG2
+        ARG1 &amp; ARG2     ARG1 if neither argument is null or 0, otherwise 0
+        ARG1 &lt; ARG2     1 if ARG1 is less than ARG2, else 0. Similarly:
+        ARG1 &lt;= ARG2
+        ARG1 = ARG2
+        ARG1 != ARG2
+        ARG1 &gt;= ARG2
+        ARG1 &gt; ARG2
+        ARG1 + ARG2     Sum of ARG1 and ARG2. Similarly:
+        ARG1 - ARG2
+        ARG1 * ARG2
+        ARG1 / ARG2
+        ARG1 % ARG2
+        STRING : REGEXP         Anchored pattern match of REGEXP in STRING
+        match STRING REGEXP     Same as STRING : REGEXP
+        substr STRING POS LENGTH Substring of STRING, POS counted from 1
+        index STRING CHARS      Index in STRING where any CHARS is found, or 0
+        length STRING           Length of STRING
+        quote TOKEN             Interpret TOKEN as a string, even if
+                                it is a keyword like 'match' or an
+                                operator like '/'
+        (EXPRESSION)            Value of EXPRESSION</pre>
+<p>Beware that many operators need to be escaped or quoted for shells.
+Comparisons are arithmetic if both ARGs are numbers, else
+lexicographical. Pattern matches return the string matched between
+\( and \) or null; if \( and \) are not used, they return the number
+of characters matched or 0.</p>
+</dd>
+<dt><strong><a name="false" class="item"><strong>false</strong></a></strong></dt>
+
+<dd>
+<p>false</p>
+<p>Return an exit code of FALSE (1)</p>
+</dd>
+<dt><strong><a name="getopt" class="item"><strong>getopt</strong></a></strong></dt>
+
+<dd>
+<p>getopt [OPTIONS] [--] OPTSTRING PARAMS</p>
+<pre>
+        -n,--name=PROGNAME              The name under which errors are reported
+        -o,--options=OPTSTRING          Short options to recognize
+        -q,--quiet                      No error messages on unrecognized options
+        -Q,--quiet-output               No normal output
+        -s,--shell=SHELL                Set shell quoting conventions
+        -T,--test                       Version test (exits with 4)
+        -u,--unquoted                   Don't quote output</pre>
+</dd>
+<dt><strong><a name="gunzip" class="item"><strong>gunzip</strong></a></strong></dt>
+
+<dd>
+<p>gunzip [-cft] [FILE]...</p>
+<p>Decompress FILEs (or stdin)</p>
+<pre>
+        -c      Write to stdout
+        -f      Force
+        -t      Test file integrity</pre>
+</dd>
+<dt><strong><a name="gzip" class="item"><strong>gzip</strong></a></strong></dt>
+
+<dd>
+<p>gzip [-cfd] [FILE]...</p>
+<p>Compress FILEs (or stdin)</p>
+<pre>
+        -d      Decompress
+        -c      Write to stdout
+        -f      Force</pre>
+</dd>
+<dt><strong><a name="hd" class="item"><strong>hd</strong></a></strong></dt>
+
+<dd>
+<p>hd FILE...</p>
+<p>hd is an alias for hexdump -C</p>
+</dd>
+<dt><strong><a name="hexdump" class="item"><strong>hexdump</strong></a></strong></dt>
+
+<dd>
+<p>hexdump [-bcCdefnosvxR] [FILE]...</p>
+<p>Display FILEs (or stdin) in a user specified format</p>
+<pre>
+        -b              One-byte octal display
+        -c              One-byte character display
+        -C              Canonical hex+ASCII, 16 bytes per line
+        -d              Two-byte decimal display
+        -e FORMAT_STRING
+        -f FORMAT_FILE
+        -n LENGTH       Interpret only LENGTH bytes of input
+        -o              Two-byte octal display
+        -s OFFSET       Skip OFFSET bytes
+        -v              Display all input data
+        -x              Two-byte hexadecimal display
+        -R              Reverse of 'hexdump -Cv'</pre>
+</dd>
+<dt><strong><a name="id" class="item"><strong>id</strong></a></strong></dt>
+
+<dd>
+<p>id [OPTIONS] [USER]</p>
+<p>Print information about USER or the current user</p>
+<pre>
+        -u      User ID
+        -g      Group ID
+        -G      Supplementary group IDs
+        -n      Print names instead of numbers
+        -r      Print real ID instead of effective ID</pre>
+</dd>
+<dt><strong><a name="kill" class="item"><strong>kill</strong></a></strong></dt>
+
+<dd>
+<p>kill [-l] [-SIG] PID...</p>
+<p>Send a signal (default: TERM) to given PIDs</p>
+<pre>
+        -l      List all signal names and numbers</pre>
+</dd>
+<dt><strong><a name="ln" class="item"><strong>ln</strong></a></strong></dt>
+
+<dd>
+<p>ln [OPTIONS] TARGET... LINK|DIR</p>
+<p>Create a link LINK or DIR/TARGET to the specified TARGET(s)</p>
+<pre>
+        -s      Make symlinks instead of hardlinks
+        -f      Remove existing destinations
+        -n      Don't dereference symlinks - treat like normal file
+        -b      Make a backup of the target (if exists) before link operation
+        -S suf  Use suffix instead of ~ when making backup files
+        -T      2nd arg must be a DIR
+        -v      Verbose</pre>
+</dd>
+<dt><strong><a name="ls" class="item"><strong>ls</strong></a></strong></dt>
+
+<dd>
+<p>ls [-1AaCxdLHRFplinsehrSXvctu] [-w WIDTH] [FILE]...</p>
+<p>List directory contents</p>
+<pre>
+        -1      One column output
+        -a      Include entries which start with .
+        -A      Like -a, but exclude . and ..
+        -C      List by columns
+        -x      List by lines
+        -d      List directory entries instead of contents
+        -L      Follow symlinks
+        -H      Follow symlinks on command line
+        -R      Recurse
+        -p      Append / to dir entries
+        -F      Append indicator (one of */=@|) to entries
+        -l      Long listing format
+        -i      List inode numbers
+        -n      List numeric UIDs and GIDs instead of names
+        -s      List allocated blocks
+        -e      List full date and time
+        -h      List sizes in human readable format (1K 243M 2G)
+        -r      Sort in reverse order
+        -S      Sort by size
+        -X      Sort by extension
+        -v      Sort by version
+        -c      With -l: sort by ctime
+        -t      With -l: sort by mtime
+        -u      With -l: sort by atime
+        -w N    Assume the terminal is N columns wide
+        --color[={always,never,auto}]   Control coloring</pre>
+</dd>
+<dt><strong><a name="md5sum" class="item"><strong>md5sum</strong></a></strong></dt>
+
+<dd>
+<p>md5sum [-c[sw]] [FILE]...</p>
+<p>Print or check MD5 checksums</p>
+<pre>
+        -c      Check sums against list in FILEs
+        -s      Don't output anything, status code shows success
+        -w      Warn about improperly formatted checksum lines</pre>
+</dd>
+<dt><strong><a name="mkdir" class="item"><strong>mkdir</strong></a></strong></dt>
+
+<dd>
+<p>mkdir [OPTIONS] DIRECTORY...</p>
+<p>Create DIRECTORY</p>
+<pre>
+        -m MODE Mode
+        -p      No error if exists; make parent directories as needed</pre>
+</dd>
+<dt><strong><a name="mknod" class="item"><strong>mknod</strong></a></strong></dt>
+
+<dd>
+<p>mknod [-m MODE] NAME TYPE MAJOR MINOR</p>
+<p>Create a special file (block, character, or pipe)</p>
+<pre>
+        -m MODE Creation mode (default a=rw)
+TYPE:
+        b       Block device
+        c or u  Character device
+        p       Named pipe (MAJOR and MINOR are ignored)</pre>
+</dd>
+<dt><strong><a name="more" class="item"><strong>more</strong></a></strong></dt>
+
+<dd>
+<p>more [FILE]...</p>
+<p>View FILE (or stdin) one screenful at a time</p>
+</dd>
+<dt><strong><a name="od" class="item"><strong>od</strong></a></strong></dt>
+
+<dd>
+<p>od [-aBbcDdeFfHhIiLlOovXx] [FILE]</p>
+<p>Print FILE (or stdin) unambiguously, as octal bytes by default</p>
+</dd>
+<dt><strong><a name="printenv" class="item"><strong>printenv</strong></a></strong></dt>
+
+<dd>
+<p>printenv [VARIABLE]...</p>
+<p>Print environment VARIABLEs.
+If no VARIABLE specified, print all.</p>
+</dd>
+<dt><strong><a name="printf" class="item"><strong>printf</strong></a></strong></dt>
+
+<dd>
+<p>printf FORMAT [ARG]...</p>
+<p>Format and print ARG(s) according to FORMAT (a-la C printf)</p>
+</dd>
+<dt><strong><a name="pwd" class="item"><strong>pwd</strong></a></strong></dt>
+
+<dd>
+<p>pwd</p>
+<p>Print the full filename of the current working directory</p>
+</dd>
+<dt><strong><a name="seq" class="item"><strong>seq</strong></a></strong></dt>
+
+<dd>
+<p>seq [-w] [-s SEP] [FIRST [INC]] LAST</p>
+<p>Print numbers from FIRST to LAST, in steps of INC.
+FIRST, INC default to 1.</p>
+<pre>
+        -w      Pad to last with leading zeros
+        -s SEP  String separator</pre>
+</dd>
+<dt><strong><a name="setsid" class="item"><strong>setsid</strong></a></strong></dt>
+
+<dd>
+<p>setsid PROG ARGS</p>
+<p>Run PROG in a new session. PROG will have no controlling terminal
+and will not be affected by keyboard signals (Ctrl-C etc).
+See <a href="#setsid"><code>setsid(2)</code></a> for details.</p>
+</dd>
+<dt><strong><a name="sh" class="item"><strong>sh</strong></a></strong></dt>
+
+<dd>
+<p>sh [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE [ARGS]]</p>
+<p>Unix shell interpreter</p>
+</dd>
+<dt><strong><a name="sleep" class="item"><strong>sleep</strong></a></strong></dt>
+
+<dd>
+<p>sleep [N]...</p>
+<p>Pause for a time equal to the total of the args given, where each arg can
+have an optional suffix of (s)econds, (m)inutes, (h)ours, or (d)ays</p>
+</dd>
+<dt><strong><a name="sort" class="item"><strong>sort</strong></a></strong></dt>
+
+<dd>
+<p>sort [-nrugMcszbdfimSTokt] [-o FILE] [-k start[.offset][opts][,end[.offset][opts]] [-t CHAR] [FILE]...</p>
+<p>Sort lines of text</p>
+<pre>
+        -b      Ignore leading blanks
+        -c      Check whether input is sorted
+        -d      Dictionary order (blank or alphanumeric only)
+        -f      Ignore case
+        -g      General numerical sort
+        -i      Ignore unprintable characters
+        -k      Sort key
+        -M      Sort month
+        -n      Sort numbers
+        -o      Output to file
+        -k      Sort by key
+        -t CHAR Key separator
+        -r      Reverse sort order
+        -s      Stable (don't sort ties alphabetically)
+        -u      Suppress duplicate lines
+        -z      Lines are terminated by NUL, not newline
+        -mST    Ignored for GNU compatibility</pre>
+</dd>
+<dt><strong><a name="split" class="item"><strong>split</strong></a></strong></dt>
+
+<dd>
+<p>split [OPTIONS] [INPUT [PREFIX]]</p>
+<pre>
+        -b N[k|m]       Split by N (kilo|mega)bytes
+        -l N            Split by N lines
+        -a N            Use N letters as suffix</pre>
+</dd>
+<dt><strong><a name="strings" class="item"><strong>strings</strong></a></strong></dt>
+
+<dd>
+<p>strings [-afo] [-n LEN] [FILE]...</p>
+<p>Display printable strings in a binary file</p>
+<pre>
+        -a      Scan whole file (default)
+        -f      Precede strings with filenames
+        -n LEN  At least LEN characters form a string (default 4)
+        -o      Precede strings with decimal offsets</pre>
+</dd>
+<dt><strong><a name="stty" class="item"><strong>stty</strong></a></strong></dt>
+
+<dd>
+<p>stty [-a|g] [-F DEVICE] [SETTING]...</p>
+<p>Without arguments, prints baud rate, line discipline,
+and deviations from stty sane</p>
+<pre>
+        -F DEVICE       Open device instead of stdin
+        -a              Print all current settings in human-readable form
+        -g              Print in stty-readable form
+        [SETTING]       See manpage</pre>
+</dd>
+<dt><strong><a name="tail" class="item"><strong>tail</strong></a></strong></dt>
+
+<dd>
+<p>tail [OPTIONS] [FILE]...</p>
+<p>Print last 10 lines of each FILE (or stdin) to stdout.
+With more than one FILE, precede each with a filename header.</p>
+<pre>
+        -f              Print data as file grows
+        -s SECONDS      Wait SECONDS between reads with -f
+        -n N[kbm]       Print last N lines
+        -n +N[kbm]      Start on Nth line and print the rest
+        -c [+]N[kbm]    Print last N bytes
+        -q              Never print headers
+        -v              Always print headers</pre>
+<p>N may be suffixed by k (x1024), b (x512), or m (x1024^2).</p>
+</dd>
+<dt><strong><a name="tar" class="item"><strong>tar</strong></a></strong></dt>
+
+<dd>
+<p>tar -[cxtzhmvO] [-X FILE] [-T FILE] [-f TARFILE] [-C DIR] [FILE]...</p>
+<p>Create, extract, or list files from a tar file</p>
+<p>Operation:</p>
+<pre>
+        c       Create
+        x       Extract
+        t       List
+        f       Name of TARFILE ('-' for stdin/out)
+        C       Change to DIR before operation
+        v       Verbose
+        z       (De)compress using gzip
+        O       Extract to stdout
+        h       Follow symlinks
+        m       Don't restore mtime
+        exclude File to exclude
+        X       File with names to exclude
+        T       File with names to include</pre>
+</dd>
+<dt><strong><a name="tee" class="item"><strong>tee</strong></a></strong></dt>
+
+<dd>
+<p>tee [-ai] [FILE]...</p>
+<p>Copy stdin to each FILE, and also to stdout</p>
+<pre>
+        -a      Append to the given FILEs, don't overwrite
+        -i      Ignore interrupt signals (SIGINT)</pre>
+</dd>
+<dt><strong><a name="touch" class="item"><strong>touch</strong></a></strong></dt>
+
+<dd>
+<p>touch [-c] FILE...</p>
+<p>Update the last-modified date on the given FILE[s]</p>
+<pre>
+        -c      Don't create files</pre>
+</dd>
+<dt><strong><a name="true" class="item"><strong>true</strong></a></strong></dt>
+
+<dd>
+<p>true</p>
+<p>Return an exit code of TRUE (0)</p>
+</dd>
+<dt><strong><a name="tty" class="item"><strong>tty</strong></a></strong></dt>
+
+<dd>
+<p>tty</p>
+<p>Print file name of stdin's terminal</p>
+</dd>
+<dt><strong><a name="uncompress" class="item"><strong>uncompress</strong></a></strong></dt>
+
+<dd>
+<p>uncompress [-cf] [FILE]...</p>
+<p>Decompress .Z file[s]</p>
+<pre>
+        -c      Write to stdout
+        -f      Overwrite</pre>
+</dd>
+<dt><strong><a name="unzip" class="item"><strong>unzip</strong></a></strong></dt>
+
+<dd>
+<p>unzip [-lnopq] FILE[.zip] [FILE]... [-x FILE...] [-d DIR]</p>
+<p>Extract FILEs from ZIP archive</p>
+<pre>
+        -l      List contents (with -q for short form)
+        -n      Never overwrite files (default: ask)
+        -o      Overwrite
+        -p      Print to stdout
+        -q      Quiet
+        -x FILE Exclude FILEs
+        -d DIR  Extract into DIR</pre>
+</dd>
+<dt><strong><a name="usleep" class="item"><strong>usleep</strong></a></strong></dt>
+
+<dd>
+<p>usleep N</p>
+<p>Pause for N microseconds</p>
+</dd>
+<dt><strong><a name="wc" class="item"><strong>wc</strong></a></strong></dt>
+
+<dd>
+<p>wc [-clwL] [FILE]...</p>
+<p>Count lines, words, and bytes for each FILE (or stdin)</p>
+<pre>
+        -c      Count bytes
+        -l      Count newlines
+        -w      Count words
+        -L      Print longest line length</pre>
+</dd>
+<dt><strong><a name="which" class="item"><strong>which</strong></a></strong></dt>
+
+<dd>
+<p>which [COMMAND]...</p>
+<p>Locate a COMMAND</p>
+</dd>
+<dt><strong><a name="whoami" class="item"><strong>whoami</strong></a></strong></dt>
+
+<dd>
+<p>whoami</p>
+<p>Print the user name associated with the current effective user id</p>
+</dd>
+<dt><strong><a name="yes" class="item"><strong>yes</strong></a></strong></dt>
+
+<dd>
+<p>yes [STRING]</p>
+<p>Repeatedly output a line with STRING, or 'y'</p>
+</dd>
+<dt><strong><a name="zcat" class="item"><strong>zcat</strong></a></strong></dt>
+
+<dd>
+<p>zcat [FILE]...</p>
+<p>Decompress to stdout</p>
+</dd>
+</dl>
+<p>
+</p>
+<hr />
+<h1><a name="libc_nss">LIBC NSS</a></h1>
+<p>GNU Libc (glibc) uses the Name Service Switch (NSS) to configure the behavior
+of the C library for the local environment, and to configure how it reads
+system data, such as passwords and group information.  This is implemented
+using an /etc/nsswitch.conf configuration file, and using one or more of the
+/lib/libnss_* libraries.  BusyBox tries to avoid using any libc calls that make
+use of NSS.  Some applets however, such as login and su, will use libc functions
+that require NSS.</p>
+<p>If you enable CONFIG_USE_BB_PWD_GRP, BusyBox will use internal functions to
+directly access the /etc/passwd, /etc/group, and /etc/shadow files without
+using NSS.  This may allow you to run your system without the need for
+installing any of the NSS configuration files and libraries.</p>
+<p>When used with glibc, the BusyBox 'networking' applets will similarly require
+that you install at least some of the glibc NSS stuff (in particular,
+/etc/nsswitch.conf, /lib/libnss_dns*, /lib/libnss_files*, and /lib/libresolv*).</p>
+<p>Shameless Plug: As an alternative, one could use a C library such as uClibc.  In
+addition to making your system significantly smaller, uClibc does not require the
+use of any NSS support files or libraries.</p>
+<p>
+</p>
+<hr />
+<h1><a name="maintainer">MAINTAINER</a></h1>
+<p>Denis Vlasenko &lt;<a href="mailto:vda.linux@googlemail.com">vda.linux@googlemail.com</a>&gt;</p>
+<p>
+</p>
+<hr />
+<h1><a name="authors">AUTHORS</a></h1>
+<p>The following people have contributed code to BusyBox whether they know it or
+not.  If you have written code included in BusyBox, you should probably be
+listed here so you can obtain your bit of eternal glory.  If you should be
+listed here, or the description of what you have done needs more detail, or is
+incorrect, please send in an update.</p>
+<br><p>Emanuele Aina &lt;<a href="mailto:emanuele.aina@tiscali.it">emanuele.aina@tiscali.it</a>&gt;
+    run-parts</p>
+<br><p>Erik Andersen &lt;<a href="mailto:andersen@codepoet.org">andersen@codepoet.org</a>&gt;</p>
+<pre>
+    Tons of new stuff, major rewrite of most of the
+    core apps, tons of new apps as noted in header files.
+    Lots of tedious effort writing these boring docs that
+    nobody is going to actually read.</pre>
+<br><p>Laurence Anderson &lt;<a href="mailto:l.d.anderson@warwick.ac.uk">l.d.anderson@warwick.ac.uk</a>&gt;</p>
+<pre>
+    rpm2cpio, unzip, get_header_cpio, read_gz interface, rpm</pre>
+<br><p>Jeff Angielski &lt;<a href="mailto:jeff@theptrgroup.com">jeff@theptrgroup.com</a>&gt;</p>
+<pre>
+    ftpput, ftpget</pre>
+<br><p>Edward Betts &lt;<a href="mailto:edward@debian.org">edward@debian.org</a>&gt;</p>
+<pre>
+    expr, hostid, logname, whoami</pre>
+<br><p>John Beppu &lt;<a href="mailto:beppu@codepoet.org">beppu@codepoet.org</a>&gt;</p>
+<pre>
+    du, nslookup, sort</pre>
+<br><p>Brian Candler &lt;<a href="mailto:B.Candler@pobox.com">B.Candler@pobox.com</a>&gt;</p>
+<pre>
+    tiny-ls(ls)</pre>
+<br><p>Randolph Chung &lt;<a href="mailto:tausq@debian.org">tausq@debian.org</a>&gt;</p>
+<pre>
+    fbset, ping, hostname</pre>
+<br><p>Dave Cinege &lt;<a href="mailto:dcinege@psychosis.com">dcinege@psychosis.com</a>&gt;</p>
+<pre>
+    more(v2), makedevs, dutmp, modularization, auto links file,
+    various fixes, Linux Router Project maintenance</pre>
+<br><p>Jordan Crouse &lt;<a href="mailto:jordan@cosmicpenguin.net">jordan@cosmicpenguin.net</a>&gt;</p>
+<pre>
+    ipcalc</pre>
+<br><p>Magnus Damm &lt;<a href="mailto:damm@opensource.se">damm@opensource.se</a>&gt;</p>
+<pre>
+    tftp client insmod powerpc support</pre>
+<br><p>Larry Doolittle &lt;<a href="mailto:ldoolitt@recycle.lbl.gov">ldoolitt@recycle.lbl.gov</a>&gt;</p>
+<pre>
+    pristine source directory compilation, lots of patches and fixes.</pre>
+<br><p>Glenn Engel &lt;<a href="mailto:glenne@engel.org">glenne@engel.org</a>&gt;</p>
+<pre>
+    httpd</pre>
+<br><p>Gennady Feldman &lt;<a href="mailto:gfeldman@gena01.com">gfeldman@gena01.com</a>&gt;</p>
+<pre>
+    Sysklogd (single threaded syslogd, IPC Circular buffer support,
+    logread), various fixes.</pre>
+<br><p>Karl M. Hegbloom &lt;<a href="mailto:karlheg@debian.org">karlheg@debian.org</a>&gt;</p>
+<pre>
+    cp_mv.c, the test suite, various fixes to utility.c, &amp;c.</pre>
+<br><p>Daniel Jacobowitz &lt;<a href="mailto:dan@debian.org">dan@debian.org</a>&gt;</p>
+<pre>
+    mktemp.c</pre>
+<br><p>Matt Kraai &lt;<a href="mailto:kraai@alumni.cmu.edu">kraai@alumni.cmu.edu</a>&gt;</p>
+<pre>
+    documentation, bugfixes, test suite</pre>
+<br><p>Stephan Linz &lt;<a href="mailto:linz@li-pro.net">linz@li-pro.net</a>&gt;</p>
+<pre>
+    ipcalc, Red Hat equivalence</pre>
+<br><p>John Lombardo &lt;<a href="mailto:john@deltanet.com">john@deltanet.com</a>&gt;</p>
+<pre>
+    tr</pre>
+<br><p>Glenn McGrath &lt;<a href="mailto:bug1@iinet.net.au">bug1@iinet.net.au</a>&gt;</p>
+<pre>
+    Common unarchiving code and unarchiving applets, ifupdown, ftpgetput,
+    nameif, sed, patch, fold, install, uudecode.
+    Various bugfixes, review and apply numerous patches.</pre>
+<br><p>Manuel Novoa III &lt;<a href="mailto:mjn3@codepoet.org">mjn3@codepoet.org</a>&gt;</p>
+<pre>
+    cat, head, mkfifo, mknod, rmdir, sleep, tee, tty, uniq, usleep, wc, yes,
+    mesg, vconfig, make_directory, parse_mode, dirname, mode_string,
+    get_last_path_component, simplify_path, and a number trivial libbb routines</pre>
+<pre>
+    also bug fixes, partial rewrites, and size optimizations in
+    ash, basename, cal, cmp, cp, df, du, echo, env, ln, logname, md5sum, mkdir,
+    mv, realpath, rm, sort, tail, touch, uname, watch, arith, human_readable,
+    interface, dutmp, ifconfig, route</pre>
+<br><p>Vladimir Oleynik &lt;<a href="mailto:dzo@simtreas.ru">dzo@simtreas.ru</a>&gt;</p>
+<pre>
+    cmdedit; xargs(current), httpd(current);
+    ports: ash, crond, fdisk, inetd, stty, traceroute, top;
+    locale, various fixes
+    and irreconcilable critic of everything not perfect.</pre>
+<br><p>Bruce Perens &lt;<a href="mailto:bruce@pixar.com">bruce@pixar.com</a>&gt;</p>
+<pre>
+    Original author of BusyBox in 1995, 1996. Some of his code can
+    still be found hiding here and there...</pre>
+<br><p>Tim Riker &lt;<a href="mailto:Tim@Rikers.org">Tim@Rikers.org</a>&gt;</p>
+<pre>
+    bug fixes, member of fan club</pre>
+<br><p>Kent Robotti &lt;<a href="mailto:robotti@metconnect.com">robotti@metconnect.com</a>&gt;</p>
+<pre>
+    reset, tons and tons of bug reports and patches.</pre>
+<br><p>Chip Rosenthal &lt;<a href="mailto:chip@unicom.com">chip@unicom.com</a>&gt;, &lt;<a href="mailto:crosenth@covad.com">crosenth@covad.com</a>&gt;</p>
+<pre>
+    wget - Contributed by permission of Covad Communications</pre>
+<br><p>Pavel Roskin &lt;<a href="mailto:proski@gnu.org">proski@gnu.org</a>&gt;</p>
+<pre>
+    Lots of bugs fixes and patches.</pre>
+<br><p>Gyepi Sam &lt;<a href="mailto:gyepi@praxis-sw.com">gyepi@praxis-sw.com</a>&gt;</p>
+<pre>
+    Remote logging feature for syslogd</pre>
+<br><p>Linus Torvalds &lt;<a href="mailto:torvalds@transmeta.com">torvalds@transmeta.com</a>&gt;</p>
+<pre>
+    mkswap, fsck.minix, mkfs.minix</pre>
+<br><p>Mark Whitley &lt;<a href="mailto:markw@codepoet.org">markw@codepoet.org</a>&gt;</p>
+<pre>
+    grep, sed, cut, xargs(previous),
+    style-guide, new-applet-HOWTO, bug fixes, etc.</pre>
+<br><p>Charles P. Wright &lt;<a href="mailto:cpwright@villagenet.com">cpwright@villagenet.com</a>&gt;</p>
+<pre>
+    gzip, mini-netcat(nc)</pre>
+<br><p>Enrique Zanardi &lt;<a href="mailto:ezanardi@ull.es">ezanardi@ull.es</a>&gt;</p>
+<pre>
+    tarcat (since removed), loadkmap, various fixes, Debian maintenance</pre>
+<br><p>Tito Ragusa &lt;<a href="mailto:farmatito@tiscali.it">farmatito@tiscali.it</a>&gt;</p>
+<pre>
+    devfsd and size optimizations in strings, openvt and deallocvt.</pre>
+<br><p>Paul Fox &lt;<a href="mailto:pgf@foxharp.boston.ma.us">pgf@foxharp.boston.ma.us</a>&gt;</p>
+<pre>
+    vi editing mode for ash, various other patches/fixes</pre>
+<br><p>Roberto A. Foglietta &lt;<a href="mailto:me@roberto.foglietta.name">me@roberto.foglietta.name</a>&gt;</p>
+<pre>
+    port: dnsd</pre>
+<br><p>Bernhard Reutner-Fischer &lt;<a href="mailto:rep.dot.nop@gmail.com">rep.dot.nop@gmail.com</a>&gt;</p>
+<pre>
+    misc</pre>
+<br><p>Mike Frysinger &lt;<a href="mailto:vapier@gentoo.org">vapier@gentoo.org</a>&gt;</p>
+<pre>
+    initial e2fsprogs, printenv, setarch, sum, misc</pre>
+<br><p>Jie Zhang &lt;<a href="mailto:jie.zhang@analog.com">jie.zhang@analog.com</a>&gt;</p>
+<pre>
+    fixed two bugs in msh and hush (exitcode of killed processes)</pre>
+
+</body>
+
+</html>
diff -rupN busybox-1.22.1/docs/busybox.net/BusyBox.html ../src3m/busybox-1.22.1/docs/busybox.net/BusyBox.html
--- busybox-1.22.1/docs/busybox.net/BusyBox.html	1970-01-01 01:00:00.000000000 +0100
+++ ../src3m/busybox-1.22.1/docs/busybox.net/BusyBox.html	2015-03-30 00:10:28.334188118 +0200
@@ -0,0 +1,930 @@
+<?xml version="1.0" ?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<title>BusyBox - The Swiss Army Knife of Embedded Linux</title>
+<meta http-equiv="content-type" content="text/html; charset=utf-8" />
+<link rev="made" href="mailto:root@localhost" />
+</head>
+
+<body style="background-color: white">
+
+
+<!-- INDEX BEGIN -->
+<div name="index">
+<p><a name="__index__"></a></p>
+<!--
+
+<ul>
+
+	<li><a href="#name">NAME</a></li>
+	<li><a href="#syntax">SYNTAX</a></li>
+	<li><a href="#description">DESCRIPTION</a></li>
+	<li><a href="#usage">USAGE</a></li>
+	<li><a href="#common_options">COMMON OPTIONS</a></li>
+	<li><a href="#commands">COMMANDS</a></li>
+	<li><a href="#command_descriptions">COMMAND DESCRIPTIONS</a></li>
+	<li><a href="#libc_nss">LIBC NSS</a></li>
+	<li><a href="#maintainer">MAINTAINER</a></li>
+	<li><a href="#authors">AUTHORS</a></li>
+</ul>
+
+-->
+
+
+</div>
+<!-- INDEX END -->
+
+<p>
+</p>
+<h1><a name="name">NAME</a></h1>
+<p>BusyBox - The Swiss Army Knife of Embedded Linux</p>
+<p>
+</p>
+<hr />
+<h1><a name="syntax">SYNTAX</a></h1>
+<pre>
+ busybox &lt;applet&gt; [arguments...]  # or</pre>
+<pre>
+ &lt;applet&gt; [arguments...]          # if symlinked</pre>
+<p>
+</p>
+<hr />
+<h1><a name="description">DESCRIPTION</a></h1>
+<p>BusyBox combines tiny versions of many common UNIX utilities into a single
+small executable. It provides minimalist replacements for most of the utilities
+you usually find in GNU coreutils, util-linux, etc. The utilities in BusyBox
+generally have fewer options than their full-featured GNU cousins; however, the
+options that are included provide the expected functionality and behave very
+much like their GNU counterparts.</p>
+<p>BusyBox has been written with size-optimization and limited resources in mind.
+It is also extremely modular so you can easily include or exclude commands (or
+features) at compile time. This makes it easy to customize your embedded
+systems. To create a working system, just add /dev, /etc, and a Linux kernel.
+BusyBox provides a fairly complete POSIX environment for any small or embedded
+system.</p>
+<p>BusyBox is extremely configurable.  This allows you to include only the
+components you need, thereby reducing binary size. Run 'make config' or 'make
+menuconfig' to select the functionality that you wish to enable.  Then run
+'make' to compile BusyBox using your configuration.</p>
+<p>After the compile has finished, you should use 'make install' to install
+BusyBox. This will install the 'bin/busybox' binary, in the target directory
+specified by CONFIG_PREFIX. CONFIG_PREFIX can be set when configuring BusyBox,
+or you can specify an alternative location at install time (i.e., with a
+command line like 'make CONFIG_PREFIX=/tmp/foo install'). If you enabled
+any applet installation scheme (either as symlinks or hardlinks), these will
+also be installed in the location pointed to by CONFIG_PREFIX.</p>
+<p>
+</p>
+<hr />
+<h1><a name="usage">USAGE</a></h1>
+<p>BusyBox is a multi-call binary.  A multi-call binary is an executable program
+that performs the same job as more than one utility program.  That means there
+is just a single BusyBox binary, but that single binary acts like a large
+number of utilities.  This allows BusyBox to be smaller since all the built-in
+utility programs (we call them applets) can share code for many common
+operations.</p>
+<p>You can also invoke BusyBox by issuing a command as an argument on the
+command line.  For example, entering</p>
+<pre>
+        /bin/busybox ls</pre>
+<p>will also cause BusyBox to behave as 'ls'.</p>
+<p>Of course, adding '/bin/busybox' into every command would be painful.  So most
+people will invoke BusyBox using links to the BusyBox binary.</p>
+<p>For example, entering</p>
+<pre>
+        ln -s /bin/busybox ls
+        ./ls</pre>
+<p>will cause BusyBox to behave as 'ls' (if the 'ls' command has been compiled
+into BusyBox).  Generally speaking, you should never need to make all these
+links yourself, as the BusyBox build system will do this for you when you run
+the 'make install' command.</p>
+<p>If you invoke BusyBox with no arguments, it will provide you with a list of the
+applets that have been compiled into your BusyBox binary.</p>
+<p>
+</p>
+<hr />
+<h1><a name="common_options">COMMON OPTIONS</a></h1>
+<p>Most BusyBox applets support the <strong>--help</strong> argument to provide a terse runtime
+description of their behavior.  If the CONFIG_FEATURE_VERBOSE_USAGE option has
+been enabled, more detailed usage information will also be available.</p>
+<p>
+</p>
+<hr />
+<h1><a name="commands">COMMANDS</a></h1>
+<p>Currently available applets include:</p>
+<pre>
+        ash, basename, bash, bunzip2, bzcat, bzip2, cal, cat, chmod, chown,
+        clear, cp, cpio, date, dpkg, echo, ed, env, expr, false, getopt,
+        gunzip, gzip, hd, hexdump, id, kill, ln, ls, md5sum, mkdir, mknod,
+        more, od, printenv, printf, pwd, seq, setsid, sh, sleep, sort,
+        split, strings, stty, tail, tar, tee, touch, true, tty, uncompress,
+        unzip, usleep, wc, which, whoami, yes, zcat</pre>
+<p>
+</p>
+<hr />
+<h1><a name="command_descriptions">COMMAND DESCRIPTIONS</a></h1>
+<dl>
+<dt><strong><a name="ash" class="item"><strong>ash</strong></a></strong></dt>
+
+<dd>
+<p>ash [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE [ARGS]]</p>
+<p>Unix shell interpreter</p>
+</dd>
+<dt><strong><a name="basename" class="item"><strong>basename</strong></a></strong></dt>
+
+<dd>
+<p>basename FILE [SUFFIX]</p>
+<p>Strip directory path and .SUFFIX from FILE</p>
+</dd>
+<dt><strong><a name="bash" class="item"><strong>bash</strong></a></strong></dt>
+
+<dd>
+<p>bash [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE [ARGS]]</p>
+<p>Unix shell interpreter</p>
+</dd>
+<dt><strong><a name="bunzip2" class="item"><strong>bunzip2</strong></a></strong></dt>
+
+<dd>
+<p>bunzip2 [-cf] [FILE]...</p>
+<p>Decompress FILEs (or stdin)</p>
+<pre>
+        -c      Write to stdout
+        -f      Force</pre>
+</dd>
+<dt><strong><a name="bzcat" class="item"><strong>bzcat</strong></a></strong></dt>
+
+<dd>
+<p>bzcat [FILE]...</p>
+<p>Decompress to stdout</p>
+</dd>
+<dt><strong><a name="bzip2" class="item"><strong>bzip2</strong></a></strong></dt>
+
+<dd>
+<p>bzip2 [OPTIONS] [FILE]...</p>
+<p>Compress FILEs (or stdin) with bzip2 algorithm</p>
+<pre>
+        -1..9   Compression level
+        -d      Decompress
+        -c      Write to stdout
+        -f      Force</pre>
+</dd>
+<dt><strong><a name="cal" class="item"><strong>cal</strong></a></strong></dt>
+
+<dd>
+<p>cal [-jy] [[MONTH] YEAR]</p>
+<p>Display a calendar</p>
+<pre>
+        -j      Use julian dates
+        -y      Display the entire year</pre>
+</dd>
+<dt><strong><a name="cat" class="item"><strong>cat</strong></a></strong></dt>
+
+<dd>
+<p>cat [FILE]...</p>
+<p>Concatenate FILEs and print them to stdout</p>
+</dd>
+<dt><strong><a name="chmod" class="item"><strong>chmod</strong></a></strong></dt>
+
+<dd>
+<p>chmod [-R] MODE[,MODE]... FILE...</p>
+<p>Each MODE is one or more of the letters ugoa, one of the
+symbols +-= and one or more of the letters rwxst</p>
+<pre>
+        -R      Recurse</pre>
+</dd>
+<dt><strong><a name="chown" class="item"><strong>chown</strong></a></strong></dt>
+
+<dd>
+<p>chown [-RhLHP]... OWNER[&lt;.|:&gt;[GROUP]] FILE...</p>
+<p>Change the owner and/or group of each FILE to OWNER and/or GROUP</p>
+<pre>
+        -R      Recurse
+        -h      Affect symlinks instead of symlink targets
+        -L      Traverse all symlinks to directories
+        -H      Traverse symlinks on command line only
+        -P      Don't traverse symlinks (default)</pre>
+</dd>
+<dt><strong><a name="clear" class="item"><strong>clear</strong></a></strong></dt>
+
+<dd>
+<p>clear</p>
+<p>Clear screen</p>
+</dd>
+<dt><strong><a name="cp" class="item"><strong>cp</strong></a></strong></dt>
+
+<dd>
+<p>cp [OPTIONS] SOURCE... DEST</p>
+<p>Copy SOURCE(s) to DEST</p>
+<pre>
+        -a      Same as -dpR
+        -R,-r   Recurse
+        -d,-P   Preserve symlinks (default if -R)
+        -L      Follow all symlinks
+        -H      Follow symlinks on command line
+        -p      Preserve file attributes if possible
+        -f      Overwrite
+        -i      Prompt before overwrite
+        -l,-s   Create (sym)links</pre>
+</dd>
+<dt><strong><a name="cpio" class="item"><strong>cpio</strong></a></strong></dt>
+
+<dd>
+<p>cpio [-dmvu] [-F FILE] [-H newc] [-tio] [-p DIR] [EXTR_FILE]...</p>
+<p>Extract or list files from a cpio archive, or
+create an archive (-o) or copy files (-p) using file list on stdin</p>
+<p>Main operation mode:</p>
+<pre>
+        -t      List
+        -i      Extract EXTR_FILEs (or all)
+        -o      Create (requires -H newc)
+        -p DIR  Copy files to DIR
+        -d      Make leading directories
+        -m      Preserve mtime
+        -v      Verbose
+        -u      Overwrite
+        -F FILE Input (-t,-i,-p) or output (-o) file
+        -H newc Archive format</pre>
+</dd>
+<dt><strong><a name="date" class="item"><strong>date</strong></a></strong></dt>
+
+<dd>
+<p>date [OPTIONS] [+FMT] [TIME]</p>
+<p>Display time (using +FMT), or set time</p>
+<pre>
+        [-s,--set] TIME Set time to TIME
+        -u,--utc        Work in UTC (don't convert to local time)
+        -R,--rfc-2822   Output RFC-2822 compliant date string
+        -I[SPEC]        Output ISO-8601 compliant date string
+                        SPEC='date' (default) for date only,
+                        'hours', 'minutes', or 'seconds' for date and
+                        time to the indicated precision
+        -r,--reference FILE     Display last modification time of FILE
+        -d,--date TIME  Display TIME, not 'now'
+        -D FMT          Use FMT for -d TIME conversion</pre>
+<p>Recognized TIME formats:</p>
+<pre>
+        hh:mm[:ss]
+        [YYYY.]MM.DD-hh:mm[:ss]
+        YYYY-MM-DD hh:mm[:ss]
+        [[[[[YY]YY]MM]DD]hh]mm[.ss]
+        'date TIME' form accepts MMDDhhmm[[YY]YY][.ss] instead</pre>
+</dd>
+<dt><strong><a name="dpkg" class="item"><strong>dpkg</strong></a></strong></dt>
+
+<dd>
+<p>dpkg [-ilCPru] [-F OPT] PACKAGE</p>
+<p>Install, remove and manage Debian packages</p>
+<pre>
+        -i,--install    Install the package
+        -l,--list       List of installed packages
+        --configure     Configure an unpackaged package
+        -P,--purge      Purge all files of a package
+        -r,--remove     Remove all but the configuration files for a package
+        --unpack        Unpack a package, but don't configure it
+        --force-depends Ignore dependency problems
+        --force-confnew Overwrite existing config files when installing
+        --force-confold Keep old config files when installing</pre>
+</dd>
+<dt><strong><a name="echo" class="item"><strong>echo</strong></a></strong></dt>
+
+<dd>
+<p>echo [-neE] [ARG]...</p>
+<p>Print the specified ARGs to stdout</p>
+<pre>
+        -n      Suppress trailing newline
+        -e      Interpret backslash escapes (i.e., \t=tab)
+        -E      Don't interpret backslash escapes (default)</pre>
+</dd>
+<dt><strong><a name="ed" class="item"><strong>ed</strong></a></strong></dt>
+
+<dd>
+<p>ed</p>
+</dd>
+<dt><strong><a name="env" class="item"><strong>env</strong></a></strong></dt>
+
+<dd>
+<p>env [-iu] [-] [name=value]... [PROG ARGS]</p>
+<p>Print the current environment or run PROG after setting up
+the specified environment</p>
+<pre>
+        -, -i   Start with an empty environment
+        -u      Remove variable from the environment</pre>
+</dd>
+<dt><strong><a name="expr" class="item"><strong>expr</strong></a></strong></dt>
+
+<dd>
+<p>expr EXPRESSION</p>
+<p>Print the value of EXPRESSION to stdout</p>
+<p>EXPRESSION may be:</p>
+<pre>
+        ARG1 | ARG2     ARG1 if it is neither null nor 0, otherwise ARG2
+        ARG1 &amp; ARG2     ARG1 if neither argument is null or 0, otherwise 0
+        ARG1 &lt; ARG2     1 if ARG1 is less than ARG2, else 0. Similarly:
+        ARG1 &lt;= ARG2
+        ARG1 = ARG2
+        ARG1 != ARG2
+        ARG1 &gt;= ARG2
+        ARG1 &gt; ARG2
+        ARG1 + ARG2     Sum of ARG1 and ARG2. Similarly:
+        ARG1 - ARG2
+        ARG1 * ARG2
+        ARG1 / ARG2
+        ARG1 % ARG2
+        STRING : REGEXP         Anchored pattern match of REGEXP in STRING
+        match STRING REGEXP     Same as STRING : REGEXP
+        substr STRING POS LENGTH Substring of STRING, POS counted from 1
+        index STRING CHARS      Index in STRING where any CHARS is found, or 0
+        length STRING           Length of STRING
+        quote TOKEN             Interpret TOKEN as a string, even if
+                                it is a keyword like 'match' or an
+                                operator like '/'
+        (EXPRESSION)            Value of EXPRESSION</pre>
+<p>Beware that many operators need to be escaped or quoted for shells.
+Comparisons are arithmetic if both ARGs are numbers, else
+lexicographical. Pattern matches return the string matched between
+\( and \) or null; if \( and \) are not used, they return the number
+of characters matched or 0.</p>
+</dd>
+<dt><strong><a name="false" class="item"><strong>false</strong></a></strong></dt>
+
+<dd>
+<p>false</p>
+<p>Return an exit code of FALSE (1)</p>
+</dd>
+<dt><strong><a name="getopt" class="item"><strong>getopt</strong></a></strong></dt>
+
+<dd>
+<p>getopt [OPTIONS] [--] OPTSTRING PARAMS</p>
+<pre>
+        -n,--name=PROGNAME              The name under which errors are reported
+        -o,--options=OPTSTRING          Short options to recognize
+        -q,--quiet                      No error messages on unrecognized options
+        -Q,--quiet-output               No normal output
+        -s,--shell=SHELL                Set shell quoting conventions
+        -T,--test                       Version test (exits with 4)
+        -u,--unquoted                   Don't quote output</pre>
+</dd>
+<dt><strong><a name="gunzip" class="item"><strong>gunzip</strong></a></strong></dt>
+
+<dd>
+<p>gunzip [-cft] [FILE]...</p>
+<p>Decompress FILEs (or stdin)</p>
+<pre>
+        -c      Write to stdout
+        -f      Force
+        -t      Test file integrity</pre>
+</dd>
+<dt><strong><a name="gzip" class="item"><strong>gzip</strong></a></strong></dt>
+
+<dd>
+<p>gzip [-cfd] [FILE]...</p>
+<p>Compress FILEs (or stdin)</p>
+<pre>
+        -d      Decompress
+        -c      Write to stdout
+        -f      Force</pre>
+</dd>
+<dt><strong><a name="hd" class="item"><strong>hd</strong></a></strong></dt>
+
+<dd>
+<p>hd FILE...</p>
+<p>hd is an alias for hexdump -C</p>
+</dd>
+<dt><strong><a name="hexdump" class="item"><strong>hexdump</strong></a></strong></dt>
+
+<dd>
+<p>hexdump [-bcCdefnosvxR] [FILE]...</p>
+<p>Display FILEs (or stdin) in a user specified format</p>
+<pre>
+        -b              One-byte octal display
+        -c              One-byte character display
+        -C              Canonical hex+ASCII, 16 bytes per line
+        -d              Two-byte decimal display
+        -e FORMAT_STRING
+        -f FORMAT_FILE
+        -n LENGTH       Interpret only LENGTH bytes of input
+        -o              Two-byte octal display
+        -s OFFSET       Skip OFFSET bytes
+        -v              Display all input data
+        -x              Two-byte hexadecimal display
+        -R              Reverse of 'hexdump -Cv'</pre>
+</dd>
+<dt><strong><a name="id" class="item"><strong>id</strong></a></strong></dt>
+
+<dd>
+<p>id [OPTIONS] [USER]</p>
+<p>Print information about USER or the current user</p>
+<pre>
+        -u      User ID
+        -g      Group ID
+        -G      Supplementary group IDs
+        -n      Print names instead of numbers
+        -r      Print real ID instead of effective ID</pre>
+</dd>
+<dt><strong><a name="kill" class="item"><strong>kill</strong></a></strong></dt>
+
+<dd>
+<p>kill [-l] [-SIG] PID...</p>
+<p>Send a signal (default: TERM) to given PIDs</p>
+<pre>
+        -l      List all signal names and numbers</pre>
+</dd>
+<dt><strong><a name="ln" class="item"><strong>ln</strong></a></strong></dt>
+
+<dd>
+<p>ln [OPTIONS] TARGET... LINK|DIR</p>
+<p>Create a link LINK or DIR/TARGET to the specified TARGET(s)</p>
+<pre>
+        -s      Make symlinks instead of hardlinks
+        -f      Remove existing destinations
+        -n      Don't dereference symlinks - treat like normal file
+        -b      Make a backup of the target (if exists) before link operation
+        -S suf  Use suffix instead of ~ when making backup files
+        -T      2nd arg must be a DIR
+        -v      Verbose</pre>
+</dd>
+<dt><strong><a name="ls" class="item"><strong>ls</strong></a></strong></dt>
+
+<dd>
+<p>ls [-1AaCxdLHRFplinsehrSXvctu] [-w WIDTH] [FILE]...</p>
+<p>List directory contents</p>
+<pre>
+        -1      One column output
+        -a      Include entries which start with .
+        -A      Like -a, but exclude . and ..
+        -C      List by columns
+        -x      List by lines
+        -d      List directory entries instead of contents
+        -L      Follow symlinks
+        -H      Follow symlinks on command line
+        -R      Recurse
+        -p      Append / to dir entries
+        -F      Append indicator (one of */=@|) to entries
+        -l      Long listing format
+        -i      List inode numbers
+        -n      List numeric UIDs and GIDs instead of names
+        -s      List allocated blocks
+        -e      List full date and time
+        -h      List sizes in human readable format (1K 243M 2G)
+        -r      Sort in reverse order
+        -S      Sort by size
+        -X      Sort by extension
+        -v      Sort by version
+        -c      With -l: sort by ctime
+        -t      With -l: sort by mtime
+        -u      With -l: sort by atime
+        -w N    Assume the terminal is N columns wide
+        --color[={always,never,auto}]   Control coloring</pre>
+</dd>
+<dt><strong><a name="md5sum" class="item"><strong>md5sum</strong></a></strong></dt>
+
+<dd>
+<p>md5sum [-c[sw]] [FILE]...</p>
+<p>Print or check MD5 checksums</p>
+<pre>
+        -c      Check sums against list in FILEs
+        -s      Don't output anything, status code shows success
+        -w      Warn about improperly formatted checksum lines</pre>
+</dd>
+<dt><strong><a name="mkdir" class="item"><strong>mkdir</strong></a></strong></dt>
+
+<dd>
+<p>mkdir [OPTIONS] DIRECTORY...</p>
+<p>Create DIRECTORY</p>
+<pre>
+        -m MODE Mode
+        -p      No error if exists; make parent directories as needed</pre>
+</dd>
+<dt><strong><a name="mknod" class="item"><strong>mknod</strong></a></strong></dt>
+
+<dd>
+<p>mknod [-m MODE] NAME TYPE MAJOR MINOR</p>
+<p>Create a special file (block, character, or pipe)</p>
+<pre>
+        -m MODE Creation mode (default a=rw)
+TYPE:
+        b       Block device
+        c or u  Character device
+        p       Named pipe (MAJOR and MINOR are ignored)</pre>
+</dd>
+<dt><strong><a name="more" class="item"><strong>more</strong></a></strong></dt>
+
+<dd>
+<p>more [FILE]...</p>
+<p>View FILE (or stdin) one screenful at a time</p>
+</dd>
+<dt><strong><a name="od" class="item"><strong>od</strong></a></strong></dt>
+
+<dd>
+<p>od [-aBbcDdeFfHhIiLlOovXx] [FILE]</p>
+<p>Print FILE (or stdin) unambiguously, as octal bytes by default</p>
+</dd>
+<dt><strong><a name="printenv" class="item"><strong>printenv</strong></a></strong></dt>
+
+<dd>
+<p>printenv [VARIABLE]...</p>
+<p>Print environment VARIABLEs.
+If no VARIABLE specified, print all.</p>
+</dd>
+<dt><strong><a name="printf" class="item"><strong>printf</strong></a></strong></dt>
+
+<dd>
+<p>printf FORMAT [ARG]...</p>
+<p>Format and print ARG(s) according to FORMAT (a-la C printf)</p>
+</dd>
+<dt><strong><a name="pwd" class="item"><strong>pwd</strong></a></strong></dt>
+
+<dd>
+<p>pwd</p>
+<p>Print the full filename of the current working directory</p>
+</dd>
+<dt><strong><a name="seq" class="item"><strong>seq</strong></a></strong></dt>
+
+<dd>
+<p>seq [-w] [-s SEP] [FIRST [INC]] LAST</p>
+<p>Print numbers from FIRST to LAST, in steps of INC.
+FIRST, INC default to 1.</p>
+<pre>
+        -w      Pad to last with leading zeros
+        -s SEP  String separator</pre>
+</dd>
+<dt><strong><a name="setsid" class="item"><strong>setsid</strong></a></strong></dt>
+
+<dd>
+<p>setsid PROG ARGS</p>
+<p>Run PROG in a new session. PROG will have no controlling terminal
+and will not be affected by keyboard signals (Ctrl-C etc).
+See <a href="#setsid"><code>setsid(2)</code></a> for details.</p>
+</dd>
+<dt><strong><a name="sh" class="item"><strong>sh</strong></a></strong></dt>
+
+<dd>
+<p>sh [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE [ARGS]]</p>
+<p>Unix shell interpreter</p>
+</dd>
+<dt><strong><a name="sleep" class="item"><strong>sleep</strong></a></strong></dt>
+
+<dd>
+<p>sleep [N]...</p>
+<p>Pause for a time equal to the total of the args given, where each arg can
+have an optional suffix of (s)econds, (m)inutes, (h)ours, or (d)ays</p>
+</dd>
+<dt><strong><a name="sort" class="item"><strong>sort</strong></a></strong></dt>
+
+<dd>
+<p>sort [-nrugMcszbdfimSTokt] [-o FILE] [-k start[.offset][opts][,end[.offset][opts]] [-t CHAR] [FILE]...</p>
+<p>Sort lines of text</p>
+<pre>
+        -b      Ignore leading blanks
+        -c      Check whether input is sorted
+        -d      Dictionary order (blank or alphanumeric only)
+        -f      Ignore case
+        -g      General numerical sort
+        -i      Ignore unprintable characters
+        -k      Sort key
+        -M      Sort month
+        -n      Sort numbers
+        -o      Output to file
+        -k      Sort by key
+        -t CHAR Key separator
+        -r      Reverse sort order
+        -s      Stable (don't sort ties alphabetically)
+        -u      Suppress duplicate lines
+        -z      Lines are terminated by NUL, not newline
+        -mST    Ignored for GNU compatibility</pre>
+</dd>
+<dt><strong><a name="split" class="item"><strong>split</strong></a></strong></dt>
+
+<dd>
+<p>split [OPTIONS] [INPUT [PREFIX]]</p>
+<pre>
+        -b N[k|m]       Split by N (kilo|mega)bytes
+        -l N            Split by N lines
+        -a N            Use N letters as suffix</pre>
+</dd>
+<dt><strong><a name="strings" class="item"><strong>strings</strong></a></strong></dt>
+
+<dd>
+<p>strings [-afo] [-n LEN] [FILE]...</p>
+<p>Display printable strings in a binary file</p>
+<pre>
+        -a      Scan whole file (default)
+        -f      Precede strings with filenames
+        -n LEN  At least LEN characters form a string (default 4)
+        -o      Precede strings with decimal offsets</pre>
+</dd>
+<dt><strong><a name="stty" class="item"><strong>stty</strong></a></strong></dt>
+
+<dd>
+<p>stty [-a|g] [-F DEVICE] [SETTING]...</p>
+<p>Without arguments, prints baud rate, line discipline,
+and deviations from stty sane</p>
+<pre>
+        -F DEVICE       Open device instead of stdin
+        -a              Print all current settings in human-readable form
+        -g              Print in stty-readable form
+        [SETTING]       See manpage</pre>
+</dd>
+<dt><strong><a name="tail" class="item"><strong>tail</strong></a></strong></dt>
+
+<dd>
+<p>tail [OPTIONS] [FILE]...</p>
+<p>Print last 10 lines of each FILE (or stdin) to stdout.
+With more than one FILE, precede each with a filename header.</p>
+<pre>
+        -f              Print data as file grows
+        -s SECONDS      Wait SECONDS between reads with -f
+        -n N[kbm]       Print last N lines
+        -n +N[kbm]      Start on Nth line and print the rest
+        -c [+]N[kbm]    Print last N bytes
+        -q              Never print headers
+        -v              Always print headers</pre>
+<p>N may be suffixed by k (x1024), b (x512), or m (x1024^2).</p>
+</dd>
+<dt><strong><a name="tar" class="item"><strong>tar</strong></a></strong></dt>
+
+<dd>
+<p>tar -[cxtzhmvO] [-X FILE] [-T FILE] [-f TARFILE] [-C DIR] [FILE]...</p>
+<p>Create, extract, or list files from a tar file</p>
+<p>Operation:</p>
+<pre>
+        c       Create
+        x       Extract
+        t       List
+        f       Name of TARFILE ('-' for stdin/out)
+        C       Change to DIR before operation
+        v       Verbose
+        z       (De)compress using gzip
+        O       Extract to stdout
+        h       Follow symlinks
+        m       Don't restore mtime
+        exclude File to exclude
+        X       File with names to exclude
+        T       File with names to include</pre>
+</dd>
+<dt><strong><a name="tee" class="item"><strong>tee</strong></a></strong></dt>
+
+<dd>
+<p>tee [-ai] [FILE]...</p>
+<p>Copy stdin to each FILE, and also to stdout</p>
+<pre>
+        -a      Append to the given FILEs, don't overwrite
+        -i      Ignore interrupt signals (SIGINT)</pre>
+</dd>
+<dt><strong><a name="touch" class="item"><strong>touch</strong></a></strong></dt>
+
+<dd>
+<p>touch [-c] FILE...</p>
+<p>Update the last-modified date on the given FILE[s]</p>
+<pre>
+        -c      Don't create files</pre>
+</dd>
+<dt><strong><a name="true" class="item"><strong>true</strong></a></strong></dt>
+
+<dd>
+<p>true</p>
+<p>Return an exit code of TRUE (0)</p>
+</dd>
+<dt><strong><a name="tty" class="item"><strong>tty</strong></a></strong></dt>
+
+<dd>
+<p>tty</p>
+<p>Print file name of stdin's terminal</p>
+</dd>
+<dt><strong><a name="uncompress" class="item"><strong>uncompress</strong></a></strong></dt>
+
+<dd>
+<p>uncompress [-cf] [FILE]...</p>
+<p>Decompress .Z file[s]</p>
+<pre>
+        -c      Write to stdout
+        -f      Overwrite</pre>
+</dd>
+<dt><strong><a name="unzip" class="item"><strong>unzip</strong></a></strong></dt>
+
+<dd>
+<p>unzip [-lnopq] FILE[.zip] [FILE]... [-x FILE...] [-d DIR]</p>
+<p>Extract FILEs from ZIP archive</p>
+<pre>
+        -l      List contents (with -q for short form)
+        -n      Never overwrite files (default: ask)
+        -o      Overwrite
+        -p      Print to stdout
+        -q      Quiet
+        -x FILE Exclude FILEs
+        -d DIR  Extract into DIR</pre>
+</dd>
+<dt><strong><a name="usleep" class="item"><strong>usleep</strong></a></strong></dt>
+
+<dd>
+<p>usleep N</p>
+<p>Pause for N microseconds</p>
+</dd>
+<dt><strong><a name="wc" class="item"><strong>wc</strong></a></strong></dt>
+
+<dd>
+<p>wc [-clwL] [FILE]...</p>
+<p>Count lines, words, and bytes for each FILE (or stdin)</p>
+<pre>
+        -c      Count bytes
+        -l      Count newlines
+        -w      Count words
+        -L      Print longest line length</pre>
+</dd>
+<dt><strong><a name="which" class="item"><strong>which</strong></a></strong></dt>
+
+<dd>
+<p>which [COMMAND]...</p>
+<p>Locate a COMMAND</p>
+</dd>
+<dt><strong><a name="whoami" class="item"><strong>whoami</strong></a></strong></dt>
+
+<dd>
+<p>whoami</p>
+<p>Print the user name associated with the current effective user id</p>
+</dd>
+<dt><strong><a name="yes" class="item"><strong>yes</strong></a></strong></dt>
+
+<dd>
+<p>yes [STRING]</p>
+<p>Repeatedly output a line with STRING, or 'y'</p>
+</dd>
+<dt><strong><a name="zcat" class="item"><strong>zcat</strong></a></strong></dt>
+
+<dd>
+<p>zcat [FILE]...</p>
+<p>Decompress to stdout</p>
+</dd>
+</dl>
+<p>
+</p>
+<hr />
+<h1><a name="libc_nss">LIBC NSS</a></h1>
+<p>GNU Libc (glibc) uses the Name Service Switch (NSS) to configure the behavior
+of the C library for the local environment, and to configure how it reads
+system data, such as passwords and group information.  This is implemented
+using an /etc/nsswitch.conf configuration file, and using one or more of the
+/lib/libnss_* libraries.  BusyBox tries to avoid using any libc calls that make
+use of NSS.  Some applets however, such as login and su, will use libc functions
+that require NSS.</p>
+<p>If you enable CONFIG_USE_BB_PWD_GRP, BusyBox will use internal functions to
+directly access the /etc/passwd, /etc/group, and /etc/shadow files without
+using NSS.  This may allow you to run your system without the need for
+installing any of the NSS configuration files and libraries.</p>
+<p>When used with glibc, the BusyBox 'networking' applets will similarly require
+that you install at least some of the glibc NSS stuff (in particular,
+/etc/nsswitch.conf, /lib/libnss_dns*, /lib/libnss_files*, and /lib/libresolv*).</p>
+<p>Shameless Plug: As an alternative, one could use a C library such as uClibc.  In
+addition to making your system significantly smaller, uClibc does not require the
+use of any NSS support files or libraries.</p>
+<p>
+</p>
+<hr />
+<h1><a name="maintainer">MAINTAINER</a></h1>
+<p>Denis Vlasenko &lt;<a href="mailto:vda.linux@googlemail.com">vda.linux@googlemail.com</a>&gt;</p>
+<p>
+</p>
+<hr />
+<h1><a name="authors">AUTHORS</a></h1>
+<p>The following people have contributed code to BusyBox whether they know it or
+not.  If you have written code included in BusyBox, you should probably be
+listed here so you can obtain your bit of eternal glory.  If you should be
+listed here, or the description of what you have done needs more detail, or is
+incorrect, please send in an update.</p>
+<br><p>Emanuele Aina &lt;<a href="mailto:emanuele.aina@tiscali.it">emanuele.aina@tiscali.it</a>&gt;
+    run-parts</p>
+<br><p>Erik Andersen &lt;<a href="mailto:andersen@codepoet.org">andersen@codepoet.org</a>&gt;</p>
+<pre>
+    Tons of new stuff, major rewrite of most of the
+    core apps, tons of new apps as noted in header files.
+    Lots of tedious effort writing these boring docs that
+    nobody is going to actually read.</pre>
+<br><p>Laurence Anderson &lt;<a href="mailto:l.d.anderson@warwick.ac.uk">l.d.anderson@warwick.ac.uk</a>&gt;</p>
+<pre>
+    rpm2cpio, unzip, get_header_cpio, read_gz interface, rpm</pre>
+<br><p>Jeff Angielski &lt;<a href="mailto:jeff@theptrgroup.com">jeff@theptrgroup.com</a>&gt;</p>
+<pre>
+    ftpput, ftpget</pre>
+<br><p>Edward Betts &lt;<a href="mailto:edward@debian.org">edward@debian.org</a>&gt;</p>
+<pre>
+    expr, hostid, logname, whoami</pre>
+<br><p>John Beppu &lt;<a href="mailto:beppu@codepoet.org">beppu@codepoet.org</a>&gt;</p>
+<pre>
+    du, nslookup, sort</pre>
+<br><p>Brian Candler &lt;<a href="mailto:B.Candler@pobox.com">B.Candler@pobox.com</a>&gt;</p>
+<pre>
+    tiny-ls(ls)</pre>
+<br><p>Randolph Chung &lt;<a href="mailto:tausq@debian.org">tausq@debian.org</a>&gt;</p>
+<pre>
+    fbset, ping, hostname</pre>
+<br><p>Dave Cinege &lt;<a href="mailto:dcinege@psychosis.com">dcinege@psychosis.com</a>&gt;</p>
+<pre>
+    more(v2), makedevs, dutmp, modularization, auto links file,
+    various fixes, Linux Router Project maintenance</pre>
+<br><p>Jordan Crouse &lt;<a href="mailto:jordan@cosmicpenguin.net">jordan@cosmicpenguin.net</a>&gt;</p>
+<pre>
+    ipcalc</pre>
+<br><p>Magnus Damm &lt;<a href="mailto:damm@opensource.se">damm@opensource.se</a>&gt;</p>
+<pre>
+    tftp client insmod powerpc support</pre>
+<br><p>Larry Doolittle &lt;<a href="mailto:ldoolitt@recycle.lbl.gov">ldoolitt@recycle.lbl.gov</a>&gt;</p>
+<pre>
+    pristine source directory compilation, lots of patches and fixes.</pre>
+<br><p>Glenn Engel &lt;<a href="mailto:glenne@engel.org">glenne@engel.org</a>&gt;</p>
+<pre>
+    httpd</pre>
+<br><p>Gennady Feldman &lt;<a href="mailto:gfeldman@gena01.com">gfeldman@gena01.com</a>&gt;</p>
+<pre>
+    Sysklogd (single threaded syslogd, IPC Circular buffer support,
+    logread), various fixes.</pre>
+<br><p>Karl M. Hegbloom &lt;<a href="mailto:karlheg@debian.org">karlheg@debian.org</a>&gt;</p>
+<pre>
+    cp_mv.c, the test suite, various fixes to utility.c, &amp;c.</pre>
+<br><p>Daniel Jacobowitz &lt;<a href="mailto:dan@debian.org">dan@debian.org</a>&gt;</p>
+<pre>
+    mktemp.c</pre>
+<br><p>Matt Kraai &lt;<a href="mailto:kraai@alumni.cmu.edu">kraai@alumni.cmu.edu</a>&gt;</p>
+<pre>
+    documentation, bugfixes, test suite</pre>
+<br><p>Stephan Linz &lt;<a href="mailto:linz@li-pro.net">linz@li-pro.net</a>&gt;</p>
+<pre>
+    ipcalc, Red Hat equivalence</pre>
+<br><p>John Lombardo &lt;<a href="mailto:john@deltanet.com">john@deltanet.com</a>&gt;</p>
+<pre>
+    tr</pre>
+<br><p>Glenn McGrath &lt;<a href="mailto:bug1@iinet.net.au">bug1@iinet.net.au</a>&gt;</p>
+<pre>
+    Common unarchiving code and unarchiving applets, ifupdown, ftpgetput,
+    nameif, sed, patch, fold, install, uudecode.
+    Various bugfixes, review and apply numerous patches.</pre>
+<br><p>Manuel Novoa III &lt;<a href="mailto:mjn3@codepoet.org">mjn3@codepoet.org</a>&gt;</p>
+<pre>
+    cat, head, mkfifo, mknod, rmdir, sleep, tee, tty, uniq, usleep, wc, yes,
+    mesg, vconfig, make_directory, parse_mode, dirname, mode_string,
+    get_last_path_component, simplify_path, and a number trivial libbb routines</pre>
+<pre>
+    also bug fixes, partial rewrites, and size optimizations in
+    ash, basename, cal, cmp, cp, df, du, echo, env, ln, logname, md5sum, mkdir,
+    mv, realpath, rm, sort, tail, touch, uname, watch, arith, human_readable,
+    interface, dutmp, ifconfig, route</pre>
+<br><p>Vladimir Oleynik &lt;<a href="mailto:dzo@simtreas.ru">dzo@simtreas.ru</a>&gt;</p>
+<pre>
+    cmdedit; xargs(current), httpd(current);
+    ports: ash, crond, fdisk, inetd, stty, traceroute, top;
+    locale, various fixes
+    and irreconcilable critic of everything not perfect.</pre>
+<br><p>Bruce Perens &lt;<a href="mailto:bruce@pixar.com">bruce@pixar.com</a>&gt;</p>
+<pre>
+    Original author of BusyBox in 1995, 1996. Some of his code can
+    still be found hiding here and there...</pre>
+<br><p>Tim Riker &lt;<a href="mailto:Tim@Rikers.org">Tim@Rikers.org</a>&gt;</p>
+<pre>
+    bug fixes, member of fan club</pre>
+<br><p>Kent Robotti &lt;<a href="mailto:robotti@metconnect.com">robotti@metconnect.com</a>&gt;</p>
+<pre>
+    reset, tons and tons of bug reports and patches.</pre>
+<br><p>Chip Rosenthal &lt;<a href="mailto:chip@unicom.com">chip@unicom.com</a>&gt;, &lt;<a href="mailto:crosenth@covad.com">crosenth@covad.com</a>&gt;</p>
+<pre>
+    wget - Contributed by permission of Covad Communications</pre>
+<br><p>Pavel Roskin &lt;<a href="mailto:proski@gnu.org">proski@gnu.org</a>&gt;</p>
+<pre>
+    Lots of bugs fixes and patches.</pre>
+<br><p>Gyepi Sam &lt;<a href="mailto:gyepi@praxis-sw.com">gyepi@praxis-sw.com</a>&gt;</p>
+<pre>
+    Remote logging feature for syslogd</pre>
+<br><p>Linus Torvalds &lt;<a href="mailto:torvalds@transmeta.com">torvalds@transmeta.com</a>&gt;</p>
+<pre>
+    mkswap, fsck.minix, mkfs.minix</pre>
+<br><p>Mark Whitley &lt;<a href="mailto:markw@codepoet.org">markw@codepoet.org</a>&gt;</p>
+<pre>
+    grep, sed, cut, xargs(previous),
+    style-guide, new-applet-HOWTO, bug fixes, etc.</pre>
+<br><p>Charles P. Wright &lt;<a href="mailto:cpwright@villagenet.com">cpwright@villagenet.com</a>&gt;</p>
+<pre>
+    gzip, mini-netcat(nc)</pre>
+<br><p>Enrique Zanardi &lt;<a href="mailto:ezanardi@ull.es">ezanardi@ull.es</a>&gt;</p>
+<pre>
+    tarcat (since removed), loadkmap, various fixes, Debian maintenance</pre>
+<br><p>Tito Ragusa &lt;<a href="mailto:farmatito@tiscali.it">farmatito@tiscali.it</a>&gt;</p>
+<pre>
+    devfsd and size optimizations in strings, openvt and deallocvt.</pre>
+<br><p>Paul Fox &lt;<a href="mailto:pgf@foxharp.boston.ma.us">pgf@foxharp.boston.ma.us</a>&gt;</p>
+<pre>
+    vi editing mode for ash, various other patches/fixes</pre>
+<br><p>Roberto A. Foglietta &lt;<a href="mailto:me@roberto.foglietta.name">me@roberto.foglietta.name</a>&gt;</p>
+<pre>
+    port: dnsd</pre>
+<br><p>Bernhard Reutner-Fischer &lt;<a href="mailto:rep.dot.nop@gmail.com">rep.dot.nop@gmail.com</a>&gt;</p>
+<pre>
+    misc</pre>
+<br><p>Mike Frysinger &lt;<a href="mailto:vapier@gentoo.org">vapier@gentoo.org</a>&gt;</p>
+<pre>
+    initial e2fsprogs, printenv, setarch, sum, misc</pre>
+<br><p>Jie Zhang &lt;<a href="mailto:jie.zhang@analog.com">jie.zhang@analog.com</a>&gt;</p>
+<pre>
+    fixed two bugs in msh and hush (exitcode of killed processes)</pre>
+
+</body>
+
+</html>
diff -rupN busybox-1.22.1/docs/busybox.pod ../src3m/busybox-1.22.1/docs/busybox.pod
--- busybox-1.22.1/docs/busybox.pod	1970-01-01 01:00:00.000000000 +0100
+++ ../src3m/busybox-1.22.1/docs/busybox.pod	2015-03-30 00:10:28.386188120 +0200
@@ -0,0 +1,1014 @@
+# vi: set sw=4 ts=4:
+
+=head1 NAME
+
+BusyBox - The Swiss Army Knife of Embedded Linux
+
+=head1 SYNTAX
+
+ busybox <applet> [arguments...]  # or
+
+ <applet> [arguments...]	  # if symlinked
+
+=head1 DESCRIPTION
+
+BusyBox combines tiny versions of many common UNIX utilities into a single
+small executable. It provides minimalist replacements for most of the utilities
+you usually find in GNU coreutils, util-linux, etc. The utilities in BusyBox
+generally have fewer options than their full-featured GNU cousins; however, the
+options that are included provide the expected functionality and behave very
+much like their GNU counterparts.
+
+BusyBox has been written with size-optimization and limited resources in mind.
+It is also extremely modular so you can easily include or exclude commands (or
+features) at compile time. This makes it easy to customize your embedded
+systems. To create a working system, just add /dev, /etc, and a Linux kernel.
+BusyBox provides a fairly complete POSIX environment for any small or embedded
+system.
+
+BusyBox is extremely configurable.  This allows you to include only the
+components you need, thereby reducing binary size. Run 'make config' or 'make
+menuconfig' to select the functionality that you wish to enable.  Then run
+'make' to compile BusyBox using your configuration.
+
+After the compile has finished, you should use 'make install' to install
+BusyBox. This will install the 'bin/busybox' binary, in the target directory
+specified by CONFIG_PREFIX. CONFIG_PREFIX can be set when configuring BusyBox,
+or you can specify an alternative location at install time (i.e., with a
+command line like 'make CONFIG_PREFIX=/tmp/foo install'). If you enabled
+any applet installation scheme (either as symlinks or hardlinks), these will
+also be installed in the location pointed to by CONFIG_PREFIX.
+
+=head1 USAGE
+
+BusyBox is a multi-call binary.  A multi-call binary is an executable program
+that performs the same job as more than one utility program.  That means there
+is just a single BusyBox binary, but that single binary acts like a large
+number of utilities.  This allows BusyBox to be smaller since all the built-in
+utility programs (we call them applets) can share code for many common
+operations.
+
+You can also invoke BusyBox by issuing a command as an argument on the
+command line.  For example, entering
+
+	/bin/busybox ls
+
+will also cause BusyBox to behave as 'ls'.
+
+Of course, adding '/bin/busybox' into every command would be painful.  So most
+people will invoke BusyBox using links to the BusyBox binary.
+
+For example, entering
+
+	ln -s /bin/busybox ls
+	./ls
+
+will cause BusyBox to behave as 'ls' (if the 'ls' command has been compiled
+into BusyBox).  Generally speaking, you should never need to make all these
+links yourself, as the BusyBox build system will do this for you when you run
+the 'make install' command.
+
+If you invoke BusyBox with no arguments, it will provide you with a list of the
+applets that have been compiled into your BusyBox binary.
+
+=head1 COMMON OPTIONS
+
+Most BusyBox applets support the B<--help> argument to provide a terse runtime
+description of their behavior.  If the CONFIG_FEATURE_VERBOSE_USAGE option has
+been enabled, more detailed usage information will also be available.
+
+=head1 COMMANDS
+
+Currently available applets include:
+
+	ash, basename, bash, bunzip2, bzcat, bzip2, cal, cat, chmod, chown,
+	clear, cp, cpio, date, dpkg, echo, ed, env, expr, false, getopt,
+	gunzip, gzip, hd, hexdump, id, kill, ln, ls, md5sum, mkdir, mknod,
+	more, od, printenv, printf, pwd, seq, setsid, sh, sleep, sort,
+	split, strings, stty, tail, tar, tee, touch, true, tty, uncompress,
+	unzip, usleep, wc, which, whoami, yes, zcat
+
+=head1 COMMAND DESCRIPTIONS
+
+=over 4
+
+=item B<ash>
+
+ash [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE [ARGS]]
+
+Unix shell interpreter
+
+=item B<basename>
+
+basename FILE [SUFFIX]
+
+Strip directory path and .SUFFIX from FILE
+
+
+=item B<bash>
+
+bash [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE [ARGS]]
+
+Unix shell interpreter
+
+=item B<bunzip2>
+
+bunzip2 [-cf] [FILE]...
+
+Decompress FILEs (or stdin)
+
+	-c	Write to stdout
+	-f	Force
+
+=item B<bzcat>
+
+bzcat [FILE]...
+
+Decompress to stdout
+
+=item B<bzip2>
+
+bzip2 [OPTIONS] [FILE]...
+
+Compress FILEs (or stdin) with bzip2 algorithm
+
+	-1..9	Compression level
+	-d	Decompress
+	-c	Write to stdout
+	-f	Force
+
+=item B<cal>
+
+cal [-jy] [[MONTH] YEAR]
+
+Display a calendar
+
+	-j	Use julian dates
+	-y	Display the entire year
+
+=item B<cat>
+
+cat [FILE]...
+
+Concatenate FILEs and print them to stdout
+
+=item B<chmod>
+
+chmod [-R] MODE[,MODE]... FILE...
+
+Each MODE is one or more of the letters ugoa, one of the
+symbols +-= and one or more of the letters rwxst
+
+	-R	Recurse
+
+=item B<chown>
+
+chown [-RhLHP]... OWNER[<.|:>[GROUP]] FILE...
+
+Change the owner and/or group of each FILE to OWNER and/or GROUP
+
+	-R	Recurse
+	-h	Affect symlinks instead of symlink targets
+	-L	Traverse all symlinks to directories
+	-H	Traverse symlinks on command line only
+	-P	Don't traverse symlinks (default)
+
+=item B<clear>
+
+clear 
+
+Clear screen
+
+=item B<cp>
+
+cp [OPTIONS] SOURCE... DEST
+
+Copy SOURCE(s) to DEST
+
+	-a	Same as -dpR
+	-R,-r	Recurse
+	-d,-P	Preserve symlinks (default if -R)
+	-L	Follow all symlinks
+	-H	Follow symlinks on command line
+	-p	Preserve file attributes if possible
+	-f	Overwrite
+	-i	Prompt before overwrite
+	-l,-s	Create (sym)links
+
+=item B<cpio>
+
+cpio [-dmvu] [-F FILE] [-H newc] [-tio] [-p DIR] [EXTR_FILE]...
+
+Extract or list files from a cpio archive, or
+create an archive (-o) or copy files (-p) using file list on stdin
+
+Main operation mode:
+
+	-t	List
+	-i	Extract EXTR_FILEs (or all)
+	-o	Create (requires -H newc)
+	-p DIR	Copy files to DIR
+	-d	Make leading directories
+	-m	Preserve mtime
+	-v	Verbose
+	-u	Overwrite
+	-F FILE	Input (-t,-i,-p) or output (-o) file
+	-H newc	Archive format
+
+=item B<date>
+
+date [OPTIONS] [+FMT] [TIME]
+
+Display time (using +FMT), or set time
+
+	[-s,--set] TIME	Set time to TIME
+	-u,--utc	Work in UTC (don't convert to local time)
+	-R,--rfc-2822	Output RFC-2822 compliant date string
+	-I[SPEC]	Output ISO-8601 compliant date string
+			SPEC='date' (default) for date only,
+			'hours', 'minutes', or 'seconds' for date and
+			time to the indicated precision
+	-r,--reference FILE	Display last modification time of FILE
+	-d,--date TIME	Display TIME, not 'now'
+	-D FMT		Use FMT for -d TIME conversion
+
+Recognized TIME formats:
+
+	hh:mm[:ss]
+	[YYYY.]MM.DD-hh:mm[:ss]
+	YYYY-MM-DD hh:mm[:ss]
+	[[[[[YY]YY]MM]DD]hh]mm[.ss]
+	'date TIME' form accepts MMDDhhmm[[YY]YY][.ss] instead
+
+=item B<dpkg>
+
+dpkg [-ilCPru] [-F OPT] PACKAGE
+
+Install, remove and manage Debian packages
+
+	-i,--install	Install the package
+	-l,--list	List of installed packages
+	--configure	Configure an unpackaged package
+	-P,--purge	Purge all files of a package
+	-r,--remove	Remove all but the configuration files for a package
+	--unpack	Unpack a package, but don't configure it
+	--force-depends	Ignore dependency problems
+	--force-confnew	Overwrite existing config files when installing
+	--force-confold	Keep old config files when installing
+
+=item B<echo>
+
+echo [-neE] [ARG]...
+
+Print the specified ARGs to stdout
+
+	-n	Suppress trailing newline
+	-e	Interpret backslash escapes (i.e., \t=tab)
+	-E	Don't interpret backslash escapes (default)
+
+=item B<ed>
+
+ed
+
+=item B<env>
+
+env [-iu] [-] [name=value]... [PROG ARGS]
+
+Print the current environment or run PROG after setting up
+the specified environment
+
+	-, -i	Start with an empty environment
+	-u	Remove variable from the environment
+
+=item B<expr>
+
+expr EXPRESSION
+
+Print the value of EXPRESSION to stdout
+
+EXPRESSION may be:
+
+	ARG1 | ARG2	ARG1 if it is neither null nor 0, otherwise ARG2
+	ARG1 & ARG2	ARG1 if neither argument is null or 0, otherwise 0
+	ARG1 < ARG2	1 if ARG1 is less than ARG2, else 0. Similarly:
+	ARG1 <= ARG2
+	ARG1 = ARG2
+	ARG1 != ARG2
+	ARG1 >= ARG2
+	ARG1 > ARG2
+	ARG1 + ARG2	Sum of ARG1 and ARG2. Similarly:
+	ARG1 - ARG2
+	ARG1 * ARG2
+	ARG1 / ARG2
+	ARG1 % ARG2
+	STRING : REGEXP		Anchored pattern match of REGEXP in STRING
+	match STRING REGEXP	Same as STRING : REGEXP
+	substr STRING POS LENGTH Substring of STRING, POS counted from 1
+	index STRING CHARS	Index in STRING where any CHARS is found, or 0
+	length STRING		Length of STRING
+	quote TOKEN		Interpret TOKEN as a string, even if
+				it is a keyword like 'match' or an
+				operator like '/'
+	(EXPRESSION)		Value of EXPRESSION
+
+Beware that many operators need to be escaped or quoted for shells.
+Comparisons are arithmetic if both ARGs are numbers, else
+lexicographical. Pattern matches return the string matched between
+\( and \) or null; if \( and \) are not used, they return the number
+of characters matched or 0.
+
+=item B<false>
+
+false 
+
+Return an exit code of FALSE (1)
+
+=item B<getopt>
+
+getopt [OPTIONS] [--] OPTSTRING PARAMS
+
+	-n,--name=PROGNAME		The name under which errors are reported
+	-o,--options=OPTSTRING		Short options to recognize
+	-q,--quiet			No error messages on unrecognized options
+	-Q,--quiet-output		No normal output
+	-s,--shell=SHELL		Set shell quoting conventions
+	-T,--test			Version test (exits with 4)
+	-u,--unquoted			Don't quote output
+
+=item B<gunzip>
+
+gunzip [-cft] [FILE]...
+
+Decompress FILEs (or stdin)
+
+	-c	Write to stdout
+	-f	Force
+	-t	Test file integrity
+
+=item B<gzip>
+
+gzip [-cfd] [FILE]...
+
+Compress FILEs (or stdin)
+
+	-d	Decompress
+	-c	Write to stdout
+	-f	Force
+
+=item B<hd>
+
+hd FILE...
+
+hd is an alias for hexdump -C
+
+=item B<hexdump>
+
+hexdump [-bcCdefnosvxR] [FILE]...
+
+Display FILEs (or stdin) in a user specified format
+
+	-b		One-byte octal display
+	-c		One-byte character display
+	-C		Canonical hex+ASCII, 16 bytes per line
+	-d		Two-byte decimal display
+	-e FORMAT_STRING
+	-f FORMAT_FILE
+	-n LENGTH	Interpret only LENGTH bytes of input
+	-o		Two-byte octal display
+	-s OFFSET	Skip OFFSET bytes
+	-v		Display all input data
+	-x		Two-byte hexadecimal display
+	-R		Reverse of 'hexdump -Cv'
+
+=item B<id>
+
+id [OPTIONS] [USER]
+
+Print information about USER or the current user
+
+	-u	User ID
+	-g	Group ID
+	-G	Supplementary group IDs
+	-n	Print names instead of numbers
+	-r	Print real ID instead of effective ID
+
+=item B<kill>
+
+kill [-l] [-SIG] PID...
+
+Send a signal (default: TERM) to given PIDs
+
+	-l	List all signal names and numbers
+
+=item B<ln>
+
+ln [OPTIONS] TARGET... LINK|DIR
+
+Create a link LINK or DIR/TARGET to the specified TARGET(s)
+
+	-s	Make symlinks instead of hardlinks
+	-f	Remove existing destinations
+	-n	Don't dereference symlinks - treat like normal file
+	-b	Make a backup of the target (if exists) before link operation
+	-S suf	Use suffix instead of ~ when making backup files
+	-T	2nd arg must be a DIR
+	-v	Verbose
+
+=item B<ls>
+
+ls [-1AaCxdLHRFplinsehrSXvctu] [-w WIDTH] [FILE]...
+
+List directory contents
+
+	-1	One column output
+	-a	Include entries which start with .
+	-A	Like -a, but exclude . and ..
+	-C	List by columns
+	-x	List by lines
+	-d	List directory entries instead of contents
+	-L	Follow symlinks
+	-H	Follow symlinks on command line
+	-R	Recurse
+	-p	Append / to dir entries
+	-F	Append indicator (one of */=@|) to entries
+	-l	Long listing format
+	-i	List inode numbers
+	-n	List numeric UIDs and GIDs instead of names
+	-s	List allocated blocks
+	-e	List full date and time
+	-h	List sizes in human readable format (1K 243M 2G)
+	-r	Sort in reverse order
+	-S	Sort by size
+	-X	Sort by extension
+	-v	Sort by version
+	-c	With -l: sort by ctime
+	-t	With -l: sort by mtime
+	-u	With -l: sort by atime
+	-w N	Assume the terminal is N columns wide
+	--color[={always,never,auto}]	Control coloring
+
+=item B<md5sum>
+
+md5sum [-c[sw]] [FILE]...
+
+Print or check MD5 checksums
+
+	-c	Check sums against list in FILEs
+	-s	Don't output anything, status code shows success
+	-w	Warn about improperly formatted checksum lines
+
+=item B<mkdir>
+
+mkdir [OPTIONS] DIRECTORY...
+
+Create DIRECTORY
+
+	-m MODE	Mode
+	-p	No error if exists; make parent directories as needed
+
+=item B<mknod>
+
+mknod [-m MODE] NAME TYPE MAJOR MINOR
+
+Create a special file (block, character, or pipe)
+
+	-m MODE	Creation mode (default a=rw)
+TYPE:
+	b	Block device
+	c or u	Character device
+	p	Named pipe (MAJOR and MINOR are ignored)
+
+=item B<more>
+
+more [FILE]...
+
+View FILE (or stdin) one screenful at a time
+
+=item B<od>
+
+od [-aBbcDdeFfHhIiLlOovXx] [FILE]
+
+Print FILE (or stdin) unambiguously, as octal bytes by default
+
+=item B<printenv>
+
+printenv [VARIABLE]...
+
+Print environment VARIABLEs.
+If no VARIABLE specified, print all.
+
+=item B<printf>
+
+printf FORMAT [ARG]...
+
+Format and print ARG(s) according to FORMAT (a-la C printf)
+
+=item B<pwd>
+
+pwd 
+
+Print the full filename of the current working directory
+
+=item B<seq>
+
+seq [-w] [-s SEP] [FIRST [INC]] LAST
+
+Print numbers from FIRST to LAST, in steps of INC.
+FIRST, INC default to 1.
+
+	-w	Pad to last with leading zeros
+	-s SEP	String separator
+
+=item B<setsid>
+
+setsid PROG ARGS
+
+Run PROG in a new session. PROG will have no controlling terminal
+and will not be affected by keyboard signals (Ctrl-C etc).
+See setsid(2) for details.
+
+=item B<sh>
+
+sh [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE [ARGS]]
+
+Unix shell interpreter
+
+=item B<sleep>
+
+sleep [N]...
+
+Pause for a time equal to the total of the args given, where each arg can
+have an optional suffix of (s)econds, (m)inutes, (h)ours, or (d)ays
+
+=item B<sort>
+
+sort [-nrugMcszbdfimSTokt] [-o FILE] [-k start[.offset][opts][,end[.offset][opts]] [-t CHAR] [FILE]...
+
+Sort lines of text
+
+	-b	Ignore leading blanks
+	-c	Check whether input is sorted
+	-d	Dictionary order (blank or alphanumeric only)
+	-f	Ignore case
+	-g	General numerical sort
+	-i	Ignore unprintable characters
+	-k	Sort key
+	-M	Sort month
+	-n	Sort numbers
+	-o	Output to file
+	-k	Sort by key
+	-t CHAR	Key separator
+	-r	Reverse sort order
+	-s	Stable (don't sort ties alphabetically)
+	-u	Suppress duplicate lines
+	-z	Lines are terminated by NUL, not newline
+	-mST	Ignored for GNU compatibility
+
+=item B<split>
+
+split [OPTIONS] [INPUT [PREFIX]]
+
+	-b N[k|m]	Split by N (kilo|mega)bytes
+	-l N		Split by N lines
+	-a N		Use N letters as suffix
+
+=item B<strings>
+
+strings [-afo] [-n LEN] [FILE]...
+
+Display printable strings in a binary file
+
+	-a	Scan whole file (default)
+	-f	Precede strings with filenames
+	-n LEN	At least LEN characters form a string (default 4)
+	-o	Precede strings with decimal offsets
+
+=item B<stty>
+
+stty [-a|g] [-F DEVICE] [SETTING]...
+
+Without arguments, prints baud rate, line discipline,
+and deviations from stty sane
+
+	-F DEVICE	Open device instead of stdin
+	-a		Print all current settings in human-readable form
+	-g		Print in stty-readable form
+	[SETTING]	See manpage
+
+=item B<tail>
+
+tail [OPTIONS] [FILE]...
+
+Print last 10 lines of each FILE (or stdin) to stdout.
+With more than one FILE, precede each with a filename header.
+
+	-f		Print data as file grows
+	-s SECONDS	Wait SECONDS between reads with -f
+	-n N[kbm]	Print last N lines
+	-n +N[kbm]	Start on Nth line and print the rest
+	-c [+]N[kbm]	Print last N bytes
+	-q		Never print headers
+	-v		Always print headers
+
+N may be suffixed by k (x1024), b (x512), or m (x1024^2).
+
+=item B<tar>
+
+tar -[cxtzhmvO] [-X FILE] [-T FILE] [-f TARFILE] [-C DIR] [FILE]...
+
+Create, extract, or list files from a tar file
+
+Operation:
+
+	c	Create
+	x	Extract
+	t	List
+	f	Name of TARFILE ('-' for stdin/out)
+	C	Change to DIR before operation
+	v	Verbose
+	z	(De)compress using gzip
+	O	Extract to stdout
+	h	Follow symlinks
+	m	Don't restore mtime
+	exclude	File to exclude
+	X	File with names to exclude
+	T	File with names to include
+
+=item B<tee>
+
+tee [-ai] [FILE]...
+
+Copy stdin to each FILE, and also to stdout
+
+	-a	Append to the given FILEs, don't overwrite
+	-i	Ignore interrupt signals (SIGINT)
+
+=item B<touch>
+
+touch [-c] FILE...
+
+Update the last-modified date on the given FILE[s]
+
+	-c	Don't create files
+
+=item B<true>
+
+true 
+
+Return an exit code of TRUE (0)
+
+=item B<tty>
+
+tty 
+
+Print file name of stdin's terminal
+
+=item B<uncompress>
+
+uncompress [-cf] [FILE]...
+
+Decompress .Z file[s]
+
+	-c	Write to stdout
+	-f	Overwrite
+
+=item B<unzip>
+
+unzip [-lnopq] FILE[.zip] [FILE]... [-x FILE...] [-d DIR]
+
+Extract FILEs from ZIP archive
+
+	-l	List contents (with -q for short form)
+	-n	Never overwrite files (default: ask)
+	-o	Overwrite
+	-p	Print to stdout
+	-q	Quiet
+	-x FILE	Exclude FILEs
+	-d DIR	Extract into DIR
+
+=item B<usleep>
+
+usleep N
+
+Pause for N microseconds
+
+=item B<wc>
+
+wc [-clwL] [FILE]...
+
+Count lines, words, and bytes for each FILE (or stdin)
+
+	-c	Count bytes
+	-l	Count newlines
+	-w	Count words
+	-L	Print longest line length
+
+=item B<which>
+
+which [COMMAND]...
+
+Locate a COMMAND
+
+=item B<whoami>
+
+whoami 
+
+Print the user name associated with the current effective user id
+
+=item B<yes>
+
+yes [STRING]
+
+Repeatedly output a line with STRING, or 'y'
+
+=item B<zcat>
+
+zcat [FILE]...
+
+Decompress to stdout
+
+=back
+
+=head1 LIBC NSS
+
+GNU Libc (glibc) uses the Name Service Switch (NSS) to configure the behavior
+of the C library for the local environment, and to configure how it reads
+system data, such as passwords and group information.  This is implemented
+using an /etc/nsswitch.conf configuration file, and using one or more of the
+/lib/libnss_* libraries.  BusyBox tries to avoid using any libc calls that make
+use of NSS.  Some applets however, such as login and su, will use libc functions
+that require NSS.
+
+If you enable CONFIG_USE_BB_PWD_GRP, BusyBox will use internal functions to
+directly access the /etc/passwd, /etc/group, and /etc/shadow files without
+using NSS.  This may allow you to run your system without the need for
+installing any of the NSS configuration files and libraries.
+
+When used with glibc, the BusyBox 'networking' applets will similarly require
+that you install at least some of the glibc NSS stuff (in particular,
+/etc/nsswitch.conf, /lib/libnss_dns*, /lib/libnss_files*, and /lib/libresolv*).
+
+Shameless Plug: As an alternative, one could use a C library such as uClibc.  In
+addition to making your system significantly smaller, uClibc does not require the
+use of any NSS support files or libraries.
+
+=head1 MAINTAINER
+
+Denis Vlasenko <vda.linux@googlemail.com>
+
+=head1 AUTHORS
+
+The following people have contributed code to BusyBox whether they know it or
+not.  If you have written code included in BusyBox, you should probably be
+listed here so you can obtain your bit of eternal glory.  If you should be
+listed here, or the description of what you have done needs more detail, or is
+incorrect, please send in an update.
+
+
+=for html <br>
+
+Emanuele Aina <emanuele.aina@tiscali.it>
+    run-parts
+
+=for html <br>
+
+Erik Andersen <andersen@codepoet.org>
+
+    Tons of new stuff, major rewrite of most of the
+    core apps, tons of new apps as noted in header files.
+    Lots of tedious effort writing these boring docs that
+    nobody is going to actually read.
+
+=for html <br>
+
+Laurence Anderson <l.d.anderson@warwick.ac.uk>
+
+    rpm2cpio, unzip, get_header_cpio, read_gz interface, rpm
+
+=for html <br>
+
+Jeff Angielski <jeff@theptrgroup.com>
+
+    ftpput, ftpget
+
+=for html <br>
+
+Edward Betts <edward@debian.org>
+
+    expr, hostid, logname, whoami
+
+=for html <br>
+
+John Beppu <beppu@codepoet.org>
+
+    du, nslookup, sort
+
+=for html <br>
+
+Brian Candler <B.Candler@pobox.com>
+
+    tiny-ls(ls)
+
+=for html <br>
+
+Randolph Chung <tausq@debian.org>
+
+    fbset, ping, hostname
+
+=for html <br>
+
+Dave Cinege <dcinege@psychosis.com>
+
+    more(v2), makedevs, dutmp, modularization, auto links file,
+    various fixes, Linux Router Project maintenance
+
+=for html <br>
+
+Jordan Crouse <jordan@cosmicpenguin.net>
+
+    ipcalc
+
+=for html <br>
+
+Magnus Damm <damm@opensource.se>
+
+    tftp client insmod powerpc support
+
+=for html <br>
+
+Larry Doolittle <ldoolitt@recycle.lbl.gov>
+
+    pristine source directory compilation, lots of patches and fixes.
+
+=for html <br>
+
+Glenn Engel <glenne@engel.org>
+
+    httpd
+
+=for html <br>
+
+Gennady Feldman <gfeldman@gena01.com>
+
+    Sysklogd (single threaded syslogd, IPC Circular buffer support,
+    logread), various fixes.
+
+=for html <br>
+
+Karl M. Hegbloom <karlheg@debian.org>
+
+    cp_mv.c, the test suite, various fixes to utility.c, &c.
+
+=for html <br>
+
+Daniel Jacobowitz <dan@debian.org>
+
+    mktemp.c
+
+=for html <br>
+
+Matt Kraai <kraai@alumni.cmu.edu>
+
+    documentation, bugfixes, test suite
+
+=for html <br>
+
+Stephan Linz <linz@li-pro.net>
+
+    ipcalc, Red Hat equivalence
+
+=for html <br>
+
+John Lombardo <john@deltanet.com>
+
+    tr
+
+=for html <br>
+
+Glenn McGrath <bug1@iinet.net.au>
+
+    Common unarchiving code and unarchiving applets, ifupdown, ftpgetput,
+    nameif, sed, patch, fold, install, uudecode.
+    Various bugfixes, review and apply numerous patches.
+
+=for html <br>
+
+Manuel Novoa III <mjn3@codepoet.org>
+
+    cat, head, mkfifo, mknod, rmdir, sleep, tee, tty, uniq, usleep, wc, yes,
+    mesg, vconfig, make_directory, parse_mode, dirname, mode_string,
+    get_last_path_component, simplify_path, and a number trivial libbb routines
+
+    also bug fixes, partial rewrites, and size optimizations in
+    ash, basename, cal, cmp, cp, df, du, echo, env, ln, logname, md5sum, mkdir,
+    mv, realpath, rm, sort, tail, touch, uname, watch, arith, human_readable,
+    interface, dutmp, ifconfig, route
+
+=for html <br>
+
+Vladimir Oleynik <dzo@simtreas.ru>
+
+    cmdedit; xargs(current), httpd(current);
+    ports: ash, crond, fdisk, inetd, stty, traceroute, top;
+    locale, various fixes
+    and irreconcilable critic of everything not perfect.
+
+=for html <br>
+
+Bruce Perens <bruce@pixar.com>
+
+    Original author of BusyBox in 1995, 1996. Some of his code can
+    still be found hiding here and there...
+
+=for html <br>
+
+Tim Riker <Tim@Rikers.org>
+
+    bug fixes, member of fan club
+
+=for html <br>
+
+Kent Robotti <robotti@metconnect.com>
+
+    reset, tons and tons of bug reports and patches.
+
+=for html <br>
+
+Chip Rosenthal <chip@unicom.com>, <crosenth@covad.com>
+
+    wget - Contributed by permission of Covad Communications
+
+=for html <br>
+
+Pavel Roskin <proski@gnu.org>
+
+    Lots of bugs fixes and patches.
+
+=for html <br>
+
+Gyepi Sam <gyepi@praxis-sw.com>
+
+    Remote logging feature for syslogd
+
+=for html <br>
+
+Linus Torvalds <torvalds@transmeta.com>
+
+    mkswap, fsck.minix, mkfs.minix
+
+=for html <br>
+
+Mark Whitley <markw@codepoet.org>
+
+    grep, sed, cut, xargs(previous),
+    style-guide, new-applet-HOWTO, bug fixes, etc.
+
+=for html <br>
+
+Charles P. Wright <cpwright@villagenet.com>
+
+    gzip, mini-netcat(nc)
+
+=for html <br>
+
+Enrique Zanardi <ezanardi@ull.es>
+
+    tarcat (since removed), loadkmap, various fixes, Debian maintenance
+
+=for html <br>
+
+Tito Ragusa <farmatito@tiscali.it>
+
+    devfsd and size optimizations in strings, openvt and deallocvt.
+
+=for html <br>
+
+Paul Fox <pgf@foxharp.boston.ma.us>
+
+    vi editing mode for ash, various other patches/fixes
+
+=for html <br>
+
+Roberto A. Foglietta <me@roberto.foglietta.name>
+
+    port: dnsd
+
+=for html <br>
+
+Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
+
+    misc
+
+=for html <br>
+
+Mike Frysinger <vapier@gentoo.org>
+
+    initial e2fsprogs, printenv, setarch, sum, misc
+
+=for html <br>
+
+Jie Zhang <jie.zhang@analog.com>
+
+    fixed two bugs in msh and hush (exitcode of killed processes)
+
+=cut
diff -rupN busybox-1.22.1/docs/BusyBox.txt ../src3m/busybox-1.22.1/docs/BusyBox.txt
--- busybox-1.22.1/docs/BusyBox.txt	1970-01-01 01:00:00.000000000 +0100
+++ ../src3m/busybox-1.22.1/docs/BusyBox.txt	2015-03-30 00:10:28.294188116 +0200
@@ -0,0 +1,848 @@
+NAME
+    BusyBox - The Swiss Army Knife of Embedded Linux
+
+SYNTAX
+     busybox <applet> [arguments...]  # or
+
+     <applet> [arguments...]          # if symlinked
+
+DESCRIPTION
+    BusyBox combines tiny versions of many common UNIX utilities into a
+    single small executable. It provides minimalist replacements for most of
+    the utilities you usually find in GNU coreutils, util-linux, etc. The
+    utilities in BusyBox generally have fewer options than their
+    full-featured GNU cousins; however, the options that are included
+    provide the expected functionality and behave very much like their GNU
+    counterparts.
+
+    BusyBox has been written with size-optimization and limited resources in
+    mind. It is also extremely modular so you can easily include or exclude
+    commands (or features) at compile time. This makes it easy to customize
+    your embedded systems. To create a working system, just add /dev, /etc,
+    and a Linux kernel. BusyBox provides a fairly complete POSIX environment
+    for any small or embedded system.
+
+    BusyBox is extremely configurable. This allows you to include only the
+    components you need, thereby reducing binary size. Run 'make config' or
+    'make menuconfig' to select the functionality that you wish to enable.
+    Then run 'make' to compile BusyBox using your configuration.
+
+    After the compile has finished, you should use 'make install' to install
+    BusyBox. This will install the 'bin/busybox' binary, in the target
+    directory specified by CONFIG_PREFIX. CONFIG_PREFIX can be set when
+    configuring BusyBox, or you can specify an alternative location at
+    install time (i.e., with a command line like 'make
+    CONFIG_PREFIX=/tmp/foo install'). If you enabled any applet installation
+    scheme (either as symlinks or hardlinks), these will also be installed
+    in the location pointed to by CONFIG_PREFIX.
+
+USAGE
+    BusyBox is a multi-call binary. A multi-call binary is an executable
+    program that performs the same job as more than one utility program.
+    That means there is just a single BusyBox binary, but that single binary
+    acts like a large number of utilities. This allows BusyBox to be smaller
+    since all the built-in utility programs (we call them applets) can share
+    code for many common operations.
+
+    You can also invoke BusyBox by issuing a command as an argument on the
+    command line. For example, entering
+
+            /bin/busybox ls
+
+    will also cause BusyBox to behave as 'ls'.
+
+    Of course, adding '/bin/busybox' into every command would be painful. So
+    most people will invoke BusyBox using links to the BusyBox binary.
+
+    For example, entering
+
+            ln -s /bin/busybox ls
+            ./ls
+
+    will cause BusyBox to behave as 'ls' (if the 'ls' command has been
+    compiled into BusyBox). Generally speaking, you should never need to
+    make all these links yourself, as the BusyBox build system will do this
+    for you when you run the 'make install' command.
+
+    If you invoke BusyBox with no arguments, it will provide you with a list
+    of the applets that have been compiled into your BusyBox binary.
+
+COMMON OPTIONS
+    Most BusyBox applets support the --help argument to provide a terse
+    runtime description of their behavior. If the
+    CONFIG_FEATURE_VERBOSE_USAGE option has been enabled, more detailed
+    usage information will also be available.
+
+COMMANDS
+    Currently available applets include:
+
+            ash, basename, bash, bunzip2, bzcat, bzip2, cal, cat, chmod, chown,
+            clear, cp, cpio, date, dpkg, echo, ed, env, expr, false, getopt,
+            gunzip, gzip, hd, hexdump, id, kill, ln, ls, md5sum, mkdir, mknod,
+            more, od, printenv, printf, pwd, seq, setsid, sh, sleep, sort,
+            split, strings, stty, tail, tar, tee, touch, true, tty, uncompress,
+            unzip, usleep, wc, which, whoami, yes, zcat
+
+COMMAND DESCRIPTIONS
+    ash ash [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE
+        [ARGS]]
+
+        Unix shell interpreter
+
+    basename
+        basename FILE [SUFFIX]
+
+        Strip directory path and .SUFFIX from FILE
+
+    bash
+        bash [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE
+        [ARGS]]
+
+        Unix shell interpreter
+
+    bunzip2
+        bunzip2 [-cf] [FILE]...
+
+        Decompress FILEs (or stdin)
+
+                -c      Write to stdout
+                -f      Force
+
+    bzcat
+        bzcat [FILE]...
+
+        Decompress to stdout
+
+    bzip2
+        bzip2 [OPTIONS] [FILE]...
+
+        Compress FILEs (or stdin) with bzip2 algorithm
+
+                -1..9   Compression level
+                -d      Decompress
+                -c      Write to stdout
+                -f      Force
+
+    cal cal [-jy] [[MONTH] YEAR]
+
+        Display a calendar
+
+                -j      Use julian dates
+                -y      Display the entire year
+
+    cat cat [FILE]...
+
+        Concatenate FILEs and print them to stdout
+
+    chmod
+        chmod [-R] MODE[,MODE]... FILE...
+
+        Each MODE is one or more of the letters ugoa, one of the symbols +-=
+        and one or more of the letters rwxst
+
+                -R      Recurse
+
+    chown
+        chown [-RhLHP]... OWNER[<.|:>[GROUP]] FILE...
+
+        Change the owner and/or group of each FILE to OWNER and/or GROUP
+
+                -R      Recurse
+                -h      Affect symlinks instead of symlink targets
+                -L      Traverse all symlinks to directories
+                -H      Traverse symlinks on command line only
+                -P      Don't traverse symlinks (default)
+
+    clear
+        clear
+
+        Clear screen
+
+    cp  cp [OPTIONS] SOURCE... DEST
+
+        Copy SOURCE(s) to DEST
+
+                -a      Same as -dpR
+                -R,-r   Recurse
+                -d,-P   Preserve symlinks (default if -R)
+                -L      Follow all symlinks
+                -H      Follow symlinks on command line
+                -p      Preserve file attributes if possible
+                -f      Overwrite
+                -i      Prompt before overwrite
+                -l,-s   Create (sym)links
+
+    cpio
+        cpio [-dmvu] [-F FILE] [-H newc] [-tio] [-p DIR] [EXTR_FILE]...
+
+        Extract or list files from a cpio archive, or create an archive (-o)
+        or copy files (-p) using file list on stdin
+
+        Main operation mode:
+
+                -t      List
+                -i      Extract EXTR_FILEs (or all)
+                -o      Create (requires -H newc)
+                -p DIR  Copy files to DIR
+                -d      Make leading directories
+                -m      Preserve mtime
+                -v      Verbose
+                -u      Overwrite
+                -F FILE Input (-t,-i,-p) or output (-o) file
+                -H newc Archive format
+
+    date
+        date [OPTIONS] [+FMT] [TIME]
+
+        Display time (using +FMT), or set time
+
+                [-s,--set] TIME Set time to TIME
+                -u,--utc        Work in UTC (don't convert to local time)
+                -R,--rfc-2822   Output RFC-2822 compliant date string
+                -I[SPEC]        Output ISO-8601 compliant date string
+                                SPEC='date' (default) for date only,
+                                'hours', 'minutes', or 'seconds' for date and
+                                time to the indicated precision
+                -r,--reference FILE     Display last modification time of FILE
+                -d,--date TIME  Display TIME, not 'now'
+                -D FMT          Use FMT for -d TIME conversion
+
+        Recognized TIME formats:
+
+                hh:mm[:ss]
+                [YYYY.]MM.DD-hh:mm[:ss]
+                YYYY-MM-DD hh:mm[:ss]
+                [[[[[YY]YY]MM]DD]hh]mm[.ss]
+                'date TIME' form accepts MMDDhhmm[[YY]YY][.ss] instead
+
+    dpkg
+        dpkg [-ilCPru] [-F OPT] PACKAGE
+
+        Install, remove and manage Debian packages
+
+                -i,--install    Install the package
+                -l,--list       List of installed packages
+                --configure     Configure an unpackaged package
+                -P,--purge      Purge all files of a package
+                -r,--remove     Remove all but the configuration files for a package
+                --unpack        Unpack a package, but don't configure it
+                --force-depends Ignore dependency problems
+                --force-confnew Overwrite existing config files when installing
+                --force-confold Keep old config files when installing
+
+    echo
+        echo [-neE] [ARG]...
+
+        Print the specified ARGs to stdout
+
+                -n      Suppress trailing newline
+                -e      Interpret backslash escapes (i.e., \t=tab)
+                -E      Don't interpret backslash escapes (default)
+
+    ed  ed
+
+    env env [-iu] [-] [name=value]... [PROG ARGS]
+
+        Print the current environment or run PROG after setting up the
+        specified environment
+
+                -, -i   Start with an empty environment
+                -u      Remove variable from the environment
+
+    expr
+        expr EXPRESSION
+
+        Print the value of EXPRESSION to stdout
+
+        EXPRESSION may be:
+
+                ARG1 | ARG2     ARG1 if it is neither null nor 0, otherwise ARG2
+                ARG1 & ARG2     ARG1 if neither argument is null or 0, otherwise 0
+                ARG1 < ARG2     1 if ARG1 is less than ARG2, else 0. Similarly:
+                ARG1 <= ARG2
+                ARG1 = ARG2
+                ARG1 != ARG2
+                ARG1 >= ARG2
+                ARG1 > ARG2
+                ARG1 + ARG2     Sum of ARG1 and ARG2. Similarly:
+                ARG1 - ARG2
+                ARG1 * ARG2
+                ARG1 / ARG2
+                ARG1 % ARG2
+                STRING : REGEXP         Anchored pattern match of REGEXP in STRING
+                match STRING REGEXP     Same as STRING : REGEXP
+                substr STRING POS LENGTH Substring of STRING, POS counted from 1
+                index STRING CHARS      Index in STRING where any CHARS is found, or 0
+                length STRING           Length of STRING
+                quote TOKEN             Interpret TOKEN as a string, even if
+                                        it is a keyword like 'match' or an
+                                        operator like '/'
+                (EXPRESSION)            Value of EXPRESSION
+
+        Beware that many operators need to be escaped or quoted for shells.
+        Comparisons are arithmetic if both ARGs are numbers, else
+        lexicographical. Pattern matches return the string matched between
+        \( and \) or null; if \( and \) are not used, they return the number
+        of characters matched or 0.
+
+    false
+        false
+
+        Return an exit code of FALSE (1)
+
+    getopt
+        getopt [OPTIONS] [--] OPTSTRING PARAMS
+
+                -n,--name=PROGNAME              The name under which errors are reported
+                -o,--options=OPTSTRING          Short options to recognize
+                -q,--quiet                      No error messages on unrecognized options
+                -Q,--quiet-output               No normal output
+                -s,--shell=SHELL                Set shell quoting conventions
+                -T,--test                       Version test (exits with 4)
+                -u,--unquoted                   Don't quote output
+
+    gunzip
+        gunzip [-cft] [FILE]...
+
+        Decompress FILEs (or stdin)
+
+                -c      Write to stdout
+                -f      Force
+                -t      Test file integrity
+
+    gzip
+        gzip [-cfd] [FILE]...
+
+        Compress FILEs (or stdin)
+
+                -d      Decompress
+                -c      Write to stdout
+                -f      Force
+
+    hd  hd FILE...
+
+        hd is an alias for hexdump -C
+
+    hexdump
+        hexdump [-bcCdefnosvxR] [FILE]...
+
+        Display FILEs (or stdin) in a user specified format
+
+                -b              One-byte octal display
+                -c              One-byte character display
+                -C              Canonical hex+ASCII, 16 bytes per line
+                -d              Two-byte decimal display
+                -e FORMAT_STRING
+                -f FORMAT_FILE
+                -n LENGTH       Interpret only LENGTH bytes of input
+                -o              Two-byte octal display
+                -s OFFSET       Skip OFFSET bytes
+                -v              Display all input data
+                -x              Two-byte hexadecimal display
+                -R              Reverse of 'hexdump -Cv'
+
+    id  id [OPTIONS] [USER]
+
+        Print information about USER or the current user
+
+                -u      User ID
+                -g      Group ID
+                -G      Supplementary group IDs
+                -n      Print names instead of numbers
+                -r      Print real ID instead of effective ID
+
+    kill
+        kill [-l] [-SIG] PID...
+
+        Send a signal (default: TERM) to given PIDs
+
+                -l      List all signal names and numbers
+
+    ln  ln [OPTIONS] TARGET... LINK|DIR
+
+        Create a link LINK or DIR/TARGET to the specified TARGET(s)
+
+                -s      Make symlinks instead of hardlinks
+                -f      Remove existing destinations
+                -n      Don't dereference symlinks - treat like normal file
+                -b      Make a backup of the target (if exists) before link operation
+                -S suf  Use suffix instead of ~ when making backup files
+                -T      2nd arg must be a DIR
+                -v      Verbose
+
+    ls  ls [-1AaCxdLHRFplinsehrSXvctu] [-w WIDTH] [FILE]...
+
+        List directory contents
+
+                -1      One column output
+                -a      Include entries which start with .
+                -A      Like -a, but exclude . and ..
+                -C      List by columns
+                -x      List by lines
+                -d      List directory entries instead of contents
+                -L      Follow symlinks
+                -H      Follow symlinks on command line
+                -R      Recurse
+                -p      Append / to dir entries
+                -F      Append indicator (one of */=@|) to entries
+                -l      Long listing format
+                -i      List inode numbers
+                -n      List numeric UIDs and GIDs instead of names
+                -s      List allocated blocks
+                -e      List full date and time
+                -h      List sizes in human readable format (1K 243M 2G)
+                -r      Sort in reverse order
+                -S      Sort by size
+                -X      Sort by extension
+                -v      Sort by version
+                -c      With -l: sort by ctime
+                -t      With -l: sort by mtime
+                -u      With -l: sort by atime
+                -w N    Assume the terminal is N columns wide
+                --color[={always,never,auto}]   Control coloring
+
+    md5sum
+        md5sum [-c[sw]] [FILE]...
+
+        Print or check MD5 checksums
+
+                -c      Check sums against list in FILEs
+                -s      Don't output anything, status code shows success
+                -w      Warn about improperly formatted checksum lines
+
+    mkdir
+        mkdir [OPTIONS] DIRECTORY...
+
+        Create DIRECTORY
+
+                -m MODE Mode
+                -p      No error if exists; make parent directories as needed
+
+    mknod
+        mknod [-m MODE] NAME TYPE MAJOR MINOR
+
+        Create a special file (block, character, or pipe)
+
+                -m MODE Creation mode (default a=rw)
+        TYPE:
+                b       Block device
+                c or u  Character device
+                p       Named pipe (MAJOR and MINOR are ignored)
+
+    more
+        more [FILE]...
+
+        View FILE (or stdin) one screenful at a time
+
+    od  od [-aBbcDdeFfHhIiLlOovXx] [FILE]
+
+        Print FILE (or stdin) unambiguously, as octal bytes by default
+
+    printenv
+        printenv [VARIABLE]...
+
+        Print environment VARIABLEs. If no VARIABLE specified, print all.
+
+    printf
+        printf FORMAT [ARG]...
+
+        Format and print ARG(s) according to FORMAT (a-la C printf)
+
+    pwd pwd
+
+        Print the full filename of the current working directory
+
+    seq seq [-w] [-s SEP] [FIRST [INC]] LAST
+
+        Print numbers from FIRST to LAST, in steps of INC. FIRST, INC
+        default to 1.
+
+                -w      Pad to last with leading zeros
+                -s SEP  String separator
+
+    setsid
+        setsid PROG ARGS
+
+        Run PROG in a new session. PROG will have no controlling terminal
+        and will not be affected by keyboard signals (Ctrl-C etc). See
+        setsid(2) for details.
+
+    sh  sh [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE
+        [ARGS]]
+
+        Unix shell interpreter
+
+    sleep
+        sleep [N]...
+
+        Pause for a time equal to the total of the args given, where each
+        arg can have an optional suffix of (s)econds, (m)inutes, (h)ours, or
+        (d)ays
+
+    sort
+        sort [-nrugMcszbdfimSTokt] [-o FILE] [-k
+        start[.offset][opts][,end[.offset][opts]] [-t CHAR] [FILE]...
+
+        Sort lines of text
+
+                -b      Ignore leading blanks
+                -c      Check whether input is sorted
+                -d      Dictionary order (blank or alphanumeric only)
+                -f      Ignore case
+                -g      General numerical sort
+                -i      Ignore unprintable characters
+                -k      Sort key
+                -M      Sort month
+                -n      Sort numbers
+                -o      Output to file
+                -k      Sort by key
+                -t CHAR Key separator
+                -r      Reverse sort order
+                -s      Stable (don't sort ties alphabetically)
+                -u      Suppress duplicate lines
+                -z      Lines are terminated by NUL, not newline
+                -mST    Ignored for GNU compatibility
+
+    split
+        split [OPTIONS] [INPUT [PREFIX]]
+
+                -b N[k|m]       Split by N (kilo|mega)bytes
+                -l N            Split by N lines
+                -a N            Use N letters as suffix
+
+    strings
+        strings [-afo] [-n LEN] [FILE]...
+
+        Display printable strings in a binary file
+
+                -a      Scan whole file (default)
+                -f      Precede strings with filenames
+                -n LEN  At least LEN characters form a string (default 4)
+                -o      Precede strings with decimal offsets
+
+    stty
+        stty [-a|g] [-F DEVICE] [SETTING]...
+
+        Without arguments, prints baud rate, line discipline, and deviations
+        from stty sane
+
+                -F DEVICE       Open device instead of stdin
+                -a              Print all current settings in human-readable form
+                -g              Print in stty-readable form
+                [SETTING]       See manpage
+
+    tail
+        tail [OPTIONS] [FILE]...
+
+        Print last 10 lines of each FILE (or stdin) to stdout. With more
+        than one FILE, precede each with a filename header.
+
+                -f              Print data as file grows
+                -s SECONDS      Wait SECONDS between reads with -f
+                -n N[kbm]       Print last N lines
+                -n +N[kbm]      Start on Nth line and print the rest
+                -c [+]N[kbm]    Print last N bytes
+                -q              Never print headers
+                -v              Always print headers
+
+        N may be suffixed by k (x1024), b (x512), or m (x1024^2).
+
+    tar tar -[cxtzhmvO] [-X FILE] [-T FILE] [-f TARFILE] [-C DIR] [FILE]...
+
+        Create, extract, or list files from a tar file
+
+        Operation:
+
+                c       Create
+                x       Extract
+                t       List
+                f       Name of TARFILE ('-' for stdin/out)
+                C       Change to DIR before operation
+                v       Verbose
+                z       (De)compress using gzip
+                O       Extract to stdout
+                h       Follow symlinks
+                m       Don't restore mtime
+                exclude File to exclude
+                X       File with names to exclude
+                T       File with names to include
+
+    tee tee [-ai] [FILE]...
+
+        Copy stdin to each FILE, and also to stdout
+
+                -a      Append to the given FILEs, don't overwrite
+                -i      Ignore interrupt signals (SIGINT)
+
+    touch
+        touch [-c] FILE...
+
+        Update the last-modified date on the given FILE[s]
+
+                -c      Don't create files
+
+    true
+        true
+
+        Return an exit code of TRUE (0)
+
+    tty tty
+
+        Print file name of stdin's terminal
+
+    uncompress
+        uncompress [-cf] [FILE]...
+
+        Decompress .Z file[s]
+
+                -c      Write to stdout
+                -f      Overwrite
+
+    unzip
+        unzip [-lnopq] FILE[.zip] [FILE]... [-x FILE...] [-d DIR]
+
+        Extract FILEs from ZIP archive
+
+                -l      List contents (with -q for short form)
+                -n      Never overwrite files (default: ask)
+                -o      Overwrite
+                -p      Print to stdout
+                -q      Quiet
+                -x FILE Exclude FILEs
+                -d DIR  Extract into DIR
+
+    usleep
+        usleep N
+
+        Pause for N microseconds
+
+    wc  wc [-clwL] [FILE]...
+
+        Count lines, words, and bytes for each FILE (or stdin)
+
+                -c      Count bytes
+                -l      Count newlines
+                -w      Count words
+                -L      Print longest line length
+
+    which
+        which [COMMAND]...
+
+        Locate a COMMAND
+
+    whoami
+        whoami
+
+        Print the user name associated with the current effective user id
+
+    yes yes [STRING]
+
+        Repeatedly output a line with STRING, or 'y'
+
+    zcat
+        zcat [FILE]...
+
+        Decompress to stdout
+
+LIBC NSS
+    GNU Libc (glibc) uses the Name Service Switch (NSS) to configure the
+    behavior of the C library for the local environment, and to configure
+    how it reads system data, such as passwords and group information. This
+    is implemented using an /etc/nsswitch.conf configuration file, and using
+    one or more of the /lib/libnss_* libraries. BusyBox tries to avoid using
+    any libc calls that make use of NSS. Some applets however, such as login
+    and su, will use libc functions that require NSS.
+
+    If you enable CONFIG_USE_BB_PWD_GRP, BusyBox will use internal functions
+    to directly access the /etc/passwd, /etc/group, and /etc/shadow files
+    without using NSS. This may allow you to run your system without the
+    need for installing any of the NSS configuration files and libraries.
+
+    When used with glibc, the BusyBox 'networking' applets will similarly
+    require that you install at least some of the glibc NSS stuff (in
+    particular, /etc/nsswitch.conf, /lib/libnss_dns*, /lib/libnss_files*,
+    and /lib/libresolv*).
+
+    Shameless Plug: As an alternative, one could use a C library such as
+    uClibc. In addition to making your system significantly smaller, uClibc
+    does not require the use of any NSS support files or libraries.
+
+MAINTAINER
+    Denis Vlasenko <vda.linux@googlemail.com>
+
+AUTHORS
+    The following people have contributed code to BusyBox whether they know
+    it or not. If you have written code included in BusyBox, you should
+    probably be listed here so you can obtain your bit of eternal glory. If
+    you should be listed here, or the description of what you have done
+    needs more detail, or is incorrect, please send in an update.
+
+    Emanuele Aina <emanuele.aina@tiscali.it> run-parts
+
+    Erik Andersen <andersen@codepoet.org>
+
+        Tons of new stuff, major rewrite of most of the
+        core apps, tons of new apps as noted in header files.
+        Lots of tedious effort writing these boring docs that
+        nobody is going to actually read.
+
+    Laurence Anderson <l.d.anderson@warwick.ac.uk>
+
+        rpm2cpio, unzip, get_header_cpio, read_gz interface, rpm
+
+    Jeff Angielski <jeff@theptrgroup.com>
+
+        ftpput, ftpget
+
+    Edward Betts <edward@debian.org>
+
+        expr, hostid, logname, whoami
+
+    John Beppu <beppu@codepoet.org>
+
+        du, nslookup, sort
+
+    Brian Candler <B.Candler@pobox.com>
+
+        tiny-ls(ls)
+
+    Randolph Chung <tausq@debian.org>
+
+        fbset, ping, hostname
+
+    Dave Cinege <dcinege@psychosis.com>
+
+        more(v2), makedevs, dutmp, modularization, auto links file,
+        various fixes, Linux Router Project maintenance
+
+    Jordan Crouse <jordan@cosmicpenguin.net>
+
+        ipcalc
+
+    Magnus Damm <damm@opensource.se>
+
+        tftp client insmod powerpc support
+
+    Larry Doolittle <ldoolitt@recycle.lbl.gov>
+
+        pristine source directory compilation, lots of patches and fixes.
+
+    Glenn Engel <glenne@engel.org>
+
+        httpd
+
+    Gennady Feldman <gfeldman@gena01.com>
+
+        Sysklogd (single threaded syslogd, IPC Circular buffer support,
+        logread), various fixes.
+
+    Karl M. Hegbloom <karlheg@debian.org>
+
+        cp_mv.c, the test suite, various fixes to utility.c, &c.
+
+    Daniel Jacobowitz <dan@debian.org>
+
+        mktemp.c
+
+    Matt Kraai <kraai@alumni.cmu.edu>
+
+        documentation, bugfixes, test suite
+
+    Stephan Linz <linz@li-pro.net>
+
+        ipcalc, Red Hat equivalence
+
+    John Lombardo <john@deltanet.com>
+
+        tr
+
+    Glenn McGrath <bug1@iinet.net.au>
+
+        Common unarchiving code and unarchiving applets, ifupdown, ftpgetput,
+        nameif, sed, patch, fold, install, uudecode.
+        Various bugfixes, review and apply numerous patches.
+
+    Manuel Novoa III <mjn3@codepoet.org>
+
+        cat, head, mkfifo, mknod, rmdir, sleep, tee, tty, uniq, usleep, wc, yes,
+        mesg, vconfig, make_directory, parse_mode, dirname, mode_string,
+        get_last_path_component, simplify_path, and a number trivial libbb routines
+
+        also bug fixes, partial rewrites, and size optimizations in
+        ash, basename, cal, cmp, cp, df, du, echo, env, ln, logname, md5sum, mkdir,
+        mv, realpath, rm, sort, tail, touch, uname, watch, arith, human_readable,
+        interface, dutmp, ifconfig, route
+
+    Vladimir Oleynik <dzo@simtreas.ru>
+
+        cmdedit; xargs(current), httpd(current);
+        ports: ash, crond, fdisk, inetd, stty, traceroute, top;
+        locale, various fixes
+        and irreconcilable critic of everything not perfect.
+
+    Bruce Perens <bruce@pixar.com>
+
+        Original author of BusyBox in 1995, 1996. Some of his code can
+        still be found hiding here and there...
+
+    Tim Riker <Tim@Rikers.org>
+
+        bug fixes, member of fan club
+
+    Kent Robotti <robotti@metconnect.com>
+
+        reset, tons and tons of bug reports and patches.
+
+    Chip Rosenthal <chip@unicom.com>, <crosenth@covad.com>
+
+        wget - Contributed by permission of Covad Communications
+
+    Pavel Roskin <proski@gnu.org>
+
+        Lots of bugs fixes and patches.
+
+    Gyepi Sam <gyepi@praxis-sw.com>
+
+        Remote logging feature for syslogd
+
+    Linus Torvalds <torvalds@transmeta.com>
+
+        mkswap, fsck.minix, mkfs.minix
+
+    Mark Whitley <markw@codepoet.org>
+
+        grep, sed, cut, xargs(previous),
+        style-guide, new-applet-HOWTO, bug fixes, etc.
+
+    Charles P. Wright <cpwright@villagenet.com>
+
+        gzip, mini-netcat(nc)
+
+    Enrique Zanardi <ezanardi@ull.es>
+
+        tarcat (since removed), loadkmap, various fixes, Debian maintenance
+
+    Tito Ragusa <farmatito@tiscali.it>
+
+        devfsd and size optimizations in strings, openvt and deallocvt.
+
+    Paul Fox <pgf@foxharp.boston.ma.us>
+
+        vi editing mode for ash, various other patches/fixes
+
+    Roberto A. Foglietta <me@roberto.foglietta.name>
+
+        port: dnsd
+
+    Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
+
+        misc
+
+    Mike Frysinger <vapier@gentoo.org>
+
+        initial e2fsprogs, printenv, setarch, sum, misc
+
+    Jie Zhang <jie.zhang@analog.com>
+
+        fixed two bugs in msh and hush (exitcode of killed processes)
+
diff -rupN busybox-1.22.1/include/libbb.h ../src3m/busybox-1.22.1/include/libbb.h
--- busybox-1.22.1/include/libbb.h	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/include/libbb.h	2015-03-30 00:10:30.414188180 +0200
@@ -9,15 +9,15 @@
  */
 #ifndef LIBBB_H
 #define LIBBB_H 1
-
 #include "platform.h"
-
+#define fgets_unlocked fgets
+#define fputs_unlocked fputs
 #include <ctype.h>
 #include <dirent.h>
 #include <errno.h>
 #include <fcntl.h>
 #include <inttypes.h>
-#include <netdb.h>
+//#include <netdb.h>
 #include <setjmp.h>
 #include <signal.h>
 #if defined __UCLIBC__ /* TODO: and glibc? */
@@ -37,15 +37,26 @@
 #include <libgen.h> /* dirname,basename */
 #undef basename
 #define basename dont_use_basename
-#include <poll.h>
+//#include <poll.h>
 #include <sys/ioctl.h>
-#include <sys/mman.h>
-#include <sys/socket.h>
+//#include <sys/mman.h>
+//#include <sys/socket.h>
 #include <sys/stat.h>
 #include <sys/time.h>
 #include <sys/types.h>
 #ifndef major
-# include <sys/sysmacros.h>
+//# include <sys/sysmacros.h>
+#define MINORBITS       8
+#define MINORMASK       ((1U << MINORBITS) - 1)
+
+#define major(d) ((d & 0xFF00) >> 8)
+#define minor(d) (d & 0xFF)
+
+#define MKDEV(m,n) (((m << 8) & 0xFF00) | (n & 0xFF))
+
+#define makedev(m,n) (((m << 8) & 0xFF00) | (n & 0xFF))
+
+
 #endif
 #include <sys/wait.h>
 #include <termios.h>
@@ -66,10 +77,10 @@
 # define endgrent() ((void)0)
 #endif
 #ifdef HAVE_MNTENT_H
-# include <mntent.h>
+//# include <mntent.h>
 #endif
 #ifdef HAVE_SYS_STATFS_H
-# include <sys/statfs.h>
+//# include <sys/statfs.h>
 #endif
 /* Don't do this here:
  * #include <sys/sysinfo.h>
@@ -113,7 +124,7 @@
 #elif defined __APPLE__
 # include <netinet/in.h>
 #else
-# include <arpa/inet.h>
+//# include <arpa/inet.h>
 # if !defined(__socklen_t_defined) && !defined(_SOCKLEN_T_DECLARED)
 /* We #define socklen_t *after* includes, otherwise we get
  * typedef redefinition errors from system headers
@@ -499,7 +510,7 @@ struct fd_pair { int rd; int wr; };
 /* Useful for having small structure members/global variables */
 typedef int8_t socktype_t;
 typedef int8_t family_t;
-struct BUG_too_small {
+/*struct BUG_too_small {
 	char BUG_socktype_t_too_small[(0
 			| SOCK_STREAM
 			| SOCK_DGRAM
@@ -518,10 +529,10 @@ struct BUG_too_small {
 #ifdef AF_NETLINK
 			| AF_NETLINK
 #endif
-			/* | AF_DECnet */
-			/* | AF_IPX */
+			/ * | AF_DECnet * /
+			/ * | AF_IPX * /
 			) <= 127 ? 1 : -1];
-};
+};*/
 
 
 void parse_datestr(const char *date_str, struct tm *ptm) FAST_FUNC;
@@ -530,11 +541,11 @@ char *strftime_HHMMSS(char *buf, unsigne
 char *strftime_YYYYMMDDHHMMSS(char *buf, unsigned len, time_t *tp) FAST_FUNC;
 
 int xsocket(int domain, int type, int protocol) FAST_FUNC;
-void xbind(int sockfd, struct sockaddr *my_addr, socklen_t addrlen) FAST_FUNC;
+//void xbind(int sockfd, struct sockaddr *my_addr, socklen_t addrlen) FAST_FUNC;
 void xlisten(int s, int backlog) FAST_FUNC;
-void xconnect(int s, const struct sockaddr *s_addr, socklen_t addrlen) FAST_FUNC;
-ssize_t xsendto(int s, const void *buf, size_t len, const struct sockaddr *to,
-				socklen_t tolen) FAST_FUNC;
+//void xconnect(int s, const struct sockaddr *s_addr, socklen_t addrlen) FAST_FUNC;
+//ssize_t xsendto(int s, const void *buf, size_t len, const struct sockaddr *to,
+//				socklen_t tolen) FAST_FUNC;
 /* SO_REUSEADDR allows a server to rebind to an address that is already
  * "in use" by old connections to e.g. previous server instance which is
  * killed or crashed. Without it bind will fail until all such connections
@@ -546,36 +557,36 @@ int setsockopt_broadcast(int fd) FAST_FU
 int setsockopt_bindtodevice(int fd, const char *iface) FAST_FUNC;
 /* NB: returns port in host byte order */
 unsigned bb_lookup_port(const char *port, const char *protocol, unsigned default_port) FAST_FUNC;
-typedef struct len_and_sockaddr {
-	socklen_t len;
-	union {
-		struct sockaddr sa;
-		struct sockaddr_in sin;
+//typedef struct len_and_sockaddr {
+//	socklen_t len;
+//	union {
+//		struct sockaddr sa;
+//		struct sockaddr_in sin;
 #if ENABLE_FEATURE_IPV6
-		struct sockaddr_in6 sin6;
+//		struct sockaddr_in6 sin6;
 #endif
-	} u;
-} len_and_sockaddr;
-enum {
-	LSA_LEN_SIZE = offsetof(len_and_sockaddr, u),
-	LSA_SIZEOF_SA = sizeof(
-		union {
-			struct sockaddr sa;
-			struct sockaddr_in sin;
-#if ENABLE_FEATURE_IPV6
-			struct sockaddr_in6 sin6;
-#endif
-		}
-	)
-};
+//	} u;
+//} len_and_sockaddr;
+//enum {
+//	LSA_LEN_SIZE = offsetof(len_and_sockaddr, u),
+//	LSA_SIZEOF_SA = sizeof(
+//		union {
+//			struct sockaddr sa;
+//			struct sockaddr_in sin;
+//#//if ENABLE_FEATURE_IPV6
+//			struct sockaddr_in6 sin6;
+//#endif
+//		}
+//	)
+//};
 /* Create stream socket, and allocate suitable lsa.
  * (lsa of correct size and lsa->sa.sa_family (AF_INET/AF_INET6))
  * af == AF_UNSPEC will result in trying to create IPv6 socket,
  * and if kernel doesn't support it, fall back to IPv4.
  * This is useful if you plan to bind to resulting local lsa.
  */
-int xsocket_type(len_and_sockaddr **lsap, int af, int sock_type) FAST_FUNC;
-int xsocket_stream(len_and_sockaddr **lsap) FAST_FUNC;
+//int xsocket_type(len_and_sockaddr **lsap, int af, int sock_type) FAST_FUNC;
+//int xsocket_stream(len_and_sockaddr **lsap) FAST_FUNC;
 /* Create server socket bound to bindaddr:port. bindaddr can be NULL,
  * numeric IP ("N.N.N.N") or numeric IPv6 address,
  * and can have ":PORT" suffix (for IPv6 use "[X:X:...:X]:PORT").
@@ -589,59 +600,59 @@ int create_and_bind_dgram_or_die(const c
  * If there is no suffix, port argument is used */
 int create_and_connect_stream_or_die(const char *peer, int port) FAST_FUNC;
 /* Connect to peer identified by lsa */
-int xconnect_stream(const len_and_sockaddr *lsa) FAST_FUNC;
+//int xconnect_stream(const len_and_sockaddr *lsa) FAST_FUNC;
 /* Get local address of bound or accepted socket */
-len_and_sockaddr *get_sock_lsa(int fd) FAST_FUNC RETURNS_MALLOC;
+//len_and_sockaddr *get_sock_lsa(int fd) FAST_FUNC RETURNS_MALLOC;
 /* Get remote address of connected or accepted socket */
-len_and_sockaddr *get_peer_lsa(int fd) FAST_FUNC RETURNS_MALLOC;
+//len_and_sockaddr *get_peer_lsa(int fd) FAST_FUNC RETURNS_MALLOC;
 /* Return malloc'ed len_and_sockaddr with socket address of host:port
  * Currently will return IPv4 or IPv6 sockaddrs only
  * (depending on host), but in theory nothing prevents e.g.
  * UNIX socket address being returned, IPX sockaddr etc...
  * On error does bb_error_msg and returns NULL */
-len_and_sockaddr* host2sockaddr(const char *host, int port) FAST_FUNC RETURNS_MALLOC;
+//len_and_sockaddr* host2sockaddr(const char *host, int port) FAST_FUNC RETURNS_MALLOC;
 /* Version which dies on error */
-len_and_sockaddr* xhost2sockaddr(const char *host, int port) FAST_FUNC RETURNS_MALLOC;
-len_and_sockaddr* xdotted2sockaddr(const char *host, int port) FAST_FUNC RETURNS_MALLOC;
+//len_and_sockaddr* xhost2sockaddr(const char *host, int port) FAST_FUNC RETURNS_MALLOC;
+//len_and_sockaddr* xdotted2sockaddr(const char *host, int port) FAST_FUNC RETURNS_MALLOC;
 /* Same, useful if you want to force family (e.g. IPv6) */
 #if !ENABLE_FEATURE_IPV6
 #define host_and_af2sockaddr(host, port, af) host2sockaddr((host), (port))
 #define xhost_and_af2sockaddr(host, port, af) xhost2sockaddr((host), (port))
 #else
-len_and_sockaddr* host_and_af2sockaddr(const char *host, int port, sa_family_t af) FAST_FUNC RETURNS_MALLOC;
-len_and_sockaddr* xhost_and_af2sockaddr(const char *host, int port, sa_family_t af) FAST_FUNC RETURNS_MALLOC;
+//len_and_sockaddr* host_and_af2sockaddr(const char *host, int port, sa_family_t af) FAST_FUNC RETURNS_MALLOC;
+//len_and_sockaddr* xhost_and_af2sockaddr(const char *host, int port, sa_family_t af) FAST_FUNC RETURNS_MALLOC;
 #endif
 /* Assign sin[6]_port member if the socket is an AF_INET[6] one,
  * otherwise no-op. Useful for ftp.
  * NB: does NOT do htons() internally, just direct assignment. */
-void set_nport(struct sockaddr *sa, unsigned port) FAST_FUNC;
+//void set_nport(struct sockaddr *sa, unsigned port) FAST_FUNC;
 /* Retrieve sin[6]_port or return -1 for non-INET[6] lsa's */
-int get_nport(const struct sockaddr *sa) FAST_FUNC;
+//int get_nport(const struct sockaddr *sa) FAST_FUNC;
 /* Reverse DNS. Returns NULL on failure. */
-char* xmalloc_sockaddr2host(const struct sockaddr *sa) FAST_FUNC RETURNS_MALLOC;
+//char* xmalloc_sockaddr2host(const struct sockaddr *sa) FAST_FUNC RETURNS_MALLOC;
 /* This one doesn't append :PORTNUM */
-char* xmalloc_sockaddr2host_noport(const struct sockaddr *sa) FAST_FUNC RETURNS_MALLOC;
+//char* xmalloc_sockaddr2host_noport(const struct sockaddr *sa) FAST_FUNC RETURNS_MALLOC;
 /* This one also doesn't fall back to dotted IP (returns NULL) */
-char* xmalloc_sockaddr2hostonly_noport(const struct sockaddr *sa) FAST_FUNC RETURNS_MALLOC;
+//char* xmalloc_sockaddr2hostonly_noport(const struct sockaddr *sa) FAST_FUNC RETURNS_MALLOC;
 /* inet_[ap]ton on steroids */
-char* xmalloc_sockaddr2dotted(const struct sockaddr *sa) FAST_FUNC RETURNS_MALLOC;
-char* xmalloc_sockaddr2dotted_noport(const struct sockaddr *sa) FAST_FUNC RETURNS_MALLOC;
+//char* xmalloc_sockaddr2dotted(const struct sockaddr *sa) FAST_FUNC RETURNS_MALLOC;
+//char* xmalloc_sockaddr2dotted_noport(const struct sockaddr *sa) FAST_FUNC RETURNS_MALLOC;
 // "old" (ipv4 only) API
 // users: traceroute.c hostname.c - use _list_ of all IPs
-struct hostent *xgethostbyname(const char *name) FAST_FUNC;
+//struct hostent *xgethostbyname(const char *name) FAST_FUNC;
 // Also mount.c and inetd.c are using gethostbyname(),
 // + inet_common.c has additional IPv4-only stuff
 
 
 void socket_want_pktinfo(int fd) FAST_FUNC;
-ssize_t send_to_from(int fd, void *buf, size_t len, int flags,
-		const struct sockaddr *to,
-		const struct sockaddr *from,
-		socklen_t tolen) FAST_FUNC;
-ssize_t recv_from_to(int fd, void *buf, size_t len, int flags,
-		struct sockaddr *from,
-		struct sockaddr *to,
-		socklen_t sa_size) FAST_FUNC;
+//ss/ize_t send_to_from(int fd, void *buf, size_t len, int flags,
+//		const struct sockaddr *to,
+//		const struct sockaddr *from,
+//		socklen_t tolen) FAST_FUNC;
+//ssize_t recv_from_to(int fd, void *buf, size_t len, int flags,
+//		struct sockaddr *from,
+//		struct sockaddr *to,
+//		socklen_t sa_size) FAST_FUNC;
 
 uint16_t inet_cksum(uint16_t *addr, int len) FAST_FUNC;
 
@@ -805,7 +816,7 @@ void qsort_string_vector(char **sv, unsi
  * On other errors complains [perror("poll")] and returns.
  * Warning! May take (much) longer than timeout_ms to return!
  * If this is a problem, use bare poll and open-code EINTR/ENOMEM handling */
-int safe_poll(struct pollfd *ufds, nfds_t nfds, int timeout_ms) FAST_FUNC;
+//int safe_poll(struct pollfd *ufds, nfds_t nfds, int timeout_ms) FAST_FUNC;
 
 char *safe_gethostname(void) FAST_FUNC;
 
@@ -1123,20 +1134,20 @@ void bb_displayroutes(int noresolve, int
 
 /* Networking */
 /* This structure defines protocol families and their handlers. */
-struct aftype {
-	const char *name;
-	const char *title;
-	int af;
-	int alen;
-	char*       FAST_FUNC (*print)(unsigned char *);
-	const char* FAST_FUNC (*sprint)(struct sockaddr *, int numeric);
-	int         FAST_FUNC (*input)(/*int type,*/ const char *bufp, struct sockaddr *);
-	void        FAST_FUNC (*herror)(char *text);
-	int         FAST_FUNC (*rprint)(int options);
-	int         FAST_FUNC (*rinput)(int typ, int ext, char **argv);
-	/* may modify src */
-	int         FAST_FUNC (*getmask)(char *src, struct sockaddr *mask, char *name);
-};
+//istruct aftype {
+//	const char *name;
+//	const char *title;
+//	int af;
+//	int alen;
+//	char*       FAST_FUNC (*print)(unsigned char *);
+//	const char* FAST_FUNC (*sprint)(struct sockaddr *, int numeric);
+//	int         FAST_FUNC (*input)(/*int type,*/ const char *bufp, struct sockaddr *);
+//	void        FAST_FUNC (*herror)(char *text);
+//	int         FAST_FUNC (*rprint)(int options);
+//	int         FAST_FUNC (*rinput)(int typ, int ext, char **argv);
+//	/* may modify src */
+//	int         FAST_FUNC (*getmask)(char *src, struct sockaddr *mask, char *name);
+//};
 /* This structure defines hardware protocols and their handlers. */
 struct hwtype {
 	const char *name;
@@ -1144,21 +1155,21 @@ struct hwtype {
 	int type;
 	int alen;
 	char* FAST_FUNC (*print)(unsigned char *);
-	int   FAST_FUNC (*input)(const char *, struct sockaddr *);
+//	int   FAST_FUNC (*input)(const char *, struct sockaddr *);
 	int   FAST_FUNC (*activate)(int fd);
 	int suppress_null_addr;
 };
-extern smallint interface_opt_a;
-int display_interfaces(char *ifname) FAST_FUNC;
-int in_ether(const char *bufp, struct sockaddr *sap) FAST_FUNC;
+//extern smallint interface_opt_a;
+//int display_interfaces(char *ifname) FAST_FUNC;
+//int in_ether(const char *bufp, struct sockaddr *sap) FAST_FUNC;
 #if ENABLE_FEATURE_HWIB
-int in_ib(const char *bufp, struct sockaddr *sap) FAST_FUNC;
+//int in_ib(const char *bufp, struct sockaddr *sap) FAST_FUNC;
 #else
 #define in_ib(a, b) 1 /* fail */
 #endif
-const struct aftype *get_aftype(const char *name) FAST_FUNC;
-const struct hwtype *get_hwtype(const char *name) FAST_FUNC;
-const struct hwtype *get_hwntype(int type) FAST_FUNC;
+//const struct aftype *get_aftype(const char *name) FAST_FUNC;
+//const struct hwtype *get_hwtype(const char *name) FAST_FUNC;
+//const struct hwtype *get_hwntype(int type) FAST_FUNC;
 
 
 #ifndef BUILD_INDIVIDUAL
@@ -1169,8 +1180,8 @@ extern void run_applet_no_and_exit(int a
 #endif
 
 #ifdef HAVE_MNTENT_H
-extern int match_fstype(const struct mntent *mt, const char *fstypes) FAST_FUNC;
-extern struct mntent *find_mount_point(const char *name, int subdir_too) FAST_FUNC;
+//extern int match_fstype(const struct mntent *mt, const char *fstypes) FAST_FUNC;
+//extern struct mntent *find_mount_point(const char *name, int subdir_too) FAST_FUNC;
 #endif
 extern void erase_mtab(const char * name) FAST_FUNC;
 extern unsigned int tty_baud_to_value(speed_t speed) FAST_FUNC;
diff -rupN busybox-1.22.1/include/platform.h ../src3m/busybox-1.22.1/include/platform.h
--- busybox-1.22.1/include/platform.h	2014-01-20 03:38:10.000000000 +0100
+++ ../src3m/busybox-1.22.1/include/platform.h	2015-03-30 00:10:29.054188140 +0200
@@ -146,8 +146,8 @@
 # define bswap_32 __bswap32
 # define bswap_16 __bswap16
 #else
-# include <byteswap.h>
-# include <endian.h>
+//### include <byteswap.h>
+//#### include <endian.h>
 #endif
 
 #if defined(__BYTE_ORDER) && __BYTE_ORDER == __BIG_ENDIAN
@@ -172,7 +172,9 @@
 # define BB_BIG_ENDIAN 0
 # define BB_LITTLE_ENDIAN 1
 #else
-# error "Can't determine endianness"
+//# error "Can't determine endianness"
+#define BB_BIG_ENDIAN 0
+#define BB_LITTLE_ENDIAN 1
 #endif
 
 #if ULONG_MAX > 0xffffffff
@@ -278,7 +280,7 @@ typedef unsigned smalluint;
  || defined __dietlibc__ \
  || defined __BIONIC__ \
  || defined _NEWLIB_VERSION
-# include <features.h>
+//# include <features.h>
 #endif
 
 /* Define bb_setpgrp */
diff -rupN busybox-1.22.1/libbb/bb_bswap_64.c ../src3m/busybox-1.22.1/libbb/bb_bswap_64.c
--- busybox-1.22.1/libbb/bb_bswap_64.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/bb_bswap_64.c	2015-03-30 00:10:33.566188276 +0200
@@ -8,9 +8,14 @@
 
 #include "libbb.h"
 
+#define BSWAP_8(x)      ((x) & 0xff)
+#define BSWAP_16(x)     ((BSWAP_8(x) << 8) | BSWAP_8((x) >> 8))
+#define BSWAP_32(x)     ((BSWAP_16(x) << 16) | BSWAP_16((x) >> 16))
+#define BSWAP_64(x)     ((BSWAP_32(x) << 32) | BSWAP_32((x) >> 32))
+
 #if !(ULONG_MAX > 0xffffffff)
 uint64_t FAST_FUNC bb_bswap_64(uint64_t x)
 {
-	return bswap_64(x);
+	return BSWAP_64(x);
 }
 #endif
diff -rupN busybox-1.22.1/libbb/bb_pwd.c ../src3m/busybox-1.22.1/libbb/bb_pwd.c
--- busybox-1.22.1/libbb/bb_pwd.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/bb_pwd.c	2015-03-30 00:10:34.182188294 +0200
@@ -25,10 +25,10 @@ struct passwd* FAST_FUNC xgetpwnam(const
 
 struct group* FAST_FUNC xgetgrnam(const char *name)
 {
-	struct group *gr = getgrnam(name);
-	if (!gr)
+	//struct group *gr = getgrnam(name);
+//	if (!gr)
 		bb_error_msg_and_die("unknown group %s", name);
-	return gr;
+//	return gr;
 }
 
 
diff -rupN busybox-1.22.1/libbb/getopt32.c ../src3m/busybox-1.22.1/libbb/getopt32.c
--- busybox-1.22.1/libbb/getopt32.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/getopt32.c	2015-03-30 00:10:34.030188290 +0200
@@ -4,12 +4,10 @@
  *
  * Copyright (C) 2003-2005  Vladimir Oleynik  <dzo@simtreas.ru>
  *
- * Licensed under GPLv2 or later, see file LICENSE in this source tree.
+ * Licensed under GPLv2 or later, see file LICENSE in this tarball for details.
  */
 
-#if ENABLE_LONG_OPTS || ENABLE_FEATURE_GETOPT_LONG
-# include <getopt.h>
-#endif
+#include <getopt.h>
 #include "libbb.h"
 
 /*      Documentation
@@ -82,9 +80,9 @@ const char *applet_long_options
         This struct allows you to define long options:
 
         static const char applet_longopts[] ALIGN1 =
-                //"name\0" has_arg val
-                "verbose\0" No_argument "v"
-                ;
+		//"name\0" has_arg val
+		"verbose\0" No_argument "v"
+		;
         applet_long_options = applet_longopts;
 
         The last member of struct option (val) typically is set to
@@ -117,7 +115,7 @@ const char *opt_complementary
         found.
 
  "ww"   Adjacent double options have a counter associated which indicates
-        the number of occurrences of the option.
+        the number of occurences of the option.
         For example the ps applet needs:
         if w is given once, GNU ps sets the width to 132,
         if w is given more than once, it is "unlimited"
@@ -228,14 +226,14 @@ Special characters:
         if specified together.  In this case you must set
         opt_complementary = "b--cf:c--bf:f--bc".  If two of the
         mutually exclusive options are found, getopt32 will call
-        bb_show_usage() and die.
+	bb_show_usage() and die.
 
  "x--x" Variation of the above, it means that -x option should occur
         at most once.
 
  "a+"   A plus after a char in opt_complementary means that the parameter
         for this option is a nonnegative integer. It will be processed
-        with xatoi_positive() - allowed range is 0..INT_MAX.
+        with xatoi_u() - allowed range is 0..INT_MAX.
 
         int param;  // "unsigned param;" will also work
         opt_complementary = "p+";
@@ -467,17 +465,13 @@ getopt32(char **argv, const char *applet
 		}
 		for (on_off = complementary; on_off->opt_char; on_off++)
 			if (on_off->opt_char == *s)
-				goto found_opt;
-		/* Without this, diagnostic of such bugs is not easy */
-		bb_error_msg_and_die("NO OPT %c!", *s);
- found_opt:
+				break;
 		if (c == ':' && s[2] == ':') {
 			on_off->param_type = PARAM_LIST;
 			continue;
 		}
 		if (c == '+' && (s[2] == ':' || s[2] == '\0')) {
 			on_off->param_type = PARAM_INT;
-			s++;
 			continue;
 		}
 		if (c == ':' || c == '\0') {
@@ -537,7 +531,7 @@ getopt32(char **argv, const char *applet
 
 	/* In case getopt32 was already called:
 	 * reset the libc getopt() function, which keeps internal state.
-	 * run_nofork_applet() does this, but we might end up here
+	 * run_nofork_applet_prime() does this, but we might end up here
 	 * also via gunzip_main() -> gzip_main(). Play safe.
 	 */
 #ifdef __GLIBC__
@@ -548,6 +542,8 @@ getopt32(char **argv, const char *applet
 #endif
 	/* optarg = NULL; opterr = 0; optopt = 0; - do we need this?? */
 
+	pargv = NULL;
+
 	/* Note: just "getopt() <= 0" will not work well for
 	 * "fake" short options, like this one:
 	 * wget $'-\203' "Test: test" http://kernel.org/
@@ -578,16 +574,19 @@ getopt32(char **argv, const char *applet
 		flags ^= trigger;
 		if (on_off->counter)
 			(*(on_off->counter))++;
-		if (optarg) {
-			if (on_off->param_type == PARAM_LIST) {
+		if (on_off->param_type == PARAM_LIST) {
+			if (optarg)
 				llist_add_to_end((llist_t **)(on_off->optarg), optarg);
-			} else if (on_off->param_type == PARAM_INT) {
-//TODO: xatoi_positive indirectly pulls in printf machinery
-				*(unsigned*)(on_off->optarg) = xatoi_positive(optarg);
-			} else if (on_off->optarg) {
+		} else if (on_off->param_type == PARAM_INT) {
+			if (optarg)
+//TODO: xatoi_u indirectly pulls in printf machinery
+				*(unsigned*)(on_off->optarg) = atoi(optarg);
+		} else if (on_off->optarg) {
+			if (optarg)
 				*(char **)(on_off->optarg) = optarg;
-			}
 		}
+		if (pargv != NULL)
+			break;
 	}
 
 	/* check depending requires for given options */
@@ -613,3 +612,4 @@ getopt32(char **argv, const char *applet
 		bb_show_usage();
 	return (int32_t)-1;
 }
+
diff -rupN busybox-1.22.1/libbb/herror_msg.c ../src3m/busybox-1.22.1/libbb/herror_msg.c
--- busybox-1.22.1/libbb/herror_msg.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/herror_msg.c	2015-03-30 00:10:34.078188291 +0200
@@ -13,7 +13,7 @@ void FAST_FUNC bb_herror_msg(const char
 	va_list p;
 
 	va_start(p, s);
-	bb_verror_msg(s, p, hstrerror(h_errno));
+//	bb_verror_msg(s, p, hstrerror(0));h_errno));
 	va_end(p);
 }
 
@@ -22,7 +22,7 @@ void FAST_FUNC bb_herror_msg_and_die(con
 	va_list p;
 
 	va_start(p, s);
-	bb_verror_msg(s, p, hstrerror(h_errno));
+//	bb_verror_msg(s, p,0);// hstrerror(h_errno));
 	va_end(p);
 	xfunc_die();
 }
diff -rupN busybox-1.22.1/libbb/inet_common.c ../src3m/busybox-1.22.1/libbb/inet_common.c
--- busybox-1.22.1/libbb/inet_common.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/inet_common.c	2015-03-30 00:10:34.126188292 +0200
@@ -10,7 +10,7 @@
 
 #include "libbb.h"
 #include "inet_common.h"
-
+#ifdef NOTDEFD
 int FAST_FUNC INET_resolve(const char *name, struct sockaddr_in *s_in, int hostfirst)
 {
 	struct hostent *hp;
@@ -221,3 +221,4 @@ char* FAST_FUNC INET6_rresolve(struct so
 }
 
 #endif  /* CONFIG_FEATURE_IPV6 */
+#endif
diff -rupN busybox-1.22.1/libbb/info_msg.c ../src3m/busybox-1.22.1/libbb/info_msg.c
--- busybox-1.22.1/libbb/info_msg.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/info_msg.c	2015-03-30 00:10:33.662188278 +0200
@@ -8,9 +8,6 @@
  */
 
 #include "libbb.h"
-#if ENABLE_FEATURE_SYSLOG
-# include <syslog.h>
-#endif
 
 void FAST_FUNC bb_info_msg(const char *s, ...)
 {
@@ -26,13 +23,8 @@ void FAST_FUNC bb_info_msg(const char *s
 		vprintf(s, p);
 		fputs(msg_eol, stdout);
 	}
-# if ENABLE_FEATURE_SYSLOG
-	if (logmode & LOGMODE_SYSLOG)
-		vsyslog(LOG_INFO, s, p2);
-# endif
 	va_end(p2);
 	va_end(p);
-#else
 	int used;
 	char *msg;
 	va_list p;
@@ -46,10 +38,7 @@ void FAST_FUNC bb_info_msg(const char *s
 	if (used < 0)
 		return;
 
-# if ENABLE_FEATURE_SYSLOG
-	if (logmode & LOGMODE_SYSLOG)
-		syslog(LOG_INFO, "%s", msg);
-# endif
+
 	if (logmode & LOGMODE_STDIO) {
 		fflush_all();
 		/* used = strlen(msg); - must be true already */
diff -rupN busybox-1.22.1/libbb/kernel_version.c ../src3m/busybox-1.22.1/libbb/kernel_version.c
--- busybox-1.22.1/libbb/kernel_version.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/kernel_version.c	2015-03-30 00:10:34.202188296 +0200
@@ -9,7 +9,7 @@
 
 #include "libbb.h"
 /* After libbb.h, since it needs sys/types.h on some systems */
-#include <sys/utsname.h>  /* for uname(2) */
+//#include <sys/utsname.h>  /* for uname(2) */
 
 
 /* Returns current kernel version encoded as major*65536 + minor*256 + patch,
@@ -19,11 +19,13 @@
  */
 int FAST_FUNC get_linux_version_code(void)
 {
+	return 123;
+/*
 	struct utsname name;
 	char *s, *t;
 	int i, r;
 
-	uname(&name); /* never fails */
+	//uname(&name); / * never fails * /
 	s = name.release;
 	r = 0;
 	for (i = 0; i < 3; i++) {
@@ -32,4 +34,5 @@ int FAST_FUNC get_linux_version_code(voi
 		s = NULL;
 	}
 	return r;
+}*/
 }
diff -rupN busybox-1.22.1/libbb/login.c ../src3m/busybox-1.22.1/libbb/login.c
--- busybox-1.22.1/libbb/login.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/login.c	2015-03-30 00:10:33.850188284 +0200
@@ -11,7 +11,7 @@
 
 #include "libbb.h"
 /* After libbb.h, since it needs sys/types.h on some systems */
-#include <sys/utsname.h>
+//#include <sys/utsname.h>
 
 #define LOGIN " login: "
 
@@ -24,10 +24,10 @@ void FAST_FUNC print_login_issue(const c
 	char buf[256+1];
 	const char *outbuf;
 	time_t t;
-	struct utsname uts;
+	///struct utsname uts;
 
 	time(&t);
-	uname(&uts);
+	//uname(&uts);
 
 	puts("\r");  /* start a new line */
 
@@ -46,26 +46,26 @@ void FAST_FUNC print_login_issue(const c
 			c = fgetc(fp);
 			switch (c) {
 			case 's':
-				outbuf = uts.sysname;
+				outbuf = "P-OS";//uts.sysname;
 				break;
 			case 'n':
 			case 'h':
-				outbuf = uts.nodename;
+				outbuf = "posnk_testvm";
 				break;
 			case 'r':
-				outbuf = uts.release;
+				outbuf = "0.01";
 				break;
 			case 'v':
-				outbuf = uts.version;
+				outbuf = "0.01";
 				break;
 			case 'm':
-				outbuf = uts.machine;
+				outbuf = "i386";
 				break;
 /* The field domainname of struct utsname is Linux specific. */
 #if defined(__linux__)
 			case 'D':
 			case 'o':
-				outbuf = uts.domainname;
+				outbuf = "posnk_testvm";
 				break;
 #endif
 			case 'd':
diff -rupN busybox-1.22.1/libbb/makedev.c ../src3m/busybox-1.22.1/libbb/makedev.c
--- busybox-1.22.1/libbb/makedev.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/makedev.c	2015-03-30 00:10:34.082188291 +0200
@@ -14,8 +14,8 @@
  || defined(__APPLE__)
 # include <sys/types.h>
 #else
-# include <features.h>
-# include <sys/sysmacros.h>
+//# include <features.h>
+//# include <sys/sysmacros.h>
 #endif
 
 #ifdef __GLIBC__
@@ -26,6 +26,6 @@
 unsigned long long FAST_FUNC bb_makedev(unsigned major, unsigned minor);
 unsigned long long FAST_FUNC bb_makedev(unsigned major, unsigned minor)
 {
-	return makedev(major, minor);
+	return MKDEV(major, minor);
 }
 #endif
diff -rupN busybox-1.22.1/libbb/match_fstype.c ../src3m/busybox-1.22.1/libbb/match_fstype.c
--- busybox-1.22.1/libbb/match_fstype.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/match_fstype.c	2015-03-30 00:10:33.762188281 +0200
@@ -16,7 +16,7 @@
 
 int FAST_FUNC match_fstype(const struct mntent *mt, const char *t_fstype)
 {
-	int match = 1;
+	/*int match = 1;
 	int len;
 
 	if (!t_fstype)
@@ -39,8 +39,8 @@ int FAST_FUNC match_fstype(const struct
 			break;
 		t_fstype++;
 	}
-
-	return !match;
+*/
+	return 0;//!match;
 }
 
 #endif /* HAVE_MNTENT_H */
diff -rupN busybox-1.22.1/libbb/missing_syscalls.c ../src3m/busybox-1.22.1/libbb/missing_syscalls.c
--- busybox-1.22.1/libbb/missing_syscalls.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/missing_syscalls.c	2015-03-30 00:10:34.006188289 +0200
@@ -7,7 +7,8 @@
 //kbuild:lib-y += missing_syscalls.o
 
 /*#include <linux/timex.h> - for struct timex, but may collide with <time.h> */
-#include <sys/syscall.h>
+#ifdef NOTDEF
+//#include <sys/syscall.h>
 #include "libbb.h"
 
 #if defined(ANDROID) || defined(__ANDROID__)
@@ -40,3 +41,4 @@ int pivot_root(const char *new_root, con
 	return syscall(__NR_pivot_root, new_root, put_old);
 }
 #endif
+#endif
diff -rupN busybox-1.22.1/libbb/read_key.c ../src3m/busybox-1.22.1/libbb/read_key.c
--- busybox-1.22.1/libbb/read_key.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/read_key.c	2015-03-30 00:10:33.386188270 +0200
@@ -8,7 +8,7 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 #include "libbb.h"
-
+#ifdef NOTDEF
 int64_t FAST_FUNC read_key(int fd, char *buffer, int timeout)
 {
 	struct pollfd pfd;
@@ -279,3 +279,4 @@ void FAST_FUNC read_key_ungets(char *buf
 	memcpy(buffer + 1 + cur_len, str, len);
 	buffer[0] += len;
 }
+#endif
diff -rupN busybox-1.22.1/libbb/read_printf.c ../src3m/busybox-1.22.1/libbb/read_printf.c
--- busybox-1.22.1/libbb/read_printf.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/read_printf.c	2015-03-30 00:10:33.842188284 +0200
@@ -47,19 +47,20 @@
  */
 ssize_t FAST_FUNC nonblock_immune_read(int fd, void *buf, size_t count, int loop_on_EINTR)
 {
-	struct pollfd pfd[1];
+	/*struct pollfd pfd[1];
 	ssize_t n;
 
 	while (1) {
 		n = loop_on_EINTR ? safe_read(fd, buf, count) : read(fd, buf, count);
 		if (n >= 0 || errno != EAGAIN)
 			return n;
-		/* fd is in O_NONBLOCK mode. Wait using poll and repeat */
+		/* fd is in O_NONBLOCK mode. Wait using poll and repeat * /
 		pfd[0].fd = fd;
 		pfd[0].events = POLLIN;
-		/* note: safe_poll pulls in printf */
+		/* note: safe_poll pulls in printf * /
 		loop_on_EINTR ? safe_poll(pfd, 1, -1) : poll(pfd, 1, -1);
-	}
+	}*/
+	return read(fd, buf, count);
 }
 
 // Reads one line a-la fgets (but doesn't save terminating '\n').
diff -rupN busybox-1.22.1/libbb/safe_gethostname.c ../src3m/busybox-1.22.1/libbb/safe_gethostname.c
--- busybox-1.22.1/libbb/safe_gethostname.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/safe_gethostname.c	2015-03-30 00:10:33.814188281 +0200
@@ -25,7 +25,7 @@
  */
 
 #include "libbb.h"
-#include <sys/utsname.h>
+//#include <sys/utsname.h>
 
 /*
  * On success return the current malloced and NUL terminated hostname.
@@ -35,7 +35,7 @@
  */
 char* FAST_FUNC safe_gethostname(void)
 {
-	struct utsname uts;
+	//struct utsname uts;
 
 	/* The length of the arrays in a struct utsname is unspecified;
 	 * the fields are terminated by a null byte.
@@ -47,6 +47,6 @@ char* FAST_FUNC safe_gethostname(void)
 	 */
 
 	/* Uname can fail only if you pass a bad pointer to it. */
-	uname(&uts);
-	return xstrndup(!uts.nodename[0] ? "?" : uts.nodename, sizeof(uts.nodename));
+	//uname(&uts);
+	return xstrndup("posnt_testvm", 138);
 }
diff -rupN busybox-1.22.1/libbb/safe_poll.c ../src3m/busybox-1.22.1/libbb/safe_poll.c
--- busybox-1.22.1/libbb/safe_poll.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/safe_poll.c	2015-03-30 00:10:33.450188272 +0200
@@ -12,23 +12,7 @@
 /* Wrapper which restarts poll on EINTR or ENOMEM.
  * On other errors does perror("poll") and returns.
  * Warning! May take longer than timeout_ms to return! */
-int FAST_FUNC safe_poll(struct pollfd *ufds, nfds_t nfds, int timeout)
-{
-	while (1) {
-		int n = poll(ufds, nfds, timeout);
-		if (n >= 0)
-			return n;
-		/* Make sure we inch towards completion */
-		if (timeout > 0)
-			timeout--;
-		/* E.g. strace causes poll to return this */
-		if (errno == EINTR)
-			continue;
-		/* Kernel is very low on memory. Retry. */
-		/* I doubt many callers would handle this correctly! */
-		if (errno == ENOMEM)
-			continue;
-		bb_perror_msg("poll");
-		return n;
-	}
-}
+//int FAST_FUNC safe_poll(struct pollfd *ufds, nfds_t nfds, int timeout)
+//{
+//		return 0;
+//}//
diff -rupN busybox-1.22.1/libbb/signals.c ../src3m/busybox-1.22.1/libbb/signals.c
--- busybox-1.22.1/libbb/signals.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/signals.c	2015-03-30 00:10:33.646188278 +0200
@@ -10,6 +10,7 @@
  */
 
 #include "libbb.h"
+#include <signal.h>
 
 /* All known arches use small ints for signals */
 smallint bb_got_signal;
@@ -19,10 +20,12 @@ void record_signo(int signo)
 	bb_got_signal = signo;
 }
 
+
+
 /* Saves 2 bytes on x86! Oh my... */
 int FAST_FUNC sigaction_set(int signum, const struct sigaction *act)
 {
-	return sigaction(signum, act, NULL);
+	return 0;//return sigaction(signum, act, NULL);
 }
 
 int FAST_FUNC sigprocmask_allsigs(int how)
@@ -61,7 +64,7 @@ void FAST_FUNC bb_signals_recursive_nore
 	while (sigs) {
 		if (sigs & bit) {
 			sigs -= bit;
-			sigaction_set(sig_no, &sa);
+			signal(sig_no, f);
 		}
 		sig_no++;
 		bit <<= 1;
@@ -105,9 +108,9 @@ void FAST_FUNC signal_SA_RESTART_empty_m
 	struct sigaction sa;
 	memset(&sa, 0, sizeof(sa));
 	/*sigemptyset(&sa.sa_mask);*/
-	sa.sa_flags = SA_RESTART;
+	sa.sa_flags = 0;//qSA_IGNORE;
 	sa.sa_handler = handler;
-	sigaction_set(sig, &sa);
+	signal(sig, handler);
 }
 
 void FAST_FUNC signal_no_SA_RESTART_empty_mask(int sig, void (*handler)(int))
@@ -117,5 +120,6 @@ void FAST_FUNC signal_no_SA_RESTART_empt
 	/*sigemptyset(&sa.sa_mask);*/
 	/*sa.sa_flags = 0;*/
 	sa.sa_handler = handler;
-	sigaction_set(sig, &sa);
+	//sigaction_set(sig, &sa);
+	signal(sig, handler);
 }
diff -rupN busybox-1.22.1/libbb/verror_msg.c ../src3m/busybox-1.22.1/libbb/verror_msg.c
--- busybox-1.22.1/libbb/verror_msg.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/verror_msg.c	2015-03-30 00:10:34.034188290 +0200
@@ -7,9 +7,6 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 #include "libbb.h"
-#if ENABLE_FEATURE_SYSLOG
-# include <syslog.h>
-#endif
 
 smallint logmode = LOGMODE_STDIO;
 const char *msg_eol = "\n";
@@ -68,11 +65,6 @@ void FAST_FUNC bb_verror_msg(const char
 		fflush_all();
 		full_write(STDERR_FILENO, msg, used);
 	}
-#if ENABLE_FEATURE_SYSLOG
-	if (logmode & LOGMODE_SYSLOG) {
-		syslog(LOG_ERR, "%s", msg + applet_len);
-	}
-#endif
 	free(msg);
 }
 
@@ -128,11 +120,6 @@ void FAST_FUNC bb_verror_msg(const char
 		fflush_all();
 		writev(STDERR_FILENO, iov, 3);
 	}
-# if ENABLE_FEATURE_SYSLOG
-	if (logmode & LOGMODE_SYSLOG) {
-		syslog(LOG_ERR, "%s", msgc);
-	}
-# endif
 	free(msgc);
 }
 #endif
diff -rupN busybox-1.22.1/libbb/xconnect.c ../src3m/busybox-1.22.1/libbb/xconnect.c
--- busybox-1.22.1/libbb/xconnect.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/xconnect.c	2015-03-30 00:10:33.906188286 +0200
@@ -6,7 +6,7 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
+#ifdef NOTDEFD
 #include <sys/types.h>
 #include <sys/socket.h> /* netinet/in.h needs it */
 #include <netinet/in.h>
@@ -484,3 +484,4 @@ char* FAST_FUNC xmalloc_sockaddr2dotted_
 {
 	return sockaddr2str(sa, NI_NUMERICHOST | IGNORE_PORT);
 }
+#endif
diff -rupN busybox-1.22.1/libbb/xfunc_die.c ../src3m/busybox-1.22.1/libbb/xfunc_die.c
--- busybox-1.22.1/libbb/xfunc_die.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/xfunc_die.c	2015-03-30 00:10:33.978188288 +0200
@@ -19,7 +19,7 @@ jmp_buf die_jmp;
 
 void FAST_FUNC xfunc_die(void)
 {
-	if (die_sleep) {
+	/*if (die_sleep) {
 		if ((ENABLE_FEATURE_PREFER_APPLETS || ENABLE_HUSH)
 		 && die_sleep < 0
 		) {
@@ -31,10 +31,10 @@ void FAST_FUNC xfunc_die(void)
 			 * q = xmalloc(10); // BUG! if this dies, we leak p!
 			 */
 			/* -2222 means "zero" (longjmp can't pass 0)
-			 * run_nofork_applet() catches -2222. */
+			 * run_nofork_applet() catches -2222. * /
 			longjmp(die_jmp, xfunc_error_retval ? xfunc_error_retval : -2222);
 		}
 		sleep(die_sleep);
-	}
+	}*/
 	exit(xfunc_error_retval);
 }
diff -rupN busybox-1.22.1/libbb/xfuncs.c ../src3m/busybox-1.22.1/libbb/xfuncs.c
--- busybox-1.22.1/libbb/xfuncs.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/xfuncs.c	2015-03-30 00:10:33.418188271 +0200
@@ -255,24 +255,26 @@ static int wh_helper(int value, int def_
  * height, in which case that value will not be set.  */
 int FAST_FUNC get_terminal_width_height(int fd, unsigned *width, unsigned *height)
 {
-	struct winsize win;
+	//struct winsize win;
 	int err;
 
-	win.ws_row = 0;
-	win.ws_col = 0;
+//	win.ws_row = 80;
+//	win.ws_col = 25;
 	/* I've seen ioctl returning 0, but row/col is (still?) 0.
 	 * We treat that as an error too.  */
-	err = ioctl(fd, TIOCGWINSZ, &win) != 0 || win.ws_row == 0;
-	if (height)
-		*height = wh_helper(win.ws_row, 24, "LINES", &err);
-	if (width)
-		*width = wh_helper(win.ws_col, 80, "COLUMNS", &err);
+//	err = ioctl(fd, TIOCGWINSZ, &win) != 0 || win.ws_row == 0;
+	//if (height)
+	//	*height = wh_helper(win.ws_row, 24, "LINES", &err);
+	//if (width)
+	//	*width = wh_helper(win.ws_col, 80, "COLUMNS", &err);
+	*width = 80;
+	*height = 25;
 	return err;
 }
 
 int FAST_FUNC tcsetattr_stdin_TCSANOW(const struct termios *tp)
 {
-	return tcsetattr(STDIN_FILENO, TCSANOW, tp);
+	return 0;//return tcsetattr(STDIN_FILENO, TCSANOW, tp);
 }
 
 pid_t FAST_FUNC safe_waitpid(pid_t pid, int *wstat, int options)
diff -rupN busybox-1.22.1/libbb/xgethostbyname.c ../src3m/busybox-1.22.1/libbb/xgethostbyname.c
--- busybox-1.22.1/libbb/xgethostbyname.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libbb/xgethostbyname.c	2015-03-30 00:10:33.506188274 +0200
@@ -6,12 +6,12 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-#include "libbb.h"
-
+//#include "libbb.h"
+/*
 struct hostent* FAST_FUNC xgethostbyname(const char *name)
 {
 	struct hostent *retval = gethostbyname(name);
 	if (!retval)
 		bb_herror_msg_and_die("%s", name);
 	return retval;
-}
+}*/
diff -rupN busybox-1.22.1/libpwdgrp/uidgid_get.c ../src3m/busybox-1.22.1/libpwdgrp/uidgid_get.c
--- busybox-1.22.1/libpwdgrp/uidgid_get.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/libpwdgrp/uidgid_get.c	2015-03-30 00:10:30.910188196 +0200
@@ -70,10 +70,10 @@ int FAST_FUNC get_uidgid(struct bb_uidgi
 				return 1;
 			}
 		}
-		gr = getgrnam(group);
-		if (!gr)
+		//gr = getgrnam(group);
+		//if (!gr)
 			return 0;
-		u->gid = gr->gr_gid;
+		//u->gid = gr->gr_gid;
 	}
 	return 1;
 }
diff -rupN busybox-1.22.1/loginutils/getty.c ../src3m/busybox-1.22.1/loginutils/getty.c
--- busybox-1.22.1/loginutils/getty.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/loginutils/getty.c	2015-03-30 00:10:31.046188200 +0200
@@ -23,7 +23,6 @@
  */
 
 #include "libbb.h"
-#include <syslog.h>
 #ifndef IUCLC
 # define IUCLC 0
 #endif
@@ -341,7 +340,7 @@ static void finalize_tty_attrs(void)
 	 * echo kill char specially, not as ^c (ECHOKE controls how exactly);
 	 * erase all input via BS-SP-BS on kill char (else go to next line)
 	 */
-	G.tty_attrs.c_lflag |= ICANON | ISIG | ECHO | ECHOE | ECHOK | ECHOKE;
+	G.tty_attrs.c_lflag |= ICANON | ISIG | ECHO | ECHOE | ECHOK;
 	/* Other bits in c_lflag:
 	 * XCASE   Map uppercase to \lowercase [tried, doesn't work]
 	 * ECHONL  Echo NL even if ECHO is not set
@@ -591,7 +590,6 @@ int getty_main(int argc UNUSED_PARAM, ch
 	die_sleep = 10;
 	msg_eol = "\r\n";
 	/* most likely will internally use fd #3 in CLOEXEC mode: */
-	openlog(applet_name, LOG_PID, LOG_AUTH);
 	logmode = LOGMODE_BOTH;
 
 #ifdef DEBUGGING
diff -rupN busybox-1.22.1/loginutils/login.c ../src3m/busybox-1.22.1/loginutils/login.c
--- busybox-1.22.1/loginutils/login.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/loginutils/login.c	2015-03-30 00:10:31.114188202 +0200
@@ -12,7 +12,6 @@
 //usage:     "\n	-p	Preserve environment"
 
 #include "libbb.h"
-#include <syslog.h>
 #include <sys/resource.h>
 
 #if ENABLE_SELINUX
diff -rupN busybox-1.22.1/posnkconfig ../src3m/busybox-1.22.1/posnkconfig
--- busybox-1.22.1/posnkconfig	1970-01-01 01:00:00.000000000 +0100
+++ ../src3m/busybox-1.22.1/posnkconfig	2015-03-30 00:11:23.382189770 +0200
@@ -0,0 +1,1018 @@
+#
+# Automatically generated make config: don't edit
+# Busybox version: 1.22.1
+# Mon Mar 30 00:11:23 2015
+#
+CONFIG_HAVE_DOT_CONFIG=y
+
+#
+# Busybox Settings
+#
+
+#
+# General Configuration
+#
+# CONFIG_DESKTOP is not set
+# CONFIG_EXTRA_COMPAT is not set
+# CONFIG_INCLUDE_SUSv2 is not set
+# CONFIG_USE_PORTABLE_CODE is not set
+# CONFIG_PLATFORM_LINUX is not set
+CONFIG_FEATURE_BUFFERS_USE_MALLOC=y
+# CONFIG_FEATURE_BUFFERS_GO_ON_STACK is not set
+# CONFIG_FEATURE_BUFFERS_GO_IN_BSS is not set
+CONFIG_SHOW_USAGE=y
+CONFIG_FEATURE_VERBOSE_USAGE=y
+CONFIG_FEATURE_COMPRESS_USAGE=y
+CONFIG_FEATURE_INSTALLER=y
+CONFIG_INSTALL_NO_USR=y
+# CONFIG_LOCALE_SUPPORT is not set
+# CONFIG_UNICODE_SUPPORT is not set
+# CONFIG_UNICODE_USING_LOCALE is not set
+# CONFIG_FEATURE_CHECK_UNICODE_IN_ENV is not set
+CONFIG_SUBST_WCHAR=0
+CONFIG_LAST_SUPPORTED_WCHAR=0
+# CONFIG_UNICODE_COMBINING_WCHARS is not set
+# CONFIG_UNICODE_WIDE_WCHARS is not set
+# CONFIG_UNICODE_BIDI_SUPPORT is not set
+# CONFIG_UNICODE_NEUTRAL_TABLE is not set
+# CONFIG_UNICODE_PRESERVE_BROKEN is not set
+CONFIG_LONG_OPTS=y
+# CONFIG_FEATURE_DEVPTS is not set
+# CONFIG_FEATURE_CLEAN_UP is not set
+# CONFIG_FEATURE_UTMP is not set
+# CONFIG_FEATURE_WTMP is not set
+# CONFIG_FEATURE_PIDFILE is not set
+CONFIG_PID_FILE_PATH=""
+CONFIG_FEATURE_SUID=y
+CONFIG_FEATURE_SUID_CONFIG=y
+CONFIG_FEATURE_SUID_CONFIG_QUIET=y
+# CONFIG_SELINUX is not set
+CONFIG_FEATURE_PREFER_APPLETS=y
+CONFIG_BUSYBOX_EXEC_PATH="/busybox"
+# CONFIG_FEATURE_SYSLOG is not set
+# CONFIG_FEATURE_HAVE_RPC is not set
+
+#
+# Build Options
+#
+CONFIG_STATIC=y
+# CONFIG_PIE is not set
+# CONFIG_NOMMU is not set
+# CONFIG_BUILD_LIBBUSYBOX is not set
+# CONFIG_FEATURE_INDIVIDUAL is not set
+# CONFIG_FEATURE_SHARED_BUSYBOX is not set
+# CONFIG_LFS is not set
+CONFIG_CROSS_COMPILER_PREFIX="i386-pc-posnk-"
+CONFIG_SYSROOT=""
+CONFIG_EXTRA_CFLAGS=""
+CONFIG_EXTRA_LDFLAGS=""
+CONFIG_EXTRA_LDLIBS=""
+
+#
+# Debugging Options
+#
+CONFIG_DEBUG=y
+CONFIG_DEBUG_PESSIMIZE=y
+# CONFIG_WERROR is not set
+CONFIG_NO_DEBUG_LIB=y
+# CONFIG_DMALLOC is not set
+# CONFIG_EFENCE is not set
+
+#
+# Installation Options ("make install" behavior)
+#
+CONFIG_INSTALL_APPLET_SYMLINKS=y
+# CONFIG_INSTALL_APPLET_HARDLINKS is not set
+# CONFIG_INSTALL_APPLET_SCRIPT_WRAPPERS is not set
+# CONFIG_INSTALL_APPLET_DONT is not set
+# CONFIG_INSTALL_SH_APPLET_SYMLINK is not set
+# CONFIG_INSTALL_SH_APPLET_HARDLINK is not set
+# CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER is not set
+CONFIG_PREFIX="./_install"
+
+#
+# Busybox Library Tuning
+#
+# CONFIG_FEATURE_SYSTEMD is not set
+# CONFIG_FEATURE_RTMINMAX is not set
+CONFIG_PASSWORD_MINLEN=6
+CONFIG_MD5_SMALL=1
+CONFIG_SHA3_SMALL=1
+# CONFIG_FEATURE_FAST_TOP is not set
+# CONFIG_FEATURE_ETC_NETWORKS is not set
+CONFIG_FEATURE_USE_TERMIOS=y
+# CONFIG_FEATURE_EDITING is not set
+CONFIG_FEATURE_EDITING_MAX_LEN=0
+# CONFIG_FEATURE_EDITING_VI is not set
+CONFIG_FEATURE_EDITING_HISTORY=0
+# CONFIG_FEATURE_EDITING_SAVEHISTORY is not set
+# CONFIG_FEATURE_EDITING_SAVE_ON_EXIT is not set
+# CONFIG_FEATURE_REVERSE_SEARCH is not set
+# CONFIG_FEATURE_TAB_COMPLETION is not set
+# CONFIG_FEATURE_USERNAME_COMPLETION is not set
+# CONFIG_FEATURE_EDITING_FANCY_PROMPT is not set
+# CONFIG_FEATURE_EDITING_ASK_TERMINAL is not set
+# CONFIG_FEATURE_NON_POSIX_CP is not set
+CONFIG_FEATURE_VERBOSE_CP_MESSAGE=y
+CONFIG_FEATURE_COPYBUF_KB=4
+# CONFIG_FEATURE_SKIP_ROOTFS is not set
+# CONFIG_MONOTONIC_SYSCALL is not set
+# CONFIG_IOCTL_HEX2STR_ERROR is not set
+# CONFIG_FEATURE_HWIB is not set
+
+#
+# Applets
+#
+
+#
+# Archival Utilities
+#
+# CONFIG_FEATURE_SEAMLESS_XZ is not set
+# CONFIG_FEATURE_SEAMLESS_LZMA is not set
+# CONFIG_FEATURE_SEAMLESS_BZ2 is not set
+CONFIG_FEATURE_SEAMLESS_GZ=y
+# CONFIG_FEATURE_SEAMLESS_Z is not set
+# CONFIG_AR is not set
+# CONFIG_FEATURE_AR_LONG_FILENAMES is not set
+# CONFIG_FEATURE_AR_CREATE is not set
+CONFIG_UNCOMPRESS=y
+CONFIG_GUNZIP=y
+CONFIG_BUNZIP2=y
+# CONFIG_UNLZMA is not set
+# CONFIG_FEATURE_LZMA_FAST is not set
+# CONFIG_LZMA is not set
+# CONFIG_UNXZ is not set
+# CONFIG_XZ is not set
+CONFIG_BZIP2=y
+CONFIG_CPIO=y
+CONFIG_FEATURE_CPIO_O=y
+CONFIG_FEATURE_CPIO_P=y
+CONFIG_DPKG=y
+# CONFIG_DPKG_DEB is not set
+# CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY is not set
+CONFIG_GZIP=y
+# CONFIG_FEATURE_GZIP_LONG_OPTIONS is not set
+CONFIG_GZIP_FAST=0
+# CONFIG_LZOP is not set
+# CONFIG_LZOP_COMPR_HIGH is not set
+# CONFIG_RPM is not set
+# CONFIG_RPM2CPIO is not set
+CONFIG_TAR=y
+CONFIG_FEATURE_TAR_CREATE=y
+CONFIG_FEATURE_TAR_AUTODETECT=y
+CONFIG_FEATURE_TAR_FROM=y
+CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY=y
+CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY=y
+CONFIG_FEATURE_TAR_GNU_EXTENSIONS=y
+CONFIG_FEATURE_TAR_LONG_OPTIONS=y
+CONFIG_FEATURE_TAR_TO_COMMAND=y
+# CONFIG_FEATURE_TAR_UNAME_GNAME is not set
+CONFIG_FEATURE_TAR_NOPRESERVE_TIME=y
+# CONFIG_FEATURE_TAR_SELINUX is not set
+CONFIG_UNZIP=y
+
+#
+# Coreutils
+#
+CONFIG_BASENAME=y
+CONFIG_CAT=y
+CONFIG_DATE=y
+CONFIG_FEATURE_DATE_ISOFMT=y
+# CONFIG_FEATURE_DATE_NANO is not set
+CONFIG_FEATURE_DATE_COMPAT=y
+# CONFIG_HOSTID is not set
+CONFIG_ID=y
+# CONFIG_GROUPS is not set
+# CONFIG_TEST is not set
+CONFIG_FEATURE_TEST_64=y
+CONFIG_TOUCH=y
+# CONFIG_FEATURE_TOUCH_NODEREF is not set
+# CONFIG_FEATURE_TOUCH_SUSV3 is not set
+# CONFIG_TR is not set
+# CONFIG_FEATURE_TR_CLASSES is not set
+# CONFIG_FEATURE_TR_EQUIV is not set
+# CONFIG_BASE64 is not set
+# CONFIG_WHO is not set
+# CONFIG_USERS is not set
+CONFIG_CAL=y
+# CONFIG_CATV is not set
+# CONFIG_CHGRP is not set
+CONFIG_CHMOD=y
+CONFIG_CHOWN=y
+CONFIG_FEATURE_CHOWN_LONG_OPTIONS=y
+# CONFIG_CHROOT is not set
+# CONFIG_CKSUM is not set
+# CONFIG_COMM is not set
+CONFIG_CP=y
+CONFIG_FEATURE_CP_LONG_OPTIONS=y
+# CONFIG_CUT is not set
+# CONFIG_DD is not set
+# CONFIG_FEATURE_DD_SIGNAL_HANDLING is not set
+# CONFIG_FEATURE_DD_THIRD_STATUS_LINE is not set
+# CONFIG_FEATURE_DD_IBS_OBS is not set
+# CONFIG_DF is not set
+# CONFIG_FEATURE_DF_FANCY is not set
+# CONFIG_DIRNAME is not set
+# CONFIG_DOS2UNIX is not set
+# CONFIG_UNIX2DOS is not set
+# CONFIG_DU is not set
+# CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K is not set
+CONFIG_ECHO=y
+CONFIG_FEATURE_FANCY_ECHO=y
+CONFIG_ENV=y
+CONFIG_FEATURE_ENV_LONG_OPTIONS=y
+# CONFIG_EXPAND is not set
+# CONFIG_FEATURE_EXPAND_LONG_OPTIONS is not set
+CONFIG_EXPR=y
+CONFIG_EXPR_MATH_SUPPORT_64=y
+CONFIG_FALSE=y
+# CONFIG_FOLD is not set
+# CONFIG_FSYNC is not set
+# CONFIG_HEAD is not set
+# CONFIG_FEATURE_FANCY_HEAD is not set
+# CONFIG_INSTALL is not set
+# CONFIG_FEATURE_INSTALL_LONG_OPTIONS is not set
+CONFIG_LN=y
+# CONFIG_LOGNAME is not set
+CONFIG_LS=y
+CONFIG_FEATURE_LS_FILETYPES=y
+CONFIG_FEATURE_LS_FOLLOWLINKS=y
+CONFIG_FEATURE_LS_RECURSIVE=y
+CONFIG_FEATURE_LS_SORTFILES=y
+CONFIG_FEATURE_LS_TIMESTAMPS=y
+CONFIG_FEATURE_LS_USERNAME=y
+CONFIG_FEATURE_LS_COLOR=y
+CONFIG_FEATURE_LS_COLOR_IS_DEFAULT=y
+CONFIG_MD5SUM=y
+CONFIG_MKDIR=y
+CONFIG_FEATURE_MKDIR_LONG_OPTIONS=y
+# CONFIG_MKFIFO is not set
+CONFIG_MKNOD=y
+# CONFIG_MV is not set
+# CONFIG_FEATURE_MV_LONG_OPTIONS is not set
+# CONFIG_NICE is not set
+# CONFIG_NOHUP is not set
+CONFIG_OD=y
+CONFIG_PRINTENV=y
+CONFIG_PRINTF=y
+CONFIG_PWD=y
+# CONFIG_READLINK is not set
+# CONFIG_FEATURE_READLINK_FOLLOW is not set
+# CONFIG_REALPATH is not set
+# CONFIG_RM is not set
+# CONFIG_RMDIR is not set
+# CONFIG_FEATURE_RMDIR_LONG_OPTIONS is not set
+CONFIG_SEQ=y
+# CONFIG_SHA1SUM is not set
+# CONFIG_SHA256SUM is not set
+# CONFIG_SHA512SUM is not set
+# CONFIG_SHA3SUM is not set
+CONFIG_SLEEP=y
+CONFIG_FEATURE_FANCY_SLEEP=y
+CONFIG_FEATURE_FLOAT_SLEEP=y
+CONFIG_SORT=y
+CONFIG_FEATURE_SORT_BIG=y
+CONFIG_SPLIT=y
+CONFIG_FEATURE_SPLIT_FANCY=y
+# CONFIG_STAT is not set
+# CONFIG_FEATURE_STAT_FORMAT is not set
+CONFIG_STTY=y
+# CONFIG_SUM is not set
+# CONFIG_SYNC is not set
+# CONFIG_TAC is not set
+CONFIG_TAIL=y
+CONFIG_FEATURE_FANCY_TAIL=y
+CONFIG_TEE=y
+CONFIG_FEATURE_TEE_USE_BLOCK_IO=y
+CONFIG_TRUE=y
+CONFIG_TTY=y
+# CONFIG_UNAME is not set
+# CONFIG_UNEXPAND is not set
+# CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS is not set
+# CONFIG_UNIQ is not set
+CONFIG_USLEEP=y
+# CONFIG_UUDECODE is not set
+# CONFIG_UUENCODE is not set
+CONFIG_WC=y
+# CONFIG_FEATURE_WC_LARGE is not set
+CONFIG_WHOAMI=y
+CONFIG_YES=y
+
+#
+# Common options for cp and mv
+#
+CONFIG_FEATURE_PRESERVE_HARDLINKS=y
+
+#
+# Common options for ls, more and telnet
+#
+CONFIG_FEATURE_AUTOWIDTH=y
+
+#
+# Common options for df, du, ls
+#
+CONFIG_FEATURE_HUMAN_READABLE=y
+
+#
+# Common options for md5sum, sha1sum, sha256sum, sha512sum, sha3sum
+#
+CONFIG_FEATURE_MD5_SHA1_SUM_CHECK=y
+
+#
+# Console Utilities
+#
+# CONFIG_CHVT is not set
+# CONFIG_FGCONSOLE is not set
+CONFIG_CLEAR=y
+# CONFIG_DEALLOCVT is not set
+# CONFIG_DUMPKMAP is not set
+# CONFIG_KBD_MODE is not set
+# CONFIG_LOADFONT is not set
+# CONFIG_LOADKMAP is not set
+# CONFIG_OPENVT is not set
+# CONFIG_RESET is not set
+# CONFIG_RESIZE is not set
+# CONFIG_FEATURE_RESIZE_PRINT is not set
+# CONFIG_SETCONSOLE is not set
+# CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS is not set
+# CONFIG_SETFONT is not set
+# CONFIG_FEATURE_SETFONT_TEXTUAL_MAP is not set
+CONFIG_DEFAULT_SETFONT_DIR=""
+# CONFIG_SETKEYCODES is not set
+# CONFIG_SETLOGCONS is not set
+# CONFIG_SHOWKEY is not set
+# CONFIG_FEATURE_LOADFONT_PSF2 is not set
+# CONFIG_FEATURE_LOADFONT_RAW is not set
+
+#
+# Debian Utilities
+#
+# CONFIG_MKTEMP is not set
+# CONFIG_PIPE_PROGRESS is not set
+# CONFIG_RUN_PARTS is not set
+# CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS is not set
+# CONFIG_FEATURE_RUN_PARTS_FANCY is not set
+# CONFIG_START_STOP_DAEMON is not set
+# CONFIG_FEATURE_START_STOP_DAEMON_FANCY is not set
+# CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS is not set
+CONFIG_WHICH=y
+
+#
+# Editors
+#
+# CONFIG_AWK is not set
+# CONFIG_FEATURE_AWK_LIBM is not set
+# CONFIG_FEATURE_AWK_GNU_EXTENSIONS is not set
+# CONFIG_CMP is not set
+# CONFIG_DIFF is not set
+# CONFIG_FEATURE_DIFF_LONG_OPTIONS is not set
+# CONFIG_FEATURE_DIFF_DIR is not set
+CONFIG_ED=y
+# CONFIG_PATCH is not set
+# CONFIG_SED is not set
+# CONFIG_VI is not set
+CONFIG_FEATURE_VI_MAX_LEN=0
+# CONFIG_FEATURE_VI_8BIT is not set
+# CONFIG_FEATURE_VI_COLON is not set
+# CONFIG_FEATURE_VI_YANKMARK is not set
+# CONFIG_FEATURE_VI_SEARCH is not set
+# CONFIG_FEATURE_VI_REGEX_SEARCH is not set
+# CONFIG_FEATURE_VI_USE_SIGNALS is not set
+# CONFIG_FEATURE_VI_DOT_CMD is not set
+# CONFIG_FEATURE_VI_READONLY is not set
+# CONFIG_FEATURE_VI_SETOPTS is not set
+# CONFIG_FEATURE_VI_SET is not set
+# CONFIG_FEATURE_VI_WIN_RESIZE is not set
+# CONFIG_FEATURE_VI_ASK_TERMINAL is not set
+# CONFIG_FEATURE_ALLOW_EXEC is not set
+
+#
+# Finding Utilities
+#
+# CONFIG_FIND is not set
+# CONFIG_FEATURE_FIND_PRINT0 is not set
+# CONFIG_FEATURE_FIND_MTIME is not set
+# CONFIG_FEATURE_FIND_MMIN is not set
+# CONFIG_FEATURE_FIND_PERM is not set
+# CONFIG_FEATURE_FIND_TYPE is not set
+# CONFIG_FEATURE_FIND_XDEV is not set
+# CONFIG_FEATURE_FIND_MAXDEPTH is not set
+# CONFIG_FEATURE_FIND_NEWER is not set
+# CONFIG_FEATURE_FIND_INUM is not set
+# CONFIG_FEATURE_FIND_EXEC is not set
+# CONFIG_FEATURE_FIND_USER is not set
+# CONFIG_FEATURE_FIND_GROUP is not set
+# CONFIG_FEATURE_FIND_NOT is not set
+# CONFIG_FEATURE_FIND_DEPTH is not set
+# CONFIG_FEATURE_FIND_PAREN is not set
+# CONFIG_FEATURE_FIND_SIZE is not set
+# CONFIG_FEATURE_FIND_PRUNE is not set
+# CONFIG_FEATURE_FIND_DELETE is not set
+# CONFIG_FEATURE_FIND_PATH is not set
+# CONFIG_FEATURE_FIND_REGEX is not set
+# CONFIG_FEATURE_FIND_CONTEXT is not set
+# CONFIG_FEATURE_FIND_LINKS is not set
+# CONFIG_GREP is not set
+# CONFIG_FEATURE_GREP_EGREP_ALIAS is not set
+# CONFIG_FEATURE_GREP_FGREP_ALIAS is not set
+# CONFIG_FEATURE_GREP_CONTEXT is not set
+# CONFIG_XARGS is not set
+# CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION is not set
+# CONFIG_FEATURE_XARGS_SUPPORT_QUOTES is not set
+# CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT is not set
+# CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM is not set
+
+#
+# Init Utilities
+#
+# CONFIG_BOOTCHARTD is not set
+# CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER is not set
+# CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE is not set
+# CONFIG_HALT is not set
+# CONFIG_FEATURE_CALL_TELINIT is not set
+CONFIG_TELINIT_PATH=""
+# CONFIG_INIT is not set
+# CONFIG_FEATURE_USE_INITTAB is not set
+# CONFIG_FEATURE_KILL_REMOVED is not set
+CONFIG_FEATURE_KILL_DELAY=0
+# CONFIG_FEATURE_INIT_SCTTY is not set
+# CONFIG_FEATURE_INIT_SYSLOG is not set
+# CONFIG_FEATURE_EXTRA_QUIET is not set
+# CONFIG_FEATURE_INIT_COREDUMPS is not set
+# CONFIG_FEATURE_INITRD is not set
+CONFIG_INIT_TERMINAL_TYPE=""
+# CONFIG_MESG is not set
+# CONFIG_FEATURE_MESG_ENABLE_ONLY_GROUP is not set
+
+#
+# Login/Password Management Utilities
+#
+# CONFIG_ADD_SHELL is not set
+# CONFIG_REMOVE_SHELL is not set
+# CONFIG_FEATURE_SHADOWPASSWDS is not set
+# CONFIG_USE_BB_PWD_GRP is not set
+# CONFIG_USE_BB_SHADOW is not set
+# CONFIG_USE_BB_CRYPT is not set
+# CONFIG_USE_BB_CRYPT_SHA is not set
+# CONFIG_ADDUSER is not set
+# CONFIG_FEATURE_ADDUSER_LONG_OPTIONS is not set
+# CONFIG_FEATURE_CHECK_NAMES is not set
+CONFIG_FIRST_SYSTEM_ID=0
+CONFIG_LAST_SYSTEM_ID=0
+# CONFIG_ADDGROUP is not set
+# CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS is not set
+# CONFIG_FEATURE_ADDUSER_TO_GROUP is not set
+# CONFIG_DELUSER is not set
+# CONFIG_DELGROUP is not set
+# CONFIG_FEATURE_DEL_USER_FROM_GROUP is not set
+# CONFIG_GETTY is not set
+# CONFIG_LOGIN is not set
+# CONFIG_LOGIN_SESSION_AS_CHILD is not set
+# CONFIG_PAM is not set
+# CONFIG_LOGIN_SCRIPTS is not set
+# CONFIG_FEATURE_NOLOGIN is not set
+# CONFIG_FEATURE_SECURETTY is not set
+# CONFIG_PASSWD is not set
+# CONFIG_FEATURE_PASSWD_WEAK_CHECK is not set
+# CONFIG_CRYPTPW is not set
+# CONFIG_CHPASSWD is not set
+CONFIG_FEATURE_DEFAULT_PASSWD_ALGO=""
+# CONFIG_SU is not set
+# CONFIG_FEATURE_SU_SYSLOG is not set
+# CONFIG_FEATURE_SU_CHECKS_SHELLS is not set
+# CONFIG_SULOGIN is not set
+# CONFIG_VLOCK is not set
+
+#
+# Linux Ext2 FS Progs
+#
+# CONFIG_CHATTR is not set
+# CONFIG_FSCK is not set
+# CONFIG_LSATTR is not set
+# CONFIG_TUNE2FS is not set
+
+#
+# Linux Module Utilities
+#
+# CONFIG_MODINFO is not set
+# CONFIG_MODPROBE_SMALL is not set
+# CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE is not set
+# CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED is not set
+# CONFIG_INSMOD is not set
+# CONFIG_RMMOD is not set
+# CONFIG_LSMOD is not set
+# CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT is not set
+# CONFIG_MODPROBE is not set
+# CONFIG_FEATURE_MODPROBE_BLACKLIST is not set
+# CONFIG_DEPMOD is not set
+
+#
+# Options common to multiple modutils
+#
+# CONFIG_FEATURE_2_4_MODULES is not set
+# CONFIG_FEATURE_INSMOD_TRY_MMAP is not set
+# CONFIG_FEATURE_INSMOD_VERSION_CHECKING is not set
+# CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS is not set
+# CONFIG_FEATURE_INSMOD_LOADINKMEM is not set
+# CONFIG_FEATURE_INSMOD_LOAD_MAP is not set
+# CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL is not set
+# CONFIG_FEATURE_CHECK_TAINTED_MODULE is not set
+# CONFIG_FEATURE_MODUTILS_ALIAS is not set
+# CONFIG_FEATURE_MODUTILS_SYMBOLS is not set
+CONFIG_DEFAULT_MODULES_DIR=""
+CONFIG_DEFAULT_DEPMOD_FILE=""
+
+#
+# Linux System Utilities
+#
+# CONFIG_BLOCKDEV is not set
+# CONFIG_FSTRIM is not set
+# CONFIG_MDEV is not set
+# CONFIG_FEATURE_MDEV_CONF is not set
+# CONFIG_FEATURE_MDEV_RENAME is not set
+# CONFIG_FEATURE_MDEV_RENAME_REGEXP is not set
+# CONFIG_FEATURE_MDEV_EXEC is not set
+# CONFIG_FEATURE_MDEV_LOAD_FIRMWARE is not set
+# CONFIG_REV is not set
+# CONFIG_ACPID is not set
+# CONFIG_FEATURE_ACPID_COMPAT is not set
+# CONFIG_BLKID is not set
+# CONFIG_FEATURE_BLKID_TYPE is not set
+# CONFIG_DMESG is not set
+# CONFIG_FEATURE_DMESG_PRETTY is not set
+# CONFIG_FBSET is not set
+# CONFIG_FEATURE_FBSET_FANCY is not set
+# CONFIG_FEATURE_FBSET_READMODE is not set
+# CONFIG_FDFLUSH is not set
+# CONFIG_FDFORMAT is not set
+# CONFIG_FDISK is not set
+# CONFIG_FDISK_SUPPORT_LARGE_DISKS is not set
+# CONFIG_FEATURE_FDISK_WRITABLE is not set
+# CONFIG_FEATURE_AIX_LABEL is not set
+# CONFIG_FEATURE_SGI_LABEL is not set
+# CONFIG_FEATURE_SUN_LABEL is not set
+# CONFIG_FEATURE_OSF_LABEL is not set
+# CONFIG_FEATURE_GPT_LABEL is not set
+# CONFIG_FEATURE_FDISK_ADVANCED is not set
+# CONFIG_FINDFS is not set
+# CONFIG_FLOCK is not set
+# CONFIG_FREERAMDISK is not set
+# CONFIG_FSCK_MINIX is not set
+# CONFIG_MKFS_EXT2 is not set
+# CONFIG_MKFS_MINIX is not set
+# CONFIG_FEATURE_MINIX2 is not set
+# CONFIG_MKFS_REISER is not set
+# CONFIG_MKFS_VFAT is not set
+CONFIG_GETOPT=y
+# CONFIG_FEATURE_GETOPT_LONG is not set
+CONFIG_HEXDUMP=y
+CONFIG_FEATURE_HEXDUMP_REVERSE=y
+CONFIG_HD=y
+# CONFIG_HWCLOCK is not set
+# CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS is not set
+# CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS is not set
+# CONFIG_IPCRM is not set
+# CONFIG_IPCS is not set
+# CONFIG_LOSETUP is not set
+# CONFIG_LSPCI is not set
+# CONFIG_LSUSB is not set
+# CONFIG_MKSWAP is not set
+# CONFIG_FEATURE_MKSWAP_UUID is not set
+CONFIG_MORE=y
+# CONFIG_MOUNT is not set
+# CONFIG_FEATURE_MOUNT_FAKE is not set
+# CONFIG_FEATURE_MOUNT_VERBOSE is not set
+# CONFIG_FEATURE_MOUNT_HELPERS is not set
+# CONFIG_FEATURE_MOUNT_LABEL is not set
+# CONFIG_FEATURE_MOUNT_NFS is not set
+# CONFIG_FEATURE_MOUNT_CIFS is not set
+# CONFIG_FEATURE_MOUNT_FLAGS is not set
+# CONFIG_FEATURE_MOUNT_FSTAB is not set
+# CONFIG_PIVOT_ROOT is not set
+# CONFIG_RDATE is not set
+# CONFIG_RDEV is not set
+# CONFIG_READPROFILE is not set
+# CONFIG_RTCWAKE is not set
+# CONFIG_SCRIPT is not set
+# CONFIG_SCRIPTREPLAY is not set
+# CONFIG_SETARCH is not set
+# CONFIG_SWAPONOFF is not set
+# CONFIG_FEATURE_SWAPON_PRI is not set
+# CONFIG_SWITCH_ROOT is not set
+# CONFIG_UMOUNT is not set
+# CONFIG_FEATURE_UMOUNT_ALL is not set
+# CONFIG_FEATURE_MOUNT_LOOP is not set
+# CONFIG_FEATURE_MOUNT_LOOP_CREATE is not set
+# CONFIG_FEATURE_MTAB_SUPPORT is not set
+# CONFIG_VOLUMEID is not set
+# CONFIG_FEATURE_VOLUMEID_BTRFS is not set
+# CONFIG_FEATURE_VOLUMEID_CRAMFS is not set
+# CONFIG_FEATURE_VOLUMEID_EXFAT is not set
+# CONFIG_FEATURE_VOLUMEID_EXT is not set
+# CONFIG_FEATURE_VOLUMEID_F2FS is not set
+# CONFIG_FEATURE_VOLUMEID_FAT is not set
+# CONFIG_FEATURE_VOLUMEID_HFS is not set
+# CONFIG_FEATURE_VOLUMEID_ISO9660 is not set
+# CONFIG_FEATURE_VOLUMEID_JFS is not set
+# CONFIG_FEATURE_VOLUMEID_LINUXRAID is not set
+# CONFIG_FEATURE_VOLUMEID_LINUXSWAP is not set
+# CONFIG_FEATURE_VOLUMEID_LUKS is not set
+# CONFIG_FEATURE_VOLUMEID_NILFS is not set
+# CONFIG_FEATURE_VOLUMEID_NTFS is not set
+# CONFIG_FEATURE_VOLUMEID_OCFS2 is not set
+# CONFIG_FEATURE_VOLUMEID_REISERFS is not set
+# CONFIG_FEATURE_VOLUMEID_ROMFS is not set
+# CONFIG_FEATURE_VOLUMEID_SQUASHFS is not set
+# CONFIG_FEATURE_VOLUMEID_SYSV is not set
+# CONFIG_FEATURE_VOLUMEID_UDF is not set
+# CONFIG_FEATURE_VOLUMEID_XFS is not set
+
+#
+# Miscellaneous Utilities
+#
+# CONFIG_CONSPY is not set
+# CONFIG_LESS is not set
+CONFIG_FEATURE_LESS_MAXLINES=0
+# CONFIG_FEATURE_LESS_BRACKETS is not set
+# CONFIG_FEATURE_LESS_FLAGS is not set
+# CONFIG_FEATURE_LESS_MARKS is not set
+# CONFIG_FEATURE_LESS_REGEXP is not set
+# CONFIG_FEATURE_LESS_WINCH is not set
+# CONFIG_FEATURE_LESS_ASK_TERMINAL is not set
+# CONFIG_FEATURE_LESS_DASHCMD is not set
+# CONFIG_FEATURE_LESS_LINENUMS is not set
+# CONFIG_NANDWRITE is not set
+# CONFIG_NANDDUMP is not set
+# CONFIG_RFKILL is not set
+# CONFIG_SETSERIAL is not set
+# CONFIG_UBIATTACH is not set
+# CONFIG_UBIDETACH is not set
+# CONFIG_UBIMKVOL is not set
+# CONFIG_UBIRMVOL is not set
+# CONFIG_UBIRSVOL is not set
+# CONFIG_UBIUPDATEVOL is not set
+# CONFIG_WALL is not set
+# CONFIG_ADJTIMEX is not set
+# CONFIG_BBCONFIG is not set
+# CONFIG_FEATURE_COMPRESS_BBCONFIG is not set
+# CONFIG_BEEP is not set
+CONFIG_FEATURE_BEEP_FREQ=0
+CONFIG_FEATURE_BEEP_LENGTH_MS=0
+# CONFIG_CHAT is not set
+# CONFIG_FEATURE_CHAT_NOFAIL is not set
+# CONFIG_FEATURE_CHAT_TTY_HIFI is not set
+# CONFIG_FEATURE_CHAT_IMPLICIT_CR is not set
+# CONFIG_FEATURE_CHAT_SWALLOW_OPTS is not set
+# CONFIG_FEATURE_CHAT_SEND_ESCAPES is not set
+# CONFIG_FEATURE_CHAT_VAR_ABORT_LEN is not set
+# CONFIG_FEATURE_CHAT_CLR_ABORT is not set
+# CONFIG_CHRT is not set
+# CONFIG_CROND is not set
+# CONFIG_FEATURE_CROND_D is not set
+# CONFIG_FEATURE_CROND_CALL_SENDMAIL is not set
+CONFIG_FEATURE_CROND_DIR=""
+# CONFIG_CRONTAB is not set
+# CONFIG_DC is not set
+# CONFIG_FEATURE_DC_LIBM is not set
+# CONFIG_DEVFSD is not set
+# CONFIG_DEVFSD_MODLOAD is not set
+# CONFIG_DEVFSD_FG_NP is not set
+# CONFIG_DEVFSD_VERBOSE is not set
+# CONFIG_FEATURE_DEVFS is not set
+# CONFIG_DEVMEM is not set
+# CONFIG_EJECT is not set
+# CONFIG_FEATURE_EJECT_SCSI is not set
+# CONFIG_FBSPLASH is not set
+# CONFIG_FLASHCP is not set
+# CONFIG_FLASH_LOCK is not set
+# CONFIG_FLASH_UNLOCK is not set
+# CONFIG_FLASH_ERASEALL is not set
+# CONFIG_IONICE is not set
+# CONFIG_INOTIFYD is not set
+# CONFIG_LAST is not set
+# CONFIG_FEATURE_LAST_SMALL is not set
+# CONFIG_FEATURE_LAST_FANCY is not set
+# CONFIG_HDPARM is not set
+# CONFIG_FEATURE_HDPARM_GET_IDENTITY is not set
+# CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF is not set
+# CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF is not set
+# CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET is not set
+# CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF is not set
+# CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA is not set
+# CONFIG_MAKEDEVS is not set
+# CONFIG_FEATURE_MAKEDEVS_LEAF is not set
+# CONFIG_FEATURE_MAKEDEVS_TABLE is not set
+# CONFIG_MAN is not set
+# CONFIG_MICROCOM is not set
+# CONFIG_MOUNTPOINT is not set
+# CONFIG_MT is not set
+# CONFIG_RAIDAUTORUN is not set
+# CONFIG_READAHEAD is not set
+# CONFIG_RUNLEVEL is not set
+# CONFIG_RX is not set
+CONFIG_SETSID=y
+CONFIG_STRINGS=y
+# CONFIG_TASKSET is not set
+# CONFIG_FEATURE_TASKSET_FANCY is not set
+# CONFIG_TIME is not set
+# CONFIG_TIMEOUT is not set
+# CONFIG_TTYSIZE is not set
+# CONFIG_VOLNAME is not set
+# CONFIG_WATCHDOG is not set
+
+#
+# Networking Utilities
+#
+# CONFIG_NAMEIF is not set
+# CONFIG_FEATURE_NAMEIF_EXTENDED is not set
+# CONFIG_NBDCLIENT is not set
+# CONFIG_NC is not set
+# CONFIG_NC_SERVER is not set
+# CONFIG_NC_EXTRA is not set
+# CONFIG_NC_110_COMPAT is not set
+# CONFIG_PING is not set
+# CONFIG_PING6 is not set
+# CONFIG_FEATURE_FANCY_PING is not set
+# CONFIG_WHOIS is not set
+# CONFIG_FEATURE_IPV6 is not set
+# CONFIG_FEATURE_UNIX_LOCAL is not set
+# CONFIG_FEATURE_PREFER_IPV4_ADDRESS is not set
+# CONFIG_VERBOSE_RESOLUTION_ERRORS is not set
+# CONFIG_ARP is not set
+# CONFIG_ARPING is not set
+# CONFIG_BRCTL is not set
+# CONFIG_FEATURE_BRCTL_FANCY is not set
+# CONFIG_FEATURE_BRCTL_SHOW is not set
+# CONFIG_DNSD is not set
+# CONFIG_ETHER_WAKE is not set
+# CONFIG_FAKEIDENTD is not set
+# CONFIG_FTPD is not set
+# CONFIG_FEATURE_FTP_WRITE is not set
+# CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST is not set
+# CONFIG_FTPGET is not set
+# CONFIG_FTPPUT is not set
+# CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS is not set
+# CONFIG_HOSTNAME is not set
+# CONFIG_HTTPD is not set
+# CONFIG_FEATURE_HTTPD_RANGES is not set
+# CONFIG_FEATURE_HTTPD_USE_SENDFILE is not set
+# CONFIG_FEATURE_HTTPD_SETUID is not set
+# CONFIG_FEATURE_HTTPD_BASIC_AUTH is not set
+# CONFIG_FEATURE_HTTPD_AUTH_MD5 is not set
+# CONFIG_FEATURE_HTTPD_CGI is not set
+# CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR is not set
+# CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV is not set
+# CONFIG_FEATURE_HTTPD_ENCODE_URL_STR is not set
+# CONFIG_FEATURE_HTTPD_ERROR_PAGES is not set
+# CONFIG_FEATURE_HTTPD_PROXY is not set
+# CONFIG_FEATURE_HTTPD_GZIP is not set
+# CONFIG_IFCONFIG is not set
+# CONFIG_FEATURE_IFCONFIG_STATUS is not set
+# CONFIG_FEATURE_IFCONFIG_SLIP is not set
+# CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ is not set
+# CONFIG_FEATURE_IFCONFIG_HW is not set
+# CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS is not set
+# CONFIG_IFENSLAVE is not set
+# CONFIG_IFPLUGD is not set
+# CONFIG_IFUPDOWN is not set
+CONFIG_IFUPDOWN_IFSTATE_PATH=""
+# CONFIG_FEATURE_IFUPDOWN_IP is not set
+# CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN is not set
+# CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN is not set
+# CONFIG_FEATURE_IFUPDOWN_IPV4 is not set
+# CONFIG_FEATURE_IFUPDOWN_IPV6 is not set
+# CONFIG_FEATURE_IFUPDOWN_MAPPING is not set
+# CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP is not set
+# CONFIG_INETD is not set
+# CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO is not set
+# CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD is not set
+# CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME is not set
+# CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME is not set
+# CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN is not set
+# CONFIG_FEATURE_INETD_RPC is not set
+# CONFIG_IP is not set
+# CONFIG_FEATURE_IP_ADDRESS is not set
+# CONFIG_FEATURE_IP_LINK is not set
+# CONFIG_FEATURE_IP_ROUTE is not set
+# CONFIG_FEATURE_IP_TUNNEL is not set
+# CONFIG_FEATURE_IP_RULE is not set
+# CONFIG_FEATURE_IP_SHORT_FORMS is not set
+# CONFIG_FEATURE_IP_RARE_PROTOCOLS is not set
+# CONFIG_IPADDR is not set
+# CONFIG_IPLINK is not set
+# CONFIG_IPROUTE is not set
+# CONFIG_IPTUNNEL is not set
+# CONFIG_IPRULE is not set
+# CONFIG_IPCALC is not set
+# CONFIG_FEATURE_IPCALC_FANCY is not set
+# CONFIG_FEATURE_IPCALC_LONG_OPTIONS is not set
+# CONFIG_NETSTAT is not set
+# CONFIG_FEATURE_NETSTAT_WIDE is not set
+# CONFIG_FEATURE_NETSTAT_PRG is not set
+# CONFIG_NSLOOKUP is not set
+# CONFIG_NTPD is not set
+# CONFIG_FEATURE_NTPD_SERVER is not set
+# CONFIG_PSCAN is not set
+# CONFIG_ROUTE is not set
+# CONFIG_SLATTACH is not set
+# CONFIG_TCPSVD is not set
+# CONFIG_TELNET is not set
+# CONFIG_FEATURE_TELNET_TTYPE is not set
+# CONFIG_FEATURE_TELNET_AUTOLOGIN is not set
+# CONFIG_TELNETD is not set
+# CONFIG_FEATURE_TELNETD_STANDALONE is not set
+# CONFIG_FEATURE_TELNETD_INETD_WAIT is not set
+# CONFIG_TFTP is not set
+# CONFIG_TFTPD is not set
+# CONFIG_FEATURE_TFTP_GET is not set
+# CONFIG_FEATURE_TFTP_PUT is not set
+# CONFIG_FEATURE_TFTP_BLOCKSIZE is not set
+# CONFIG_FEATURE_TFTP_PROGRESS_BAR is not set
+# CONFIG_TFTP_DEBUG is not set
+# CONFIG_TRACEROUTE is not set
+# CONFIG_TRACEROUTE6 is not set
+# CONFIG_FEATURE_TRACEROUTE_VERBOSE is not set
+# CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE is not set
+# CONFIG_FEATURE_TRACEROUTE_USE_ICMP is not set
+# CONFIG_TUNCTL is not set
+# CONFIG_FEATURE_TUNCTL_UG is not set
+# CONFIG_UDHCPC6 is not set
+# CONFIG_UDHCPD is not set
+# CONFIG_DHCPRELAY is not set
+# CONFIG_DUMPLEASES is not set
+# CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY is not set
+# CONFIG_FEATURE_UDHCPD_BASE_IP_ON_MAC is not set
+CONFIG_DHCPD_LEASES_FILE=""
+# CONFIG_UDHCPC is not set
+# CONFIG_FEATURE_UDHCPC_ARPING is not set
+# CONFIG_FEATURE_UDHCP_PORT is not set
+CONFIG_UDHCP_DEBUG=0
+# CONFIG_FEATURE_UDHCP_RFC3397 is not set
+# CONFIG_FEATURE_UDHCP_8021Q is not set
+CONFIG_UDHCPC_DEFAULT_SCRIPT=""
+CONFIG_UDHCPC_SLACK_FOR_BUGGY_SERVERS=0
+CONFIG_IFUPDOWN_UDHCPC_CMD_OPTIONS=""
+# CONFIG_UDPSVD is not set
+# CONFIG_VCONFIG is not set
+# CONFIG_WGET is not set
+# CONFIG_FEATURE_WGET_STATUSBAR is not set
+# CONFIG_FEATURE_WGET_AUTHENTICATION is not set
+# CONFIG_FEATURE_WGET_LONG_OPTIONS is not set
+# CONFIG_FEATURE_WGET_TIMEOUT is not set
+# CONFIG_ZCIP is not set
+
+#
+# Print Utilities
+#
+# CONFIG_LPD is not set
+# CONFIG_LPR is not set
+# CONFIG_LPQ is not set
+
+#
+# Mail Utilities
+#
+# CONFIG_MAKEMIME is not set
+CONFIG_FEATURE_MIME_CHARSET=""
+# CONFIG_POPMAILDIR is not set
+# CONFIG_FEATURE_POPMAILDIR_DELIVERY is not set
+# CONFIG_REFORMIME is not set
+# CONFIG_FEATURE_REFORMIME_COMPAT is not set
+# CONFIG_SENDMAIL is not set
+
+#
+# Process Utilities
+#
+# CONFIG_IOSTAT is not set
+# CONFIG_LSOF is not set
+# CONFIG_MPSTAT is not set
+# CONFIG_NMETER is not set
+# CONFIG_PMAP is not set
+# CONFIG_POWERTOP is not set
+# CONFIG_PSTREE is not set
+# CONFIG_PWDX is not set
+# CONFIG_SMEMCAP is not set
+# CONFIG_TOP is not set
+# CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE is not set
+# CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS is not set
+# CONFIG_FEATURE_TOP_SMP_CPU is not set
+# CONFIG_FEATURE_TOP_DECIMALS is not set
+# CONFIG_FEATURE_TOP_SMP_PROCESS is not set
+# CONFIG_FEATURE_TOPMEM is not set
+# CONFIG_UPTIME is not set
+# CONFIG_FEATURE_UPTIME_UTMP_SUPPORT is not set
+# CONFIG_FREE is not set
+# CONFIG_FUSER is not set
+CONFIG_KILL=y
+# CONFIG_KILLALL is not set
+# CONFIG_KILLALL5 is not set
+# CONFIG_PGREP is not set
+# CONFIG_PIDOF is not set
+# CONFIG_FEATURE_PIDOF_SINGLE is not set
+# CONFIG_FEATURE_PIDOF_OMIT is not set
+# CONFIG_PKILL is not set
+# CONFIG_PS is not set
+# CONFIG_FEATURE_PS_WIDE is not set
+# CONFIG_FEATURE_PS_LONG is not set
+# CONFIG_FEATURE_PS_TIME is not set
+# CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS is not set
+# CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS is not set
+# CONFIG_RENICE is not set
+# CONFIG_BB_SYSCTL is not set
+# CONFIG_FEATURE_SHOW_THREADS is not set
+# CONFIG_WATCH is not set
+
+#
+# Runit Utilities
+#
+# CONFIG_RUNSV is not set
+# CONFIG_RUNSVDIR is not set
+# CONFIG_FEATURE_RUNSVDIR_LOG is not set
+# CONFIG_SV is not set
+CONFIG_SV_DEFAULT_SERVICE_DIR=""
+# CONFIG_SVLOGD is not set
+# CONFIG_CHPST is not set
+# CONFIG_SETUIDGID is not set
+# CONFIG_ENVUIDGID is not set
+# CONFIG_ENVDIR is not set
+# CONFIG_SOFTLIMIT is not set
+# CONFIG_CHCON is not set
+# CONFIG_FEATURE_CHCON_LONG_OPTIONS is not set
+# CONFIG_GETENFORCE is not set
+# CONFIG_GETSEBOOL is not set
+# CONFIG_LOAD_POLICY is not set
+# CONFIG_MATCHPATHCON is not set
+# CONFIG_RESTORECON is not set
+# CONFIG_RUNCON is not set
+# CONFIG_FEATURE_RUNCON_LONG_OPTIONS is not set
+# CONFIG_SELINUXENABLED is not set
+# CONFIG_SETENFORCE is not set
+# CONFIG_SETFILES is not set
+# CONFIG_FEATURE_SETFILES_CHECK_OPTION is not set
+# CONFIG_SETSEBOOL is not set
+# CONFIG_SESTATUS is not set
+
+#
+# Shells
+#
+CONFIG_ASH=y
+CONFIG_ASH_BASH_COMPAT=y
+# CONFIG_ASH_IDLE_TIMEOUT is not set
+CONFIG_ASH_JOB_CONTROL=y
+CONFIG_ASH_ALIAS=y
+CONFIG_ASH_GETOPTS=y
+CONFIG_ASH_BUILTIN_ECHO=y
+CONFIG_ASH_BUILTIN_PRINTF=y
+CONFIG_ASH_BUILTIN_TEST=y
+CONFIG_ASH_CMDCMD=y
+# CONFIG_ASH_MAIL is not set
+CONFIG_ASH_OPTIMIZE_FOR_SIZE=y
+CONFIG_ASH_RANDOM_SUPPORT=y
+CONFIG_ASH_EXPAND_PRMT=y
+# CONFIG_CTTYHACK is not set
+# CONFIG_HUSH is not set
+# CONFIG_HUSH_BASH_COMPAT is not set
+# CONFIG_HUSH_BRACE_EXPANSION is not set
+# CONFIG_HUSH_HELP is not set
+# CONFIG_HUSH_INTERACTIVE is not set
+# CONFIG_HUSH_SAVEHISTORY is not set
+# CONFIG_HUSH_JOB is not set
+# CONFIG_HUSH_TICK is not set
+# CONFIG_HUSH_IF is not set
+# CONFIG_HUSH_LOOPS is not set
+# CONFIG_HUSH_CASE is not set
+# CONFIG_HUSH_FUNCTIONS is not set
+# CONFIG_HUSH_LOCAL is not set
+# CONFIG_HUSH_RANDOM_SUPPORT is not set
+# CONFIG_HUSH_EXPORT_N is not set
+# CONFIG_HUSH_MODE_X is not set
+# CONFIG_MSH is not set
+CONFIG_FEATURE_SH_IS_ASH=y
+# CONFIG_FEATURE_SH_IS_HUSH is not set
+# CONFIG_FEATURE_SH_IS_NONE is not set
+CONFIG_FEATURE_BASH_IS_ASH=y
+# CONFIG_FEATURE_BASH_IS_HUSH is not set
+# CONFIG_FEATURE_BASH_IS_NONE is not set
+CONFIG_SH_MATH_SUPPORT=y
+CONFIG_SH_MATH_SUPPORT_64=y
+CONFIG_FEATURE_SH_EXTRA_QUIET=y
+# CONFIG_FEATURE_SH_STANDALONE is not set
+# CONFIG_FEATURE_SH_NOFORK is not set
+CONFIG_FEATURE_SH_HISTFILESIZE=y
+
+#
+# System Logging Utilities
+#
+# CONFIG_SYSLOGD is not set
+# CONFIG_FEATURE_ROTATE_LOGFILE is not set
+# CONFIG_FEATURE_REMOTE_LOG is not set
+# CONFIG_FEATURE_SYSLOGD_DUP is not set
+# CONFIG_FEATURE_SYSLOGD_CFG is not set
+CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE=0
+# CONFIG_FEATURE_IPC_SYSLOG is not set
+CONFIG_FEATURE_IPC_SYSLOG_BUFFER_SIZE=0
+# CONFIG_LOGREAD is not set
+# CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING is not set
+# CONFIG_FEATURE_KMSG_SYSLOG is not set
+# CONFIG_KLOGD is not set
+# CONFIG_FEATURE_KLOGD_KLOGCTL is not set
+# CONFIG_LOGGER is not set
diff -rupN busybox-1.22.1/shell/ash.c ../src3m/busybox-1.22.1/shell/ash.c
--- busybox-1.22.1/shell/ash.c	2014-01-20 03:38:10.000000000 +0100
+++ ../src3m/busybox-1.22.1/shell/ash.c	2015-03-30 00:10:32.134188233 +0200
@@ -34,7 +34,7 @@
 #define DEBUG_SIG 1
 
 #define PROFILE 0
-
+#define _PATH_TTY xmalloc_ttyname(STDIN_FILENO)
 #define JOBS ENABLE_ASH_JOB_CONTROL
 
 #include <paths.h>
@@ -3489,8 +3489,8 @@ setsignal(int signo)
 	 */
 	act.sa_flags = 0;
 	sigfillset(&act.sa_mask);
-
-	sigaction_set(signo, &act);
+	signal(signo, act.sa_handler);
+	//sigaction_set(signo, &act);
 
 	*t = new_act;
 }
@@ -3915,9 +3915,9 @@ sprint_status(char *s, int status, int s
 		st &= 0x7f;
 //TODO: use bbox's get_signame? strsignal adds ~600 bytes to text+rodata
 		col = fmtstr(s, 32, strsignal(st));
-		if (WCOREDUMP(status)) {
-			col += fmtstr(s + col, 16, " (core dumped)");
-		}
+	///	if (WCOREDUMP(status)) {
+	///		col += fmtstr(s + col, 16, " (core dumped)");
+	///	}
 	} else if (!sigonly) {
 		st = WEXITSTATUS(status);
 		if (st)
diff -rupN busybox-1.22.1/shell/shell_common.c ../src3m/busybox-1.22.1/shell/shell_common.c
--- busybox-1.22.1/shell/shell_common.c	2014-01-09 19:15:44.000000000 +0100
+++ ../src3m/busybox-1.22.1/shell/shell_common.c	2015-03-30 00:10:31.562188215 +0200
@@ -55,7 +55,10 @@ shell_builtin_read(void FAST_FUNC (*setv
 	const char *opt_t,
 	const char *opt_u
 )
+
 {
+	return 0;
+#ifdef NOTDEF
 	unsigned err;
 	unsigned end_ms; /* -t TIMEOUT */
 	int fd; /* -u FD */
@@ -269,6 +272,7 @@ shell_builtin_read(void FAST_FUNC (*setv
 
 	errno = err;
 	return retval;
+#endif
 }
 
 /* ulimit builtin */
@@ -373,18 +377,18 @@ static const char ulimit_opt_string[] =
 static void printlim(unsigned opts, const struct rlimit *limit,
 			const struct limits *l)
 {
-	rlim_t val;
-
-	val = limit->rlim_max;
-	if (!(opts & OPT_hard))
-		val = limit->rlim_cur;
-
-	if (val == RLIM_INFINITY)
+//	rlim_t val;
+//
+	//val = limit->rlim_max;
+	//if (!(opts & OPT_hard))
+//	/	val = limit->rlim_cur;
+//
+	//if (val == RLIM_INFINITY)
 		printf("unlimited\n");
-	else {
-		val >>= l->factor_shift;
-		printf("%llu\n", (long long) val);
-	}
+	//else {
+//		val >>= l->factor_shift;
+	//	printf("%llu\n", (long long) val);
+	//}
 }
 
 int FAST_FUNC
@@ -392,7 +396,7 @@ shell_builtin_ulimit(char **argv)
 {
 	unsigned opts;
 	unsigned argc;
-
+#ifdef NOTDEF
 	/* We can't use getopt32: need to handle commands like
 	 * ulimit 123 -c2 -l 456
 	 */
@@ -495,6 +499,6 @@ shell_builtin_ulimit(char **argv)
 		}
 
 	} /* while (there are options) */
-
+#endif
 	return 0;
 }
